; Loading screen
b$4000 DEFB $00,$00,$00,$00,$00,$00,$01,$FF
 $4008 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4010 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4018 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4020 DEFB $00,$00,$00,$00,$01,$FF,$FF,$FF
 $4028 DEFB $FF,$FF,$FF,$FF,$FF,$00,$00,$00
 $4030 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4038 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4040 DEFB $00,$00,$00,$07,$FF,$FF,$FF,$FF
 $4048 DEFB $FF,$FF,$FF,$FF,$FF,$FC,$00,$00
 $4050 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4058 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4060 DEFB $00,$00,$03,$FF,$FF,$FF,$FF,$80
 $4068 DEFB $00,$0F,$F8,$00,$00,$FC,$00,$00
 $4070 DEFB $00,$00,$10,$C2,$0C,$18,$00,$00
 $4078 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4080 DEFB $00,$00,$7F,$FF,$FF,$FF,$E0,$00
 $4088 DEFB $00,$3F,$80,$00,$07,$F8,$00,$00
 $4090 DEFB $00,$10,$00,$84,$06,$04,$20,$00
 $4098 DEFB $00,$00,$00,$00,$01,$D7,$78,$00
 $40A0 DEFB $00,$01,$FF,$DF,$FF,$FF,$C0,$00
 $40A8 DEFB $0F,$FF,$F0,$1F,$FF,$C0,$00,$00
 $40B0 DEFB $00,$10,$03,$FF,$F0,$07,$E0,$00
 $40B8 DEFB $7F,$FC,$00,$0C,$E7,$85,$E2,$00
 $40C0 DEFB $00,$03,$F8,$03,$FF,$FF,$FF,$FF
 $40C8 DEFB $FF,$FF,$FF,$FF,$E0,$00,$00,$00
 $40D0 DEFB $00,$00,$00,$00,$00,$06,$00,$0F
 $40D8 DEFB $FF,$FF,$E0,$3F,$1F,$E1,$F0,$00
 $40E0 DEFB $00,$01,$C0,$00,$1F,$FF,$FF,$FF
 $40E8 DEFB $F3,$FF,$FF,$E0,$00,$01,$F9,$09
 $40F0 DEFB $F1,$F9,$01,$F0,$00,$00,$40,$01
 $40F8 DEFB $FF,$FF,$E0,$00,$00,$FE,$00,$00
 $4100 DEFB $00,$00,$00,$00,$00,$00,$07,$FF
 $4108 DEFB $FF,$FF,$FF,$80,$00,$00,$00,$00
 $4110 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4118 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4120 DEFB $00,$00,$00,$00,$03,$FF,$FF,$FF
 $4128 DEFB $FF,$FF,$FF,$FF,$FF,$80,$00,$00
 $4130 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4138 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4140 DEFB $00,$00,$00,$0F,$FF,$FF,$FF,$FF
 $4148 DEFB $FF,$FF,$FF,$FF,$87,$FC,$00,$00
 $4150 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4158 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4160 DEFB $00,$00,$07,$FF,$FF,$FF,$FF,$00
 $4168 DEFB $00,$0F,$F0,$00,$00,$FC,$00,$00
 $4170 DEFB $00,$00,$20,$83,$E8,$04,$00,$00
 $4178 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4180 DEFB $00,$00,$FF,$FF,$FF,$FF,$C0,$00
 $4188 DEFB $00,$7F,$80,$00,$0F,$F0,$00,$00
 $4190 DEFB $00,$10,$00,$84,$02,$04,$20,$00
 $4198 DEFB $00,$00,$00,$00,$03,$BF,$B0,$00
 $41A0 DEFB $00,$03,$FF,$9F,$FF,$FF,$C0,$00
 $41A8 DEFB $1F,$FF,$FF,$FF,$FF,$80,$00,$00
 $41B0 DEFB $00,$10,$FC,$07,$F0,$07,$C0,$00
 $41B8 DEFB $0F,$E0,$00,$1C,$F3,$6D,$E2,$00
 $41C0 DEFB $00,$03,$F8,$01,$FF,$FF,$FF,$FF
 $41C8 DEFB $FF,$FF,$FF,$FF,$C0,$00,$00,$00
 $41D0 DEFB $00,$00,$00,$00,$00,$03,$00,$7F
 $41D8 DEFB $FF,$FF,$F8,$3E,$1F,$E3,$F0,$00
 $41E0 DEFB $00,$01,$C0,$00,$0F,$FF,$FF,$FF
 $41E8 DEFB $E1,$FF,$FF,$C0,$00,$01,$09,$09
 $41F0 DEFB $11,$09,$09,$00,$00,$00,$40,$07
 $41F8 DEFB $FF,$FF,$F0,$00,$00,$F9,$00,$00
 $4200 DEFB $00,$00,$00,$00,$00,$00,$3F,$FF
 $4208 DEFB $FF,$FF,$FF,$F8,$00,$00,$00,$00
 $4210 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4218 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4220 DEFB $00,$00,$00,$00,$07,$FF,$FF,$FF
 $4228 DEFB $FF,$FF,$FF,$FF,$FF,$C0,$00,$00
 $4230 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4238 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4240 DEFB $00,$00,$00,$1F,$FF,$FF,$FF,$FF
 $4248 DEFB $FF,$FF,$FF,$F8,$07,$FC,$00,$00
 $4250 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4258 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4260 DEFB $00,$00,$0F,$FF,$FF,$FF,$FE,$00
 $4268 DEFB $00,$0F,$F0,$00,$00,$FC,$00,$00
 $4270 DEFB $00,$00,$40,$85,$D3,$F7,$C0,$00
 $4278 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4280 DEFB $00,$00,$FF,$FF,$FF,$FF,$C0,$00
 $4288 DEFB $00,$FF,$80,$00,$0F,$F0,$00,$00
 $4290 DEFB $00,$10,$00,$8C,$02,$04,$20,$00
 $4298 DEFB $01,$00,$00,$00,$07,$7F,$90,$00
 $42A0 DEFB $00,$03,$FF,$8F,$FF,$FF,$E0,$00
 $42A8 DEFB $3F,$FF,$FF,$FF,$FF,$00,$00,$00
 $42B0 DEFB $00,$1F,$C0,$07,$E0,$03,$C0,$00
 $42B8 DEFB $0F,$E0,$00,$12,$FE,$B9,$FC,$00
 $42C0 DEFB $00,$03,$F0,$01,$FF,$FF,$FF,$FF
 $42C8 DEFB $FF,$FF,$FF,$FF,$80,$00,$00,$00
 $42D0 DEFB $00,$00,$00,$00,$00,$01,$80,$0F
 $42D8 DEFB $0F,$FF,$FE,$1C,$01,$C3,$E0,$00
 $42E0 DEFB $00,$01,$C0,$00,$07,$FF,$FF,$FF
 $42E8 DEFB $C0,$FF,$FF,$C0,$00,$01,$08,$F1
 $42F0 DEFB $09,$08,$F1,$F8,$00,$00,$80,$0F
 $42F8 DEFB $FF,$FF,$F8,$00,$00,$61,$C0,$00
 $4300 DEFB $00,$00,$00,$00,$00,$00,$FF,$FF
 $4308 DEFB $FF,$FF,$FF,$FF,$00,$00,$00,$00
 $4310 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4318 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4320 DEFB $00,$00,$00,$00,$1F,$FF,$FF,$FF
 $4328 DEFB $FF,$FF,$FF,$FF,$FF,$E0,$00,$00
 $4330 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4338 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4340 DEFB $00,$00,$00,$3F,$FF,$FF,$FF,$FF
 $4348 DEFB $E0,$7F,$FF,$E0,$01,$FC,$00,$00
 $4350 DEFB $00,$00,$00,$FF,$FF,$80,$00,$00
 $4358 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4360 DEFB $00,$00,$0F,$FF,$FF,$FF,$FC,$00
 $4368 DEFB $00,$0F,$E0,$00,$00,$FC,$00,$00
 $4370 DEFB $00,$00,$80,$9D,$34,$0B,$40,$00
 $4378 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4380 DEFB $00,$00,$FF,$FF,$FF,$FF,$C0,$00
 $4388 DEFB $00,$FF,$80,$00,$1F,$F0,$00,$00
 $4390 DEFB $00,$10,$00,$8C,$02,$04,$20,$00
 $4398 DEFB $03,$80,$00,$00,$0F,$7F,$F8,$00
 $43A0 DEFB $00,$03,$FF,$0F,$FF,$FF,$F0,$00
 $43A8 DEFB $7F,$FF,$FF,$FF,$FF,$00,$00,$00
 $43B0 DEFB $00,$07,$C0,$03,$C0,$03,$80,$00
 $43B8 DEFB $1F,$F0,$00,$11,$CA,$B9,$F8,$00
 $43C0 DEFB $00,$01,$F0,$00,$FF,$FF,$FF,$FF
 $43C8 DEFB $FF,$FF,$FF,$FF,$00,$00,$00,$00
 $43D0 DEFB $00,$00,$00,$00,$00,$00,$C0,$00
 $43D8 DEFB $1F,$FC,$00,$00,$01,$C7,$E0,$00
 $43E0 DEFB $00,$00,$C0,$00,$01,$FF,$FF,$FF
 $43E8 DEFB $80,$7F,$FF,$C0,$00,$00,$00,$00
 $43F0 DEFB $00,$00,$00,$00,$00,$00,$80,$3F
 $43F8 DEFB $FF,$FF,$FE,$00,$00,$00,$30,$00
 $4400 DEFB $00,$00,$00,$00,$00,$03,$FF,$FF
 $4408 DEFB $FF,$FF,$FF,$FF,$E0,$00,$00,$00
 $4410 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4418 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4420 DEFB $00,$00,$00,$00,$3F,$FF,$FF,$FF
 $4428 DEFB $FF,$FF,$FF,$FF,$FF,$F0,$00,$00
 $4430 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4438 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4440 DEFB $00,$00,$00,$7F,$FF,$FF,$FF,$FE
 $4448 DEFB $00,$3F,$FF,$C0,$00,$FC,$00,$00
 $4450 DEFB $00,$00,$01,$80,$07,$80,$00,$00
 $4458 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4460 DEFB $00,$00,$1F,$FF,$FF,$FF,$F8,$00
 $4468 DEFB $00,$1F,$C0,$00,$01,$FC,$00,$00
 $4470 DEFB $00,$01,$00,$A4,$D4,$0A,$A0,$00
 $4478 DEFB $00,$00,$00,$00,$00,$00,$F8,$00
 $4480 DEFB $00,$01,$FF,$FF,$FF,$FF,$80,$00
 $4488 DEFB $01,$FF,$80,$00,$3F,$E0,$00,$00
 $4490 DEFB $00,$10,$00,$8C,$12,$04,$90,$00
 $4498 DEFB $07,$C0,$00,$00,$0F,$1F,$C8,$00
 $44A0 DEFB $00,$03,$FE,$0F,$FF,$FF,$F8,$01
 $44A8 DEFB $FF,$FF,$FF,$FF,$FE,$00,$00,$00
 $44B0 DEFB $00,$07,$FF,$FF,$E0,$00,$00,$00
 $44B8 DEFB $3F,$F8,$01,$F8,$DE,$FB,$F8,$00
 $44C0 DEFB $00,$01,$F0,$00,$7F,$FF,$FF,$FF
 $44C8 DEFB $FF,$FF,$FF,$FE,$00,$00,$00,$00
 $44D0 DEFB $00,$00,$00,$00,$00,$00,$40,$00
 $44D8 DEFB $1F,$FF,$00,$00,$01,$CF,$C0,$00
 $44E0 DEFB $00,$00,$C0,$00,$00,$FF,$FF,$FF
 $44E8 DEFB $88,$3F,$FF,$C0,$00,$00,$00,$00
 $44F0 DEFB $00,$00,$00,$00,$00,$00,$80,$7F
 $44F8 DEFB $FF,$FF,$FF,$00,$00,$00,$08,$00
 $4500 DEFB $00,$00,$00,$00,$00,$0F,$FF,$FF
 $4508 DEFB $FF,$FF,$FF,$FF,$F8,$00,$00,$00
 $4510 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4518 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4520 DEFB $00,$00,$00,$00,$7F,$FF,$FF,$FF
 $4528 DEFB $FF,$FF,$FF,$FF,$FF,$F8,$00,$00
 $4530 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4538 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4540 DEFB $00,$00,$00,$FF,$FF,$FF,$FF,$FC
 $4548 DEFB $00,$1F,$FF,$00,$00,$FC,$00,$00
 $4550 DEFB $00,$00,$02,$8F,$FF,$E0,$00,$00
 $4558 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4560 DEFB $00,$00,$3F,$FF,$FF,$FF,$F8,$00
 $4568 DEFB $00,$1F,$C0,$00,$01,$FC,$00,$00
 $4570 DEFB $00,$02,$00,$C4,$14,$09,$A0,$00
 $4578 DEFB $00,$00,$00,$00,$00,$00,$84,$00
 $4580 DEFB $00,$01,$FF,$FF,$FF,$FF,$80,$00
 $4588 DEFB $03,$FF,$80,$00,$7F,$E0,$00,$00
 $4590 DEFB $00,$10,$00,$8F,$FF,$FF,$F0,$00
 $4598 DEFB $07,$C0,$00,$00,$FF,$8F,$C8,$00
 $45A0 DEFB $00,$03,$FE,$07,$FF,$FF,$FC,$07
 $45A8 DEFB $FF,$FF,$FF,$FF,$FC,$00,$00,$00
 $45B0 DEFB $03,$F8,$00,$00,$1F,$00,$00,$00
 $45B8 DEFB $7F,$F8,$00,$2C,$35,$FE,$78,$00
 $45C0 DEFB $00,$01,$E0,$00,$7F,$FF,$FF,$FF
 $45C8 DEFB $FF,$FF,$FF,$FC,$00,$01,$08,$F1
 $45D0 DEFB $F0,$60,$F1,$F8,$00,$00,$40,$00
 $45D8 DEFB $3F,$FF,$80,$00,$01,$FF,$80,$00
 $45E0 DEFB $00,$00,$80,$00,$00,$7F,$FF,$FF
 $45E8 DEFB $84,$0F,$FF,$E0,$00,$00,$00,$F0
 $45F0 DEFB $F1,$F8,$F0,$00,$00,$01,$01,$FF
 $45F8 DEFB $FF,$FF,$FF,$C0,$00,$00,$04,$00
 $4600 DEFB $00,$00,$00,$00,$00,$3F,$FF,$FF
 $4608 DEFB $FF,$FF,$FF,$FF,$FC,$00,$00,$00
 $4610 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4618 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4620 DEFB $00,$00,$00,$00,$FF,$FF,$FF,$FF
 $4628 DEFB $FF,$FF,$FF,$FF,$FF,$FC,$00,$00
 $4630 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4638 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4640 DEFB $00,$00,$01,$FF,$FF,$FF,$FF,$F0
 $4648 DEFB $00,$0F,$FE,$00,$00,$FC,$00,$00
 $4650 DEFB $00,$00,$04,$94,$00,$10,$00,$00
 $4658 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4660 DEFB $00,$00,$7F,$FF,$FF,$FF,$F0,$00
 $4668 DEFB $00,$1F,$80,$00,$03,$FC,$00,$00
 $4670 DEFB $00,$04,$00,$84,$14,$08,$20,$00
 $4678 DEFB $00,$00,$00,$00,$00,$0F,$74,$00
 $4680 DEFB $00,$01,$FF,$FF,$FF,$FF,$80,$00
 $4688 DEFB $07,$FF,$80,$00,$FF,$E0,$00,$00
 $4690 DEFB $00,$10,$00,$8C,$00,$00,$10,$00
 $4698 DEFB $0F,$E0,$00,$01,$8F,$DF,$CE,$00
 $46A0 DEFB $00,$03,$FC,$07,$FF,$FF,$FF,$3F
 $46A8 DEFB $FF,$FF,$FF,$FF,$F8,$00,$00,$00
 $46B0 DEFB $00,$00,$00,$00,$00,$E0,$00,$00
 $46B8 DEFB $FF,$FC,$00,$24,$15,$FC,$F8,$00
 $46C0 DEFB $00,$01,$E0,$00,$3F,$FF,$FF,$FF
 $46C8 DEFB $FF,$FF,$FF,$F8,$00,$01,$09,$09
 $46D0 DEFB $08,$91,$09,$00,$00,$00,$40,$00
 $46D8 DEFB $7F,$FF,$C0,$00,$01,$FF,$80,$00
 $46E0 DEFB $00,$00,$80,$00,$00,$7F,$FF,$FF
 $46E8 DEFB $C2,$07,$FF,$F0,$00,$00,$01,$09
 $46F0 DEFB $09,$01,$08,$00,$00,$01,$07,$FF
 $46F8 DEFB $FF,$FF,$FF,$E0,$00,$00,$02,$00
 $4700 DEFB $00,$00,$00,$00,$00,$7F,$FF,$FF
 $4708 DEFB $FF,$FF,$FF,$FF,$FE,$00,$00,$00
 $4710 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4718 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4720 DEFB $00,$00,$00,$03,$FF,$FF,$FF,$FF
 $4728 DEFB $FF,$FF,$FF,$FF,$FF,$FC,$00,$00
 $4730 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4738 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4740 DEFB $00,$00,$03,$FF,$FF,$FF,$FF,$C0
 $4748 DEFB $00,$0F,$FC,$00,$00,$FC,$00,$00
 $4750 DEFB $00,$00,$08,$A2,$03,$F0,$00,$00
 $4758 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4760 DEFB $00,$00,$7F,$FF,$FF,$FF,$E0,$00
 $4768 DEFB $00,$3F,$80,$00,$03,$F8,$00,$00
 $4770 DEFB $00,$08,$00,$84,$14,$04,$20,$00
 $4778 DEFB $00,$00,$00,$00,$00,$60,$FC,$00
 $4780 DEFB $00,$01,$FF,$FF,$FF,$FF,$80,$00
 $4788 DEFB $0F,$FF,$E0,$03,$FF,$C0,$00,$00
 $4790 DEFB $00,$10,$00,$8F,$FF,$FF,$FF,$F8
 $4798 DEFB $1F,$F0,$00,$07,$AF,$D5,$F2,$00
 $47A0 DEFB $00,$03,$FC,$03,$FF,$FF,$FF,$FF
 $47A8 DEFB $FF,$FF,$FF,$FF,$F0,$00,$00,$00
 $47B0 DEFB $00,$00,$00,$00,$00,$18,$00,$03
 $47B8 DEFB $FF,$FF,$00,$3F,$FD,$EC,$F8,$00
 $47C0 DEFB $00,$01,$E0,$00,$1F,$FF,$FF,$FF
 $47C8 DEFB $FF,$FF,$FF,$F0,$00,$01,$09,$09
 $47D0 DEFB $09,$09,$01,$00,$00,$00,$40,$00
 $47D8 DEFB $FF,$FF,$E0,$00,$01,$FF,$00,$00
 $47E0 DEFB $00,$00,$80,$00,$00,$1F,$FF,$FF
 $47E8 DEFB $E1,$87,$FF,$F8,$00,$00,$01,$01
 $47F0 DEFB $09,$01,$00,$00,$00,$01,$3F,$FF
 $47F8 DEFB $FF,$FF,$FF,$FC,$00,$00,$00,$00
 $4800 DEFB $00,$00,$80,$00,$00,$0F,$FF,$FF
 $4808 DEFB $F0,$43,$FF,$FC,$00,$00,$01,$19
 $4810 DEFB $09,$F0,$F0,$00,$00,$03,$FF,$F8
 $4818 DEFB $1F,$FF,$FF,$FF,$80,$00,$00,$00
 $4820 DEFB $00,$00,$38,$00,$07,$00,$01,$FF
 $4828 DEFB $FF,$C0,$7F,$FF,$E0,$00,$0F,$1C
 $4830 DEFB $08,$44,$A4,$60,$00,$00,$00,$1F
 $4838 DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00
 $4840 DEFB $00,$00,$00,$03,$00,$03,$FF,$FF
 $4848 DEFB $FE,$31,$FF,$FF,$60,$00,$00,$00
 $4850 DEFB $00,$00,$00,$00,$1F,$FF,$FF,$80
 $4858 DEFB $7F,$FF,$00,$7F,$E0,$00,$00,$00
 $4860 DEFB $00,$00,$00,$00,$00,$C3,$FF,$FF
 $4868 DEFB $00,$00,$01,$07,$FC,$06,$00,$00
 $4870 DEFB $00,$00,$00,$00,$00,$00,$07,$FF
 $4878 DEFB $FF,$FF,$FF,$F8,$00,$00,$00,$00
 $4880 DEFB $00,$00,$00,$00,$00,$00,$38,$FF
 $4888 DEFB $FC,$20,$00,$00,$08,$00,$00,$0F
 $4890 DEFB $80,$00,$00,$00,$00,$00,$00,$00
 $4898 DEFB $7F,$FF,$1F,$FF,$FF,$FC,$00,$00
 $48A0 DEFB $00,$00,$00,$00,$00,$00,$00,$07
 $48A8 DEFB $00,$00,$03,$00,$00,$00,$00,$00
 $48B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $48B8 DEFB $FF,$FF,$80,$00,$00,$00,$00,$00
 $48C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $48C8 DEFB $00,$60,$00,$00,$03,$00,$00,$00
 $48D0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $48D8 DEFB $FF,$FF,$E0,$00,$00,$00,$00,$00
 $48E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $48E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $48F0 DEFB $00,$00,$00,$00,$00,$00,$02,$FF
 $48F8 DEFB $00,$00,$00,$07,$F0,$00,$00,$00
 $4900 DEFB $00,$00,$00,$00,$00,$07,$FF,$FF
 $4908 DEFB $F8,$31,$FF,$FE,$00,$00,$01,$09
 $4910 DEFB $09,$01,$08,$00,$00,$02,$00,$00
 $4918 DEFB $3F,$FF,$7F,$FF,$C0,$00,$00,$00
 $4920 DEFB $00,$00,$0C,$00,$01,$80,$00,$FF
 $4928 DEFB $FF,$C0,$FF,$FF,$E0,$00,$10,$93
 $4930 DEFB $08,$44,$64,$20,$00,$00,$00,$7F
 $4938 DEFB $FF,$FF,$FF,$C0,$00,$00,$00,$00
 $4940 DEFB $00,$00,$00,$01,$80,$07,$FF,$FF
 $4948 DEFB $FE,$08,$FF,$FF,$10,$00,$00,$00
 $4950 DEFB $00,$00,$00,$00,$01,$FF,$F0,$00
 $4958 DEFB $FF,$FF,$80,$00,$00,$00,$00,$00
 $4960 DEFB $00,$00,$00,$00,$00,$71,$FF,$FE
 $4968 DEFB $80,$00,$00,$C0,$FE,$01,$00,$00
 $4970 DEFB $00,$00,$00,$00,$00,$07,$FF,$FF
 $4978 DEFB $FF,$FF,$FF,$FF,$00,$00,$00,$00
 $4980 DEFB $00,$00,$00,$00,$00,$00,$0C,$3F
 $4988 DEFB $FE,$18,$00,$00,$06,$00,$00,$00
 $4990 DEFB $7E,$00,$00,$00,$00,$00,$00,$00
 $4998 DEFB $7F,$FF,$00,$3F,$F0,$00,$00,$00
 $49A0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $49A8 DEFB $80,$00,$00,$C0,$00,$00,$00,$00
 $49B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49B8 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $49C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49C8 DEFB $00,$18,$00,$00,$00,$E0,$00,$00
 $49D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49E0 DEFB $00,$00,$00,$0F,$FF,$F0,$00,$00
 $49E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49F0 DEFB $00,$00,$00,$00,$00,$00,$04,$00
 $49F8 DEFB $F0,$7F,$00,$0F,$F8,$00,$00,$00
 $4A00 DEFB $00,$00,$00,$00,$00,$01,$FF,$FF
 $4A08 DEFB $FC,$0C,$FF,$FF,$00,$00,$00,$F0
 $4A10 DEFB $F1,$F8,$F0,$00,$00,$00,$00,$00
 $4A18 DEFB $7F,$FF,$0F,$FF,$FE,$00,$00,$00
 $4A20 DEFB $00,$00,$07,$00,$00,$C0,$00,$FF
 $4A28 DEFB $FF,$C1,$FF,$FF,$E0,$00,$0F,$10
 $4A30 DEFB $9C,$E4,$23,$E0,$00,$00,$01,$FF
 $4A38 DEFB $FF,$FF,$FF,$F0,$00,$00,$00,$00
 $4A40 DEFB $00,$00,$00,$00,$E0,$07,$FF,$FF
 $4A48 DEFB $FC,$06,$3F,$FF,$8C,$00,$00,$00
 $4A50 DEFB $00,$00,$00,$00,$00,$3E,$00,$01
 $4A58 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4A60 DEFB $00,$00,$00,$00,$00,$18,$FF,$FF
 $4A68 DEFB $40,$00,$00,$30,$00,$00,$C0,$00
 $4A70 DEFB $00,$00,$00,$00,$00,$3F,$FF,$FF
 $4A78 DEFB $FF,$FF,$FF,$FF,$E0,$00,$00,$00
 $4A80 DEFB $00,$00,$00,$00,$00,$00,$06,$03
 $4A88 DEFB $FF,$06,$00,$00,$01,$C0,$00,$00
 $4A90 DEFB $18,$00,$00,$00,$00,$00,$00,$00
 $4A98 DEFB $7F,$FF,$00,$00,$00,$00,$00,$00
 $4AA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AA8 DEFB $C0,$00,$00,$30,$00,$00,$00,$00
 $4AB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AB8 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4AC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AC8 DEFB $00,$07,$00,$00,$00,$1F,$00,$00
 $4AD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AF8 DEFB $0F,$FF,$C0,$07,$F0,$00,$00,$00
 $4B00 DEFB $00,$00,$00,$00,$00,$00,$FF,$FF
 $4B08 DEFB $FE,$02,$7F,$FF,$80,$00,$00,$00
 $4B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4B18 DEFB $7F,$FF,$80,$3F,$E0,$00,$00,$00
 $4B20 DEFB $00,$00,$01,$80,$00,$70,$00,$FF
 $4B28 DEFB $FF,$C3,$FF,$FF,$C0,$00,$00,$00
 $4B30 DEFB $00,$00,$00,$00,$00,$00,$07,$FF
 $4B38 DEFB $FF,$FF,$FF,$FF,$00,$00,$00,$00
 $4B40 DEFB $00,$00,$00,$00,$30,$0F,$FF,$FF
 $4B48 DEFB $F8,$01,$0F,$FF,$82,$00,$00,$00
 $4B50 DEFB $00,$00,$00,$00,$00,$00,$00,$03
 $4B58 DEFB $FF,$FF,$F0,$00,$00,$00,$00,$00
 $4B60 DEFB $00,$00,$00,$00,$00,$0C,$7F,$FF
 $4B68 DEFB $B0,$00,$00,$08,$00,$00,$20,$00
 $4B70 DEFB $00,$00,$00,$10,$03,$FF,$FF,$FF
 $4B78 DEFB $FF,$FF,$FF,$FF,$FE,$00,$00,$00
 $4B80 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $4B88 DEFB $7F,$01,$00,$00,$00,$38,$00,$00
 $4B90 DEFB $E0,$00,$00,$00,$00,$00,$00,$00
 $4B98 DEFB $7F,$FF,$00,$00,$00,$00,$00,$00
 $4BA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4BA8 DEFB $70,$00,$00,$0C,$00,$00,$00,$00
 $4BB0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4BB8 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4BC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4BC8 DEFB $00,$00,$C0,$00,$00,$03,$00,$00
 $4BD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4BD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4BE0 DEFB $00,$00,$00,$7F,$FF,$FE,$00,$00
 $4BE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4BF0 DEFB $00,$00,$00,$00,$00,$00,$02,$00
 $4BF8 DEFB $03,$FF,$E0,$07,$F0,$00,$00,$00
 $4C00 DEFB $00,$00,$00,$00,$00,$00,$1F,$FF
 $4C08 DEFB $FF,$01,$9F,$FF,$C0,$00,$00,$00
 $4C10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4C18 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4C20 DEFB $00,$00,$00,$E0,$00,$18,$01,$FF
 $4C28 DEFB $FF,$C7,$FF,$FF,$C0,$00,$00,$00
 $4C30 DEFB $00,$00,$00,$00,$00,$00,$3F,$FF
 $4C38 DEFB $FF,$FF,$FF,$FF,$F0,$00,$00,$00
 $4C40 DEFB $00,$00,$00,$00,$1C,$1F,$FF,$FF
 $4C48 DEFB $F0,$00,$C7,$FF,$C1,$80,$00,$00
 $4C50 DEFB $00,$00,$00,$00,$00,$00,$00,$0F
 $4C58 DEFB $FF,$FF,$FC,$00,$00,$00,$00,$00
 $4C60 DEFB $00,$00,$00,$00,$00,$06,$1F,$FF
 $4C68 DEFB $C8,$00,$00,$06,$00,$00,$18,$00
 $4C70 DEFB $00,$00,$00,$0F,$FF,$FF,$FF,$FF
 $4C78 DEFB $FF,$FF,$FF,$FF,$FF,$E0,$00,$00
 $4C80 DEFB $00,$00,$00,$00,$00,$00,$00,$C0
 $4C88 DEFB $00,$00,$C0,$00,$00,$07,$C0,$03
 $4C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4C98 DEFB $7F,$FF,$80,$00,$00,$00,$00,$00
 $4CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CA8 DEFB $18,$00,$00,$03,$00,$00,$00,$00
 $4CB0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4CB8 DEFB $FF,$FF,$C0,$00,$00,$00,$00,$00
 $4CC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CC8 DEFB $00,$00,$30,$00,$00,$3C,$00,$00
 $4CD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CE0 DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00
 $4CE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4CF8 DEFB $F7,$FF,$F0,$07,$F0,$00,$00,$00
 $4D00 DEFB $00,$00,$00,$FF,$E0,$00,$07,$FF
 $4D08 DEFB $FF,$80,$5F,$FF,$C0,$00,$0F,$10
 $4D10 DEFB $9C,$E4,$23,$E0,$00,$00,$00,$03
 $4D18 DEFB $FF,$FF,$E0,$00,$00,$00,$00,$00
 $4D20 DEFB $00,$00,$00,$30,$00,$0C,$0F,$FF
 $4D28 DEFB $FF,$87,$FF,$FF,$80,$00,$00,$00
 $4D30 DEFB $00,$00,$00,$00,$00,$01,$FF,$FF
 $4D38 DEFB $FF,$FF,$FF,$FF,$FF,$F8,$00,$00
 $4D40 DEFB $00,$00,$00,$00,$06,$1F,$FF,$FF
 $4D48 DEFB $E0,$00,$31,$FF,$E0,$40,$00,$00
 $4D50 DEFB $00,$00,$00,$00,$00,$00,$00,$3F
 $4D58 DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00
 $4D60 DEFB $00,$00,$00,$00,$00,$03,$8F,$FF
 $4D68 DEFB $E6,$00,$00,$01,$00,$00,$06,$00
 $4D70 DEFB $00,$00,$00,$07,$FF,$FF,$FF,$FB
 $4D78 DEFB $FF,$FF,$FF,$FF,$FF,$FC,$1C,$00
 $4D80 DEFB $00,$00,$00,$00,$00,$00,$00,$70
 $4D88 DEFB $00,$00,$20,$00,$00,$00,$3F,$FC
 $4D90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4D98 DEFB $7F,$FF,$80,$00,$00,$00,$00,$00
 $4DA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DA8 DEFB $0E,$00,$00,$00,$C0,$00,$00,$00
 $4DB0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4DB8 DEFB $FF,$FF,$E0,$00,$00,$00,$00,$00
 $4DC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DC8 DEFB $00,$00,$0F,$00,$07,$C0,$00,$00
 $4DD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DD8 DEFB $00,$00,$00,$01,$C0,$00,$00,$00
 $4DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DF0 DEFB $00,$00,$00,$00,$00,$00,$00,$C2
 $4DF8 DEFB $0F,$FF,$F8,$01,$C0,$00,$00,$00
 $4E00 DEFB $00,$00,$7F,$80,$38,$00,$03,$FF
 $4E08 DEFB $FF,$80,$3F,$FF,$E0,$00,$10,$93
 $4E10 DEFB $08,$46,$24,$00,$00,$00,$00,$07
 $4E18 DEFB $FF,$FF,$F8,$00,$00,$00,$00,$00
 $4E20 DEFB $00,$00,$00,$18,$00,$06,$3F,$FF
 $4E28 DEFB $FF,$87,$FF,$FF,$00,$00,$00,$00
 $4E30 DEFB $00,$00,$00,$00,$00,$3F,$FF,$FF
 $4E38 DEFB $1F,$FC,$7F,$FF,$FF,$C0,$00,$00
 $4E40 DEFB $00,$00,$00,$00,$03,$1F,$FF,$FF
 $4E48 DEFB $C0,$00,$08,$7F,$F0,$30,$00,$00
 $4E50 DEFB $00,$00,$00,$00,$00,$00,$00,$FF
 $4E58 DEFB $FF,$FF,$FF,$80,$00,$00,$00,$00
 $4E60 DEFB $00,$00,$00,$00,$00,$00,$C7,$FF
 $4E68 DEFB $F1,$00,$00,$00,$C0,$00,$01,$C0
 $4E70 DEFB $00,$00,$00,$01,$FF,$FF,$FF,$FC
 $4E78 DEFB $7F,$FF,$FF,$FF,$FF,$FF,$F0,$00
 $4E80 DEFB $00,$00,$00,$00,$00,$00,$00,$18
 $4E88 DEFB $00,$00,$18,$00,$00,$00,$00,$00
 $4E90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4E98 DEFB $FF,$FF,$80,$00,$00,$00,$00,$00
 $4EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4EA8 DEFB $03,$00,$00,$00,$30,$00,$00,$00
 $4EB0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4EB8 DEFB $FF,$FF,$E0,$00,$00,$00,$00,$00
 $4EC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4EC8 DEFB $00,$00,$00,$FF,$F8,$00,$00,$00
 $4ED0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4ED8 DEFB $00,$00,$00,$07,$F0,$00,$00,$00
 $4EE0 DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00
 $4EE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4EF0 DEFB $00,$00,$00,$00,$00,$00,$00,$20
 $4EF8 DEFB $0F,$FF,$F8,$00,$00,$00,$00,$00
 $4F00 DEFB $00,$00,$60,$00,$0C,$00,$01,$FF
 $4F08 DEFB $FF,$C0,$3F,$FF,$E0,$00,$10,$1C
 $4F10 DEFB $08,$45,$24,$00,$00,$00,$00,$0F
 $4F18 DEFB $FF,$FF,$FE,$00,$00,$00,$00,$00
 $4F20 DEFB $00,$00,$00,$0E,$00,$01,$FF,$FF
 $4F28 DEFB $FF,$03,$FF,$FF,$00,$00,$00,$00
 $4F30 DEFB $00,$00,$00,$00,$01,$FF,$FF,$F8
 $4F38 DEFB $3F,$FE,$07,$FF,$FE,$00,$00,$00
 $4F40 DEFB $00,$00,$00,$00,$01,$8F,$FF,$FF
 $4F48 DEFB $80,$00,$06,$1F,$F8,$08,$00,$00
 $4F50 DEFB $00,$00,$00,$00,$00,$00,$01,$FF
 $4F58 DEFB $FF,$FF,$FF,$E0,$00,$00,$00,$00
 $4F60 DEFB $00,$00,$00,$00,$00,$00,$63,$FF
 $4F68 DEFB $F8,$C0,$00,$00,$30,$00,$00,$30
 $4F70 DEFB $00,$00,$00,$00,$01,$FF,$FE,$00
 $4F78 DEFB $7F,$FF,$7F,$FF,$FF,$FF,$00,$00
 $4F80 DEFB $00,$00,$00,$00,$00,$00,$00,$0C
 $4F88 DEFB $00,$00,$04,$00,$00,$00,$00,$00
 $4F90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4F98 DEFB $FF,$FF,$80,$00,$00,$00,$00,$00
 $4FA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4FA8 DEFB $01,$80,$00,$00,$0C,$00,$00,$00
 $4FB0 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4FB8 DEFB $FF,$FF,$E0,$00,$00,$00,$00,$00
 $4FC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4FC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4FD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4FD8 DEFB $00,$00,$00,$07,$F0,$00,$00,$00
 $4FE0 DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00
 $4FE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4FF0 DEFB $00,$00,$00,$00,$00,$00,$00,$18
 $4FF8 DEFB $9F,$FF,$FC,$00,$00,$00,$00,$00
 $5000 DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00
 $5008 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5010 DEFB $00,$00,$00,$00,$00,$00,$00,$04
 $5018 DEFB $7F,$FF,$FC,$00,$00,$00,$00,$00
 $5020 DEFB $00,$00,$00,$FE,$66,$7F,$00,$00
 $5028 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5030 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5038 DEFB $0F,$F7,$18,$00,$40,$00,$00,$00
 $5040 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5048 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5050 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5058 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5060 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5068 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5070 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5078 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5080 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5088 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5090 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5098 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5100 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5108 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5110 DEFB $00,$00,$00,$00,$00,$00,$00,$03
 $5118 DEFB $0F,$FF,$FF,$00,$00,$00,$00,$00
 $5120 DEFB $00,$00,$00,$FE,$66,$7F,$00,$00
 $5128 DEFB $00,$00,$7C,$00,$00,$00,$00,$00
 $5130 DEFB $10,$00,$04,$00,$20,$00,$00,$00
 $5138 DEFB $0F,$FC,$E2,$20,$60,$00,$00,$00
 $5140 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5148 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5150 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5158 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5160 DEFB $00,$3F,$F0,$0F,$F0,$0F,$FC,$0F
 $5168 DEFB $F0,$30,$0C,$00,$00,$0F,$F0,$0F
 $5170 DEFB $F0,$30,$0C,$3F,$F0,$30,$0C,$FF
 $5178 DEFB $FC,$3F,$FC,$3F,$F0,$0F,$F0,$00
 $5180 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5188 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5190 DEFB $04,$00,$00,$00,$00,$00,$00,$00
 $5198 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51A0 DEFB $00,$30,$0C,$3F,$FC,$30,$00,$3F
 $51A8 DEFB $F0,$0F,$F0,$30,$0C,$3F,$F0,$30
 $51B0 DEFB $0C,$3F,$FC,$00,$00,$30,$0C,$0F
 $51B8 DEFB $F0,$30,$0C,$0F,$F0,$3F,$FC,$00
 $51C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51E0 DEFB $7C,$00,$10,$00,$00,$00,$00,$00
 $51E8 DEFB $20,$10,$00,$00,$00,$00,$00,$00
 $51F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5200 DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00
 $5208 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5210 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5218 DEFB $D3,$FF,$FD,$80,$00,$00,$00,$00
 $5220 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5228 DEFB $00,$00,$42,$1C,$38,$38,$38,$78
 $5230 DEFB $38,$38,$04,$00,$20,$44,$00,$00
 $5238 DEFB $07,$FF,$01,$80,$00,$00,$00,$00
 $5240 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5248 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5250 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5258 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5260 DEFB $00,$30,$0C,$30,$00,$00,$C0,$30
 $5268 DEFB $0C,$3C,$0C,$00,$00,$30,$0C,$30
 $5270 DEFB $0C,$3C,$3C,$30,$0C,$30,$0C,$03
 $5278 DEFB $00,$30,$00,$30,$0C,$30,$00,$00
 $5280 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5288 DEFB $00,$00,$00,$00,$00,$00,$38,$78
 $5290 DEFB $04,$00,$00,$00,$00,$00,$00,$00
 $5298 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52A0 DEFB $00,$3C,$3C,$30,$00,$30,$00,$30
 $52A8 DEFB $0C,$30,$0C,$30,$0C,$30,$0C,$3C
 $52B0 DEFB $0C,$30,$00,$00,$00,$30,$0C,$30
 $52B8 DEFB $0C,$30,$0C,$30,$00,$30,$00,$00
 $52C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52E0 DEFB $42,$44,$38,$38,$38,$00,$00,$38
 $52E8 DEFB $28,$00,$00,$00,$00,$00,$00,$00
 $52F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5300 DEFB $00,$00,$00,$F8,$3C,$1F,$00,$00
 $5308 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5310 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5318 DEFB $0C,$FF,$FE,$60,$00,$00,$00,$00
 $5320 DEFB $00,$00,$00,$7E,$66,$7E,$00,$00
 $5328 DEFB $00,$00,$42,$20,$44,$40,$44,$44
 $5330 DEFB $10,$44,$3C,$00,$3C,$44,$00,$00
 $5338 DEFB $03,$FF,$EC,$00,$10,$00,$00,$00
 $5340 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5348 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5350 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5358 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5360 DEFB $00,$30,$0C,$0F,$F0,$00,$C0,$30
 $5368 DEFB $0C,$33,$0C,$00,$00,$30,$00,$30
 $5370 DEFB $0C,$33,$CC,$30,$0C,$30,$0C,$03
 $5378 DEFB $00,$3F,$F0,$30,$0C,$0F,$F0,$00
 $5380 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5388 DEFB $00,$00,$00,$00,$00,$00,$04,$44
 $5390 DEFB $3C,$00,$00,$00,$00,$00,$00,$00
 $5398 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53A0 DEFB $00,$33,$CC,$3F,$F0,$30,$00,$3F
 $53A8 DEFB $F0,$30,$0C,$30,$0C,$30,$0C,$33
 $53B0 DEFB $0C,$3F,$F0,$00,$00,$3F,$FC,$30
 $53B8 DEFB $0C,$30,$0C,$0F,$F0,$3F,$F0,$00
 $53C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53E0 DEFB $7C,$44,$10,$44,$40,$10,$00,$40
 $53E8 DEFB $30,$30,$00,$00,$00,$00,$00,$00
 $53F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5400 DEFB $00,$00,$00,$FE,$18,$7F,$00,$00
 $5408 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5410 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5418 DEFB $13,$3F,$FE,$18,$00,$00,$00,$00
 $5420 DEFB $00,$00,$00,$7E,$66,$7E,$00,$00
 $5428 DEFB $00,$00,$7C,$20,$78,$38,$78,$44
 $5430 DEFB $10,$78,$44,$00,$22,$44,$00,$00
 $5438 DEFB $01,$FF,$C2,$80,$00,$00,$00,$00
 $5440 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5448 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5450 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5458 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5460 DEFB $00,$3F,$F0,$00,$0C,$00,$C0,$30
 $5468 DEFB $0C,$30,$CC,$00,$00,$30,$00,$30
 $5470 DEFB $0C,$30,$0C,$3F,$F0,$30,$0C,$03
 $5478 DEFB $00,$30,$00,$3F,$F0,$00,$0C,$00
 $5480 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5488 DEFB $00,$00,$00,$00,$00,$00,$3C,$44
 $5490 DEFB $44,$00,$00,$00,$00,$00,$00,$00
 $5498 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54A0 DEFB $00,$30,$0C,$30,$00,$30,$00,$30
 $54A8 DEFB $0C,$30,$0C,$30,$0C,$3F,$F0,$30
 $54B0 DEFB $CC,$30,$00,$00,$00,$30,$0C,$30
 $54B8 DEFB $0C,$30,$0C,$00,$0C,$30,$00,$00
 $54C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54E0 DEFB $42,$44,$10,$78,$38,$00,$00,$38
 $54E8 DEFB $30,$10,$00,$00,$00,$00,$00,$00
 $54F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5500 DEFB $00,$00,$00,$FE,$18,$7F,$00,$00
 $5508 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5510 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5518 DEFB $1C,$CF,$FD,$04,$00,$00,$00,$00
 $5520 DEFB $00,$00,$00,$3E,$7E,$7C,$00,$00
 $5528 DEFB $00,$00,$40,$20,$40,$04,$40,$44
 $5530 DEFB $10,$40,$44,$00,$22,$3C,$00,$00
 $5538 DEFB $00,$7F,$00,$78,$10,$00,$00,$00
 $5540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5548 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5550 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5558 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5560 DEFB $00,$30,$00,$30,$0C,$00,$C0,$30
 $5568 DEFB $0C,$30,$3C,$00,$00,$30,$0C,$30
 $5570 DEFB $0C,$30,$0C,$30,$00,$30,$0C,$03
 $5578 DEFB $00,$30,$00,$30,$30,$30,$0C,$00
 $5580 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5588 DEFB $00,$00,$00,$00,$00,$00,$44,$44
 $5590 DEFB $44,$00,$00,$00,$00,$00,$00,$00
 $5598 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55A0 DEFB $00,$30,$0C,$30,$00,$30,$00,$30
 $55A8 DEFB $0C,$30,$0C,$30,$0C,$30,$30,$30
 $55B0 DEFB $3C,$30,$00,$00,$00,$30,$0C,$30
 $55B8 DEFB $0C,$30,$0C,$30,$0C,$30,$00,$00
 $55C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55E0 DEFB $42,$3C,$10,$40,$04,$00,$00,$04
 $55E8 DEFB $28,$10,$00,$00,$00,$00,$00,$00
 $55F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5600 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5608 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5610 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5618 DEFB $1F,$37,$FC,$C2,$00,$00,$00,$00
 $5620 DEFB $00,$00,$00,$08,$18,$10,$00,$00
 $5628 DEFB $00,$00,$40,$20,$3C,$78,$3C,$44
 $5630 DEFB $0C,$3C,$3C,$00,$3C,$04,$00,$00
 $5638 DEFB $00,$00,$00,$03,$B0,$00,$00,$00
 $5640 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5648 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5650 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5658 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5660 DEFB $00,$30,$00,$0F,$F0,$0F,$FC,$0F
 $5668 DEFB $F0,$30,$0C,$00,$00,$0F,$F0,$0F
 $5670 DEFB $F0,$30,$0C,$30,$00,$0F,$F0,$03
 $5678 DEFB $00,$3F,$FC,$30,$0C,$0F,$F0,$00
 $5680 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5688 DEFB $00,$00,$00,$00,$00,$00,$3C,$44
 $5690 DEFB $3C,$00,$00,$00,$00,$00,$00,$00
 $5698 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56A0 DEFB $00,$30,$0C,$3F,$FC,$3F,$FC,$3F
 $56A8 DEFB $F0,$0F,$F0,$0F,$F0,$30,$0C,$30
 $56B0 DEFB $0C,$3F,$FC,$00,$00,$30,$0C,$0F
 $56B8 DEFB $F0,$0F,$F0,$0F,$F0,$3F,$FC,$00
 $56C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56E0 DEFB $7C,$04,$0C,$3C,$78,$10,$00,$78
 $56E8 DEFB $24,$38,$00,$00,$00,$00,$00,$00
 $56F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5700 DEFB $00,$00,$00,$FE,$5A,$7F,$00,$00
 $5708 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5710 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5718 DEFB $1F,$CC,$FC,$41,$80,$00,$00,$00
 $5720 DEFB $00,$00,$00,$01,$FF,$80,$00,$00
 $5728 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5730 DEFB $00,$00,$00,$00,$00,$38,$00,$00
 $5738 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5740 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5748 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5750 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5758 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5760 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5768 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5770 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5778 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5780 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5788 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5790 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5798 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57E0 DEFB $00,$38,$00,$00,$00,$00,$00,$00
 $57E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5800 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5808 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5810 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5818 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5820 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5828 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5830 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5838 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5840 DEFB $31,$31,$31,$31,$31,$31,$31,$29
 $5848 DEFB $29,$29,$29,$29,$29,$31,$31,$31
 $5850 DEFB $31,$30,$30,$30,$30,$30,$31,$31
 $5858 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5860 DEFB $31,$31,$31,$31,$31,$31,$29,$29
 $5868 DEFB $29,$29,$29,$29,$29,$31,$31,$31
 $5870 DEFB $31,$30,$30,$30,$30,$30,$30,$31
 $5878 DEFB $31,$31,$31,$31,$30,$30,$30,$31
 $5880 DEFB $31,$31,$31,$31,$31,$31,$29,$29
 $5888 DEFB $29,$29,$29,$29,$29,$31,$31,$31
 $5890 DEFB $31,$30,$30,$30,$30,$30,$30,$31
 $5898 DEFB $34,$34,$31,$30,$30,$30,$30,$31
 $58A0 DEFB $31,$31,$31,$31,$31,$31,$29,$29
 $58A8 DEFB $29,$31,$29,$29,$31,$31,$31,$31
 $58B0 DEFB $30,$30,$30,$30,$30,$30,$30,$34
 $58B8 DEFB $34,$34,$31,$30,$30,$30,$30,$31
 $58C0 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $58C8 DEFB $31,$31,$31,$31,$31,$33,$33,$33
 $58D0 DEFB $33,$33,$33,$33,$31,$30,$30,$34
 $58D8 DEFB $34,$34,$34,$30,$30,$30,$30,$31
 $58E0 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $58E8 DEFB $31,$31,$31,$31,$31,$33,$33,$33
 $58F0 DEFB $33,$33,$33,$33,$31,$30,$34,$34
 $58F8 DEFB $34,$34,$34,$34,$31,$30,$30,$31
 $5900 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5908 DEFB $31,$31,$31,$31,$31,$31,$33,$33
 $5910 DEFB $33,$33,$33,$33,$31,$30,$34,$34
 $5918 DEFB $34,$34,$34,$34,$34,$31,$31,$31
 $5920 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5928 DEFB $31,$31,$31,$31,$31,$31,$33,$33
 $5930 DEFB $33,$33,$33,$33,$34,$34,$34,$34
 $5938 DEFB $34,$34,$34,$34,$34,$34,$31,$31
 $5940 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5948 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5950 DEFB $31,$31,$31,$31,$34,$34,$34,$34
 $5958 DEFB $34,$34,$34,$34,$34,$31,$31,$31
 $5960 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5968 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5970 DEFB $31,$31,$31,$34,$34,$34,$34,$34
 $5978 DEFB $34,$34,$34,$34,$34,$34,$34,$31
 $5980 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5988 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5990 DEFB $31,$31,$31,$31,$34,$34,$34,$34
 $5998 DEFB $34,$34,$34,$34,$34,$34,$34,$31
 $59A0 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59A8 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59B0 DEFB $31,$31,$31,$31,$31,$31,$31,$34
 $59B8 DEFB $34,$34,$34,$31,$31,$31,$31,$31
 $59C0 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59C8 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59D0 DEFB $31,$31,$31,$31,$31,$31,$31,$34
 $59D8 DEFB $34,$34,$34,$30,$30,$31,$31,$31
 $59E0 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59E8 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $59F0 DEFB $31,$31,$31,$31,$31,$31,$30,$30
 $59F8 DEFB $30,$30,$30,$30,$30,$31,$31,$31
 $5A00 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A08 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A10 DEFB $31,$31,$31,$31,$31,$31,$31,$30
 $5A18 DEFB $30,$30,$30,$30,$30,$31,$31,$31
 $5A20 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A28 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A30 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A38 DEFB $30,$30,$30,$30,$30,$31,$31,$31
 $5A40 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A48 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A50 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A58 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A60 DEFB $31,$30,$30,$30,$30,$30,$30,$30
 $5A68 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5A70 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5A78 DEFB $30,$30,$30,$30,$30,$30,$30,$31
 $5A80 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A88 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A90 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5A98 DEFB $31,$31,$31,$31,$31,$31,$31,$31
 $5AA0 DEFB $31,$30,$30,$30,$30,$30,$30,$30
 $5AA8 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AB0 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AB8 DEFB $30,$30,$30,$30,$30,$30,$30,$31
 $5AC0 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AC8 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AD0 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AD8 DEFB $30,$30,$30,$30,$30,$30,$30,$30
 $5AE0 DEFB $36,$36,$36,$36,$36,$36,$36,$36
 $5AE8 DEFB $36,$36,$36,$36,$36,$36,$36,$36
 $5AF0 DEFB $36,$30,$30,$30,$30,$30,$30,$30
 $5AF8 DEFB $30,$30,$30,$30,$30,$30,$30,$30

; Data block at 5B00
b$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $40,$40,$40,$40,$40,$40,$40,$40
 $5B10 DEFB $60,$78,$7F,$7E,$7C,$7C,$70,$40
 $5B18 DEFB $3F,$3F,$3F,$3C,$3C,$3C,$3C,$3C
 $5B20 DEFB $3C,$3C,$3C,$3C,$3C,$3C,$3C

; Title text top line
b$5B27 DEFB $F5,$0F,$50,$BD,$F1
 $5B2C DEFB $0F,$DE,$70,$0B,$DF
 $5B31 DEFB $10,$2F,$E7,$0A,$FC
 $5B36 DEFB $C4,$F5,$0F,$5A,$F0
 $5B3B DEFB $AF,$0F,$50,$F5,$AF
 $5B40 DEFB $0A,$F0,$F5,$0C,$4A
 $5B45 DEFB $F0,$00,$F7,$3F,$5A
 $5B4A DEFB $F0,$AF,$0F,$7B,$D0
 $5B4F DEFB $AF,$3B,$F0,$F5,$00
 $5B54 DEFB $0A,$F3,$10,$F5,$0F
 $5B59 DEFB $5A,$F0,$AF,$0F,$DF
 $5B5E DEFB $10,$AF,$0A,$F0,$F5
 $5B63 DEFB $03,$1A,$F0,$00,$F5
 $5B68 DEFB $0F,$50,$E7,$F4,$0F
 $5B6D DEFB $58,$F1,$AF,$0A,$F0
 $5B72 DEFB $8F,$BD,$0A,$F3,$31

; Title text middle line
b$5B77 DEFB $2F,$CF,$10,$2F,$CF
 $5B7C DEFB $10,$FD,$CC,$42,$FC
 $5B81 DEFB $71,$F5,$0C,$C0,$F5
 $5B86 DEFB $0A,$F0,$F5,$00,$0F
 $5B8B DEFB $50,$8C,$F5,$23,$30
 $5B90 DEFB $F5,$0A,$F0,$F7,$10
 $5B95 DEFB $0E,$73,$33,$F5,$0F
 $5B9A DEFB $F0,$F5,$0A,$F0,$F5
 $5B9F DEFB $00,$03,$10,$AF,$8F
 $5BA4 DEFB $3F,$40,$8F,$3F,$40
 $5BA9 DEFB $F7,$33,$18,$F3,$F4

; Title text bottom line
b$5BAE DEFB $2F,$C7,$10,$F5,$0B
 $5BB3 DEFB $D0,$F5,$AF,$0F,$F1
 $5BB8 DEFB $AF,$02,$FC,$F1,$F5
 $5BBD DEFB $08,$C0,$F5,$BD,$00
 $5BC2 DEFB $F5,$AF,$0F,$DF,$BF
 $5BC7 DEFB $0F,$50,$8C,$E7,$33
 $5BCC DEFB $30,$FF,$50,$00,$F5
 $5BD1 DEFB $AF,$0F,$58,$FF,$0F
 $5BD6 DEFB $52,$33,$31,$0A,$F0
 $5BDB DEFB $F5,$E7,$00,$F5,$AF
 $5BE0 DEFB $0F,$50,$AF,$0F,$50
 $5BE5 DEFB $AF,$8F,$3F,$40,$F5
 $5BEA DEFB $0E,$70,$F5,$AF,$0F
 $5BEF DEFB $50,$AF,$08,$F3,$F4

; Sound effect data
w$5BF4 DEFW $000B
 $5BF6 DEFW $01F0

; Sound effect data
w$5BF8 DEFW $0006
 $5BFA DEFW $038C

; Data block at 5BFC
b$5BFC DEFB $00,$07,$07,$00

; Unused
u$5C00 DEFB $FF,$00,$00,$00,$FF,$00,$23,$0D
 $5C08 DEFB $0D,$23,$05,$00,$00,$00,$16,$16
 $5C10 DEFB $01,$00,$06,$00,$0B,$00,$01,$00
 $5C18 DEFB $01,$00,$06,$00,$10,$00,$00,$00
 $5C20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C30 DEFB $00,$00,$00,$00,$00,$00,$00,$3C
 $5C38 DEFB $40,$00,$FF,$CD,$00,$FC,$5F,$00
 $5C40 DEFB $00,$00,$0A,$00,$FF,$32,$00,$03
 $5C48 DEFB $30,$00,$00,$6A,$5D,$02,$5D,$B6
 $5C50 DEFB $5C,$BB,$5C,$CB,$5C,$6A,$5D,$CA
 $5C58 DEFB $5C,$89,$5D,$8C,$5D,$69,$5D,$E3
 $5C60 DEFB $5D,$8E,$5D,$8E,$5D,$8E,$5D,$2D
 $5C68 DEFB $92,$5C,$00,$00,$00,$00,$00,$00
 $5C70 DEFB $00,$02,$6D,$DA,$9D,$1A,$00,$00
 $5C78 DEFB $3F,$05,$00,$58,$FF,$00,$00,$21
 $5C80 DEFB $00,$5B,$21,$17,$C0,$50,$E0,$50
 $5C88 DEFB $21,$02,$21,$17,$03,$36,$00,$36
 $5C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB0 DEFB $00,$00,$FF,$5F,$FF,$FF,$F4,$09
 $5CB8 DEFB $A8,$10,$4B,$F4,$09,$C4,$15,$53
 $5CC0 DEFB $81,$0F,$C4,$15,$52,$F4,$09,$C4
 $5CC8 DEFB $15,$50,$80,$00,$0A,$41,$00,$FD

; Game status buffer entry at 5CD0
g$5CD0 DEFB $30,$30

; Cash digits
g$5CD2 DEFB $30,$30,$30

; Game status buffer entry at 5CD5
g$5CD5 DEFB $30

; Score digits
g$5CD6 DEFB $30,$30,$30,$30,$30

; Hi score digits
g$5CDB DEFB $30,$30,$30,$30,$30

; Horace up 1
;
; #CALL:print_udg(#PC,2,2,5,horaceu1)
b$5CE0 DEFB $7F,$3B,$18,$18,$38,$3C,$44,$7C
 $5CE8 DEFB $D8,$D8,$1C,$24,$7C,$00,$00,$00
 $5CF0 DEFB $0F,$1F,$7F,$7F,$FF,$9F,$E7,$78
 $5CF8 DEFB $E0,$F8,$FE,$FE,$FF,$F1,$8F,$7E

; Horace right 1
;
; #CALL:print_udg(#PC,2,2,5,horacer1)
b$5D00 DEFB $0F,$23,$3F,$33,$1E,$02,$00,$00
 $5D08 DEFB $FC,$BC,$9E,$8E,$0C,$1C,$12,$3F
 $5D10 DEFB $0F,$3F,$7F,$FC,$F8,$B8,$98,$9D
 $5D18 DEFB $F8,$FC,$FE,$73,$73,$63,$E6,$EE

; Horace down 1
;
; #CALL:print_udg(#PC,2,2,5,horaced1)
b$5D20 DEFB $1B,$1B,$38,$24,$3E,$00,$00,$00
 $5D28 DEFB $FE,$DC,$18,$18,$1C,$34,$22,$3E
 $5D30 DEFB $07,$1F,$7F,$61,$C0,$E0,$F3,$7F
 $5D38 DEFB $F0,$F8,$FE,$C6,$C3,$C3,$E3,$FE

; Horace left 1
;
; #CALL:print_udg(#PC,2,2,5,horacel1)
b$5D40 DEFB $1F,$0E,$0C,$1D,$15,$3C,$01,$03
 $5D48 DEFB $F9,$F0,$E0,$C0,$C0,$E0,$30,$E0
 $5D50 DEFB $1F,$3F,$7F,$CC,$CE,$46,$77,$3F
 $5D58 DEFB $E0,$F8,$FE,$3E,$1F,$1F,$1F,$B9

; Horace up 2
;
; #CALL:print_udg(#PC,2,2,5,horaceu2)
b$5D60 DEFB $1B,$1B,$38,$24,$3E,$00,$00,$00
 $5D68 DEFB $FE,$DC,$18,$18,$1C,$3C,$22,$3E
 $5D70 DEFB $07,$1F,$7F,$7F,$FF,$8F,$F1,$7E
 $5D78 DEFB $F0,$F8,$FE,$FE,$FF,$F9,$E7,$1E

; Horace right 2
;
; #CALL:print_udg(#PC,2,2,5,horacer2)
b$5D80 DEFB $9F,$0F,$07,$03,$03,$07,$0C,$07
 $5D88 DEFB $F8,$70,$30,$B8,$A8,$3C,$80,$C0
 $5D90 DEFB $07,$1F,$7F,$7C,$F8,$F8,$F8,$9D
 $5D98 DEFB $F8,$FC,$FE,$33,$73,$62,$EE,$FC

; Horace down 2
;
; #CALL:print_udg(#PC,2,2,5,horaced2)
b$5DA0 DEFB $7F,$3B,$18,$18,$38,$2C,$44,$7C
 $5DA8 DEFB $D8,$D8,$1C,$24,$7C,$00,$00,$00
 $5DB0 DEFB $0F,$1F,$7F,$63,$C3,$C3,$C7,$7F
 $5DB8 DEFB $E0,$F8,$FE,$86,$03,$07,$CF,$FE

; Horace left 2
;
; #CALL:print_udg(#PC,2,2,5,horacel2)
b$5DC0 DEFB $3F,$3D,$79,$71,$30,$38,$48,$FC
 $5DC8 DEFB $F0,$C4,$FC,$CC,$78,$40,$00,$00
 $5DD0 DEFB $1F,$3F,$7F,$CE,$CE,$C6,$67,$77
 $5DD8 DEFB $F0,$FC,$FE,$3F,$1F,$1D,$19,$B9

; Data block at 5DE0
b$5DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE8 DEFB $4E,$7D,$6C,$CE,$9A,$86,$CC,$78
 $5DF0 DEFB $3E,$E2,$FE,$FA,$EB,$23,$36,$1C
 $5DF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E08 DEFB $0E,$1F,$13,$03,$00,$CC,$F8,$49
 $5E10 DEFB $00,$00,$00,$00,$40,$F0,$38,$BE
 $5E18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E28 DEFB $7C,$47,$7F,$5F,$D7,$C4,$6C,$38
 $5E30 DEFB $72,$BE,$36,$73,$59,$61,$33,$1E
 $5E38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E48 DEFB $00,$00,$00,$00,$02,$0F,$1C,$7D
 $5E50 DEFB $70,$F8,$C8,$C0,$00,$33,$1F,$92
 $5E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E60 DEFB $00,$07,$07,$00,$00,$06,$06,$06
 $5E68 DEFB $06,$00,$00,$02,$02,$02,$02,$00

; Time to remain on the title screen
g$5E70 DEFB $07

; Game status buffer entry at 5E71
g$5E71 DEFB $1F,$7F,$7F,$FF,$8F,$F1,$7E

; Address of next attribute to draw
g$5E78 DEFW $F8F0

; Next attribute to draw
g$5E7A DEFB $FE

; Data block at 5E7B
b$5E7B DEFB $FE,$FF,$F9,$E7,$1E,$9F,$0F,$07
 $5E83 DEFB $03,$03,$07,$0C

; Random number seed
g$5E87 DEFB $07

; Horace's screen address
g$5E88 DEFB $F8

; Game status buffer entry at 5E89
g$5E89 DEFB $70

; Game status buffer entry at 5E8A
g$5E8A DEFB $30

; Game status buffer entry at 5E8B
g$5E8B DEFB $B8

; Game status buffer entry at 5E8C
g$5E8C DEFB $A8

; Horace's state
;
; Set to 1 if Horace was run over
; .
; Set to 3 if Horace hit a tree
g$5E8D DEFB $3C

; Game status buffer entry at 5E8E
g$5E8E DEFB $80,$C0,$07,$1F,$7F,$7C

; Game status buffer entry at 5E94
g$5E94 DEFB $F8

; Game status buffer entry at 5E95
g$5E95 DEFB $F8

; Game status buffer entry at 5E96
g$5E96 DEFB $F8,$9D,$F8,$FC,$FE,$33

; Game status buffer entry at 5E9C
g$5E9C DEFB $73

; Game status buffer entry at 5E9D
g$5E9D DEFB $62

; Counter for border fill routine
g$5E9E DEFB $EE

; Game status buffer entry at 5E9F
g$5E9F DEFB $FC

; Game status buffer entry at 5EA0
g$5EA0 DEFB $7F

; Game status buffer entry at 5EA1
g$5EA1 DEFB $3B

; Game status buffer entry at 5EA2
g$5EA2 DEFB $18

; Game status buffer entry at 5EA3
g$5EA3 DEFB $18

; Game status buffer entry at 5EA4
g$5EA4 DEFB $38

; Game status buffer entry at 5EA5
g$5EA5 DEFW $442C

; Game status buffer entry at 5EA7
g$5EA7 DEFB $7C,$D8,$D8,$1C,$24,$7C,$00,$00
 $5EAF DEFB $00,$0F,$1F,$7F,$63,$C3

; ID of the string to print
g$5EB5 DEFB $C3

; Game status buffer entry at 5EB6
g$5EB6 DEFB $C7

; Game status buffer entry at 5EB7
g$5EB7 DEFB $7F

; Set to 1 if in demo mode
g$5EB8 DEFB $E0

; Set to 1 if the game is over
g$5EB9 DEFB $F8

; Game status buffer entry at 5EBA
g$5EBA DEFB $FE

; Game status buffer entry at 5EBB
g$5EBB DEFB $86

; Game status buffer entry at 5EBC
g$5EBC DEFB $03

; Number of times Horace has hit a tree
g$5EBD DEFB $07

; Game status buffer entry at 5EBE
g$5EBE DEFB $CF

; Cash / 10
g$5EBF DEFB $FE

; Game status buffer entry at 5EC0
g$5EC0 DEFB $3F,$3D,$79,$71,$30,$38,$48,$FC
 $5EC8 DEFB $F0,$C4,$FC,$CC,$78,$40,$00,$00
 $5ED0 DEFB $1F,$3F,$7F,$CE,$CE,$C6,$67,$77
 $5ED8 DEFB $F0,$FC,$FE,$3F,$1F,$1D,$19,$B9
 $5EE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE8 DEFB $4E,$7D,$6C,$CE,$9A,$86,$CC,$78
 $5EF0 DEFB $3E,$E2,$FE,$FA,$EB,$23,$36,$1C
 $5EF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Sprite screen address
g$5F00 DEFW $0000

; Sprite address
g$5F02 DEFW $0000

; Sprite attribute ID
g$5F04 DEFB $00

; Number of rows to draw
g$5F05 DEFB $00

; Number of columns to draw
g$5F06 DEFB $00

; Game status buffer entry at 5F07
g$5F07 DEFB $00,$0E,$1F,$13,$03,$00,$CC,$F8
 $5F0F DEFB $49,$00,$00,$00,$00,$40,$F0,$38
 $5F17 DEFB $BE,$00,$00,$00,$00,$00,$00,$00
 $5F1F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F27 DEFB $00,$7C,$47,$7F,$5F,$D7,$C4,$6C
 $5F2F DEFB $38,$72,$BE,$36,$73,$59,$61,$33
 $5F37 DEFB $1E,$00,$00,$00,$00,$00,$00,$00
 $5F3F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F47 DEFB $00,$00,$00,$00,$00,$02,$0F,$1C
 $5F4F DEFB $7D,$70,$F8,$C8,$C0,$00,$33,$1F
 $5F57 DEFB $92,$00,$00,$00,$00,$00,$00,$00
 $5F5F DEFB $00,$00,$07,$07,$00,$00,$06,$06
 $5F67 DEFB $06,$06,$00,$00,$02,$02,$02,$02
 $5F6F DEFB $00

; Startup code
;
; Used by the routine at #R$6000.
c$5F70 LD DE,$5B00   ; { Move #N$5cd0 - #N$5b00 for #N$100 bytes
 $5F73 LD HL,$5CD0   ;
 $5F76 LD BC,$0100   ;
 $5F79 LDIR          ; }
 $5F7B LD DE,$5CD0   ; { Move #N$5dd0 - #N$5cd0 for #N$1a0 bytes
 $5F7E LD BC,$01A0   ;
 $5F81 LDIR          ; }
*$5F83 JP $601C      ; Start the game

; Unused
u$5F86 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F8E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F96 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F9E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FA6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FAE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FB6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FBE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FC6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FCE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FD6 DEFB $0F,$C9,$0F,$C9,$DB,$02,$4D,$00
 $5FDE DEFB $70,$5E,$00,$00,$70,$5F,$81,$00
 $5FE6 DEFB $83,$5F,$2B,$2D,$65,$33,$FF,$FF
 $5FEE DEFB $ED,$10,$0D,$00,$53,$00,$2F,$20
 $5FF6 DEFB $ED,$1F,$DB,$1F,$76,$1B,$03,$13
 $5FFE DEFB $00,$3E

; Main entry point
;
; This is called after the first CODE block is loaded, and loads the second one
; As it overwrites the memory used for BASIC, the standard routines cannot be used
c$6000 LD IX,$0000   ; Point #REGix to the ROM, so the block is ignored
 $6004 LD DE,$0010   ; Set the length to #N$10
 $6007 XOR A         ; Set header byte to 0
 $6008 SCF           ; Signal LOAD
 $6009 CALL $0556    ; Load the block
 $600C LD IX,$5CD0   ; Set the start to #R$5cd0
 $6010 LD DE,$02B6   ; Set the length to #N$2b6
 $6013 LD A,$FF      ; Set header byte to #N$ff
 $6015 SCF           ; Signal LOAD
 $6016 CALL $0556    ; Load the block
 $6019 JP $5F70      ; Jump to the service routine to move blocks into place

; Startup routine
;
; This routine is called once the entire game is loaded and moved into place
c$601C DI            ; Disable interrupts
 $601D LD SP,$8000   ; Put the stack at the top of 16K RAM
 $6020 LD A,$02      ; { Select the screen for output.
 $6022 CALL $1601    ; }
 $6025 XOR A         ; { Set DF-SZ to 0, to disable lower screen output.
 $6026 LD ($5C6B),A  ; }
*$6029 CALL $6F40    ; Show the intro screen
*$602C CALL $6053    ; Run the traffic screen
 $602F LD A,($5EB9)  ; { Is the game over?
 $6032 AND A         ; }
 $6033 JR NZ,$6029   ; If so, jump back to the intro screen
 $6035 CALL $78B4    ; Run the skiing screen
 $6038 LD A,($5EB9)  ; { Is the game over?
 $603B AND A         ; }
 $603C JR NZ,$6029   ; If so, jump back to the intro screen
 $603E LD A,($5EBE)  ; { Has Horace run out of money?
 $6041 AND A         ; }
 $6042 JR Z,$6029    ; If so, jump back to the intro screen
 $6044 LD A,($5EB8)  ; { Has Horace still got working skis?
 $6047 AND A         ; }
 $6048 JR Z,$602C    ; If so, jump back to run the traffic screen
 $604A XOR A         ; { Otherwise signal out of money
 $604B LD ($5EBE),A  ; }
 $604E CALL $78B4    ; Run the skiing screen (but with no money)
 $6051 JR $6029      ; Jump back to the intro screen

; Traffic screen
;
; Used by the routine at #R$601C.
c$6053 CALL $703F    ; Fill the screen with colours
 $6056 CALL $70AB    ; Initialize the screen
*$6059 CALL $7146    ;
 $605C CALL $7241    ;
 $605F CALL $71E6    ;
 $6062 CALL $74E3    ; Update Horace
 $6065 CALL $77AC    ;
 $6068 LD A,($5EB8)  ;
 $606B AND A         ;
 $606C JR NZ,$6074   ;
 $606E CALL $6CDD    ;
 $6071 CALL $6D6B    ;
*$6074 CALL $6DDF    ;
 $6077 CALL $7F1F    ; Print a message if necessary
 $607A LD A,($5EB9)  ; { Is the game over?
 $607D AND A         ; }
 $607E RET NZ        ; Return if so
 $607F LD A,($5EB7)  ;
 $6082 AND A         ;
 $6083 JR NZ,$6059   ;
 $6085 LD A,($5EBE)  ;
 $6088 AND A         ;
 $6089 RET Z         ;
 $608A LD A,($5E9C)  ;
 $608D AND A         ;
 $608E RET Z         ;
 $608F JR $6059      ; Jump back to the main loop

; Data block at 6091
b$6091 DEFB $46,$00,$C7,$04,$5D,$00,$8C,$03
 $6099 DEFB $7C,$00,$A1,$02,$AA,$00,$F1,$01
 $60A1 DEFB $DE,$00,$6D,$01,$28,$01,$09,$01
 $60A9 DEFB $8B,$01,$BF,$00,$0F,$02,$88,$00
 $60B1 DEFB $C0,$02,$5E,$00

; Data block at 60B5
b$60B5 DEFB $84,$03,$43,$00

; Display text
t$60B9 DEFM $12,$00,$11,$07,$10,$00,$16,$00,$00,"CASH $     SCORE        HI      "

; Dynamic text
;
; The contents of this string changes depending on context
t$60E2 DEFM $12,$00,$11,$07,$10,$00,$16,$00,$00,"\"",$89,"Z",$D5,$5E

; Sprite addresses - Horace first frame
b$60F0 DEFW $5CE0   ; Up
 $60F2 DEFW $5D00   ; Right
 $60F4 DEFW $5D20   ; Down
 $60F6 DEFW $5D40   ; Left

; Sprite addresses - Horace second frame
b$60F8 DEFW $5D60   ; Up
 $60FA DEFW $5D80   ; Right
 $60FC DEFW $5DA0   ; Down
 $60FE DEFW $5DC0   ; Left

; Sprite addresses - Horace with skis first frame
b$6100 DEFW $6108   ; Up
 $6102 DEFW $6138   ; Right
 $6104 DEFW $6168   ; Down
 $6106 DEFW $6198   ; Left

; Horace with skis - up 1
;
; #CALL:print_udg(#PC,3,2,5,horaceskiu1)
b$6108 DEFB $38,$1C,$1C,$1C,$1C,$0E,$0E,$0E
 $6110 DEFB $7F,$3B,$18,$18,$38,$3C,$44,$7C
 $6118 DEFB $D8,$D8,$1C,$24,$7C,$00,$00,$00
 $6120 DEFB $20,$70,$70,$70,$70,$38,$3E,$3B
 $6128 DEFB $0F,$1F,$7F,$7F,$FF,$9F,$E7,$78
 $6130 DEFB $E0,$F8,$FE,$FE,$FF,$F1,$8F,$7E

; Horace with skis - right 1
;
; #CALL:print_udg(#PC,3,2,5,horaceskir1)
b$6138 DEFB $0F,$23,$3F,$33,$1E,$02,$00,$00
 $6140 DEFB $FC,$BC,$9E,$8E,$0C,$1C,$12,$3F
 $6148 DEFB $18,$38,$30,$30,$70,$60,$60,$60
 $6150 DEFB $0F,$3F,$7F,$FC,$F8,$B8,$98,$9D
 $6158 DEFB $F8,$FC,$FE,$73,$73,$63,$E6,$EE
 $6160 DEFB $07,$0E,$0C,$1C,$1C,$7C,$58,$D8

; Horace with skis - down 1
;
; #CALL:print_udg(#PC,3,2,5,horaceskid1)
b$6168 DEFB $1B,$1B,$38,$24,$3E,$00,$00,$00
 $6170 DEFB $FE,$DC,$18,$18,$1C,$34,$22,$3E
 $6178 DEFB $1C,$38,$38,$38,$38,$70,$70,$70
 $6180 DEFB $07,$1F,$7F,$61,$C0,$E0,$F3,$7F
 $6188 DEFB $F0,$F8,$FE,$C6,$C3,$C3,$E3,$FE
 $6190 DEFB $04,$0E,$0E,$0E,$0E,$1C,$7C,$DC

; Horace with skis - left 1
;
; #CALL:print_udg(#PC,3,2,5,horaceskil1)
b$6198 DEFB $1F,$0E,$0C,$1D,$15,$3C,$01,$03
 $61A0 DEFB $F1,$F1,$E3,$C3,$C3,$E7,$27,$E7
 $61A8 DEFB $C0,$C0,$80,$80,$80,$00,$00,$00
 $61B0 DEFB $1F,$3F,$7F,$CC,$CE,$46,$77,$3F
 $61B8 DEFB $E0,$F8,$FC,$3E,$1F,$1C,$1D,$B9
 $61C0 DEFB $20,$70,$70,$F0,$E0,$E0,$C0,$C0

; Sprite addresses - Horace with skis second frame
b$61C8 DEFW $61D0   ; Up
 $61CA DEFW $6200   ; Right
 $61CC DEFW $6230   ; Down
 $61CE DEFW $6260   ; Left

; Horace with skis - up 2
;
; #CALL:print_udg(#PC,3,2,5,horaceskiu2)
b$61D0 DEFB $0E,$1C,$1C,$1C,$1C,$38,$38,$38
 $61D8 DEFB $1B,$1B,$38,$24,$3E,$00,$00,$00
 $61E0 DEFB $FE,$DC,$18,$18,$1C,$3C,$22,$3E
 $61E8 DEFB $02,$07,$07,$07,$07,$0E,$0F,$0E
 $61F0 DEFB $07,$1F,$7F,$7F,$FF,$8F,$F1,$7E
 $61F8 DEFB $F0,$F8,$FE,$FE,$FF,$F9,$E7,$1E

; Horace with skis - right 2
;
; #CALL:print_udg(#PC,3,2,5,horaceskir2)
b$6200 DEFB $9F,$0F,$07,$03,$03,$07,$0C,$07
 $6208 DEFB $F8,$70,$30,$B8,$A8,$3C,$80,$C0
 $6210 DEFB $30,$30,$30,$30,$30,$18,$18,$18
 $6218 DEFB $07,$1F,$7F,$7C,$F8,$F8,$F8,$9D
 $6220 DEFB $F8,$FC,$FE,$33,$73,$62,$EE,$FC
 $6228 DEFB $E0,$C0,$C0,$E0,$E0,$60,$E0,$F0

; Horace with skis - down 2
;
; #CALL:print_udg(#PC,3,2,5,horaceskid2)
b$6230 DEFB $7F,$3B,$18,$18,$38,$2C,$44,$7C
 $6238 DEFB $D8,$D8,$1C,$24,$7C,$00,$00,$00
 $6240 DEFB $70,$38,$38,$38,$38,$1C,$1C,$1C
 $6248 DEFB $0F,$1F,$7F,$63,$C3,$C3,$C7,$7F
 $6250 DEFB $E0,$F8,$FE,$86,$03,$07,$CF,$FE
 $6258 DEFB $40,$E0,$E0,$E0,$E0,$70,$F0,$70

; Horace with skis - left 2
;
; #CALL:print_udg(#PC,3,2,5,horaceskil2)
b$6260 DEFB $3F,$3D,$79,$71,$30,$38,$48,$FC
 $6268 DEFB $F0,$C4,$FC,$CC,$78,$40,$00,$00
 $6270 DEFB $C0,$E0,$E0,$E0,$E0,$70,$70,$70
 $6278 DEFB $1F,$3F,$7F,$CE,$CE,$C6,$67,$77
 $6280 DEFB $F1,$FB,$FB,$3B,$1B,$19,$17,$BD
 $6288 DEFB $00,$80,$80,$80,$80,$C0,$C0,$C0

; Background graphics
b$6290 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6298 DEFB $FF,$FF,$7F,$3F,$0F,$03,$00,$00
 $62A0 DEFB $FC,$FF,$FF,$FF,$CF,$B7,$78,$30
 $62A8 DEFB $80,$FF,$FF,$FF,$FF,$FF,$00,$00
 $62B0 DEFB $86,$FE,$FE,$FF,$E7,$DB,$3C,$18
 $62B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62C8 DEFB $00,$00,$00,$00,$01,$01,$3F,$7F
 $62D0 DEFB $3F,$7F,$4F,$C3,$80,$80,$C0,$F0
 $62D8 DEFB $FF,$FF,$FF,$FF,$FF,$60,$C0,$C0
 $62E0 DEFB $80,$C0,$F0,$F8,$F8,$8C,$8C,$8C
 $62E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62F8 DEFB $61,$7F,$7F,$FF,$E7,$DB,$3C,$18
 $6300 DEFB $01,$FF,$FF,$FF,$FF,$FF,$00,$00
 $6308 DEFB $3F,$FF,$FF,$FF,$F3,$ED,$1E,$0C
 $6310 DEFB $FF,$FF,$FE,$FC,$F0,$C0,$00,$00
 $6318 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6320 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6328 DEFB $01,$03,$0F,$1F,$1F,$31,$31,$31
 $6330 DEFB $FF,$FF,$FF,$FF,$FF,$06,$03,$03
 $6338 DEFB $FC,$FE,$F2,$C3,$01,$01,$03,$0F
 $6340 DEFB $00,$00,$00,$00,$80,$80,$FC,$FE
 $6348 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6350 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6358 DEFB $DF,$8F,$DD,$78,$3D,$0F,$03,$00
 $6360 DEFB $FF,$FF,$FF,$F9,$E6,$EF,$EF,$06
 $6368 DEFB $FA,$FA,$FE,$FB,$78,$78,$78,$00
 $6370 DEFB $00,$00,$03,$FC,$18,$3C,$3C,$18
 $6378 DEFB $0A,$00,$FF,$00,$00,$00,$00,$00
 $6380 DEFB $52,$00,$FF,$00,$0C,$1E,$1E,$0C
 $6388 DEFB $DD,$01,$FF,$08,$6C,$F6,$F2,$60
 $6390 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6398 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63A0 DEFB $1F,$19,$18,$18,$38,$3C,$7F,$FF
 $63A8 DEFB $FF,$FF,$7F,$7F,$79,$71,$F1,$F1
 $63B0 DEFB $82,$E2,$FA,$FA,$FA,$FA,$FA,$FA
 $63B8 DEFB $00,$F3,$84,$74,$F3,$00,$00,$00
 $63C0 DEFB $00,$3B,$A1,$B1,$21,$11,$11,$15
 $63C8 DEFB $00,$80,$00,$00,$00,$33,$4A,$7B
 $63D0 DEFB $01,$01,$01,$01,$01,$9D,$51,$99
 $63D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63E8 DEFB $00,$00,$00,$00,$00,$03,$0F,$0F
 $63F0 DEFB $7F,$70,$4C,$43,$00,$E0,$F8,$FE
 $63F8 DEFB $FF,$00,$3F,$38,$CE,$33,$0C,$03
 $6400 DEFB $FF,$00,$39,$DC,$07,$80,$00,$FF
 $6408 DEFB $FF,$00,$C0,$7F,$1C,$C7,$00,$FF
 $6410 DEFB $E0,$18,$E6,$F9,$0E,$03,$00,$FF
 $6418 DEFB $00,$00,$00,$80,$60,$98,$06,$FF
 $6420 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6428 DEFB $00,$05,$05,$05,$05,$05,$05,$05
 $6430 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6438 DEFB $00,$80,$80,$FF,$10,$36,$6F,$4F
 $6440 DEFB $06,$02,$00,$FF,$00,$30,$78,$78
 $6448 DEFB $30,$92,$00,$FF,$00,$00,$00,$00
 $6450 DEFB $00,$B7,$00,$C0,$3F,$18,$3C,$3C
 $6458 DEFB $18,$5F,$5F,$7F,$DB,$1E,$1E,$1E
 $6460 DEFB $00,$FF,$FF,$FF,$9F,$67,$F7,$F7
 $6468 DEFB $60,$FB,$F1,$BB,$1E,$BC,$F0,$C0
 $6470 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6478 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6480 DEFB $00,$80,$A4,$A5,$BD,$A5,$80,$80
 $6488 DEFB $80,$00,$CE,$29,$EE,$2B,$04,$04
 $6490 DEFB $05,$00,$70,$48,$48,$70,$0C,$52
 $6498 DEFB $5E,$00,$00,$00,$00,$00,$E7,$94
 $64A0 DEFB $E6,$41,$47,$5F,$5F,$5F,$5F,$5F
 $64A8 DEFB $5F,$FF,$FF,$FE,$FE,$9E,$8E,$8F
 $64B0 DEFB $8F,$F8,$98,$18,$18,$1C,$3C,$FE
 $64B8 DEFB $FF,$00,$00,$00,$00,$00,$00,$00
 $64C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64C8 DEFB $00,$00,$00,$00,$01,$06,$19,$60
 $64D0 DEFB $FF,$07,$18,$67,$9D,$70,$C0,$00
 $64D8 DEFB $FF,$FF,$00,$BF,$CE,$38,$E3,$00
 $64E0 DEFB $FF,$FF,$00,$0E,$3F,$E0,$81,$00
 $64E8 DEFB $FF,$FF,$00,$07,$FC,$73,$CC,$30
 $64F0 DEFB $C0,$FE,$0E,$32,$C2,$00,$07,$1F
 $64F8 DEFB $7F,$00,$00,$00,$00,$00,$C0,$F0
 $6500 DEFB $F0,$00,$00,$00,$00,$00,$00,$00
 $6508 DEFB $00,$00,$05,$05,$05,$05,$05,$05
 $6510 DEFB $05,$00,$00,$00,$00,$00,$00,$00
 $6518 DEFB $00,$00,$7E,$FF,$9F,$9F,$F9,$39
 $6520 DEFB $0F,$00,$12,$BE,$FE,$F3,$CC,$DE
 $6528 DEFB $DE,$0C,$1F,$06,$06,$80,$FF,$80
 $6530 DEFB $00,$00,$81,$01,$01,$7F,$CC,$1E
 $6538 DEFB $1E,$0C,$00,$00,$00,$00,$00,$00
 $6540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6548 DEFB $00,$00,$00,$03,$03,$07,$0C,$08
 $6550 DEFB $08,$18,$7F,$C0,$F0,$FF,$FE,$3E
 $6558 DEFB $1A,$12,$FF,$00,$00,$FF,$00,$06
 $6560 DEFB $06,$1F,$E0,$18,$06,$FF,$01,$01
 $6568 DEFB $01,$81,$00,$00,$00,$00,$00,$00
 $6570 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6578 DEFB $00,$00,$81,$80,$80,$FE,$33,$78
 $6580 DEFB $78,$30,$F8,$60,$60,$01,$FF,$01
 $6588 DEFB $00,$00,$48,$7D,$7F,$CF,$33,$7B
 $6590 DEFB $7B,$30,$7E,$FF,$F9,$F9,$9F,$9C
 $6598 DEFB $F0,$00,$00,$00,$00,$00,$00,$00
 $65A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65A8 DEFB $00,$00,$07,$18,$60,$FF,$80,$80
 $65B0 DEFB $80,$81,$FF,$00,$00,$FF,$00,$60
 $65B8 DEFB $60,$F8,$FE,$03,$0F,$FF,$7F,$7C
 $65C0 DEFB $58,$48,$00,$C0,$C0,$E0,$30,$10
 $65C8 DEFB $10,$18,$00,$00,$00,$00,$00,$00
 $65D0 DEFB $00,$00,$13,$13,$13,$13,$13,$13
 $65D8 DEFB $13,$13,$FE,$FE,$FE,$FE,$FE,$FE
 $65E0 DEFB $FE,$FE,$50,$50,$50,$5F,$41,$51
 $65E8 DEFB $5F,$40,$24,$28,$28,$30,$28,$24
 $65F0 DEFB $22,$00,$22,$22,$22,$23,$20,$22
 $65F8 DEFB $73,$00,$04,$04,$04,$E4,$24,$24
 $6600 DEFB $E4,$04,$0C,$18,$30,$70,$D1,$13
 $6608 DEFB $13,$13,$01,$00,$00,$F8,$FC,$FE
 $6610 DEFB $FE,$FE,$80,$C0,$60,$70,$5F,$40
 $6618 DEFB $5F,$51,$3F,$49,$3E,$00,$FF,$00
 $6620 DEFB $22,$22,$80,$00,$00,$00,$FF,$00
 $6628 DEFB $73,$22,$18,$0C,$06,$03,$FF,$04
 $6630 DEFB $E4,$24,$00,$00,$00,$00,$01,$03
 $6638 DEFB $02,$06,$3F,$30,$78,$C8,$8C,$06
 $6640 DEFB $02,$03,$FF,$00,$00,$00,$00,$3F
 $6648 DEFB $1F,$00,$FF,$00,$01,$01,$02,$FF
 $6650 DEFB $FF,$04,$FF,$01,$01,$08,$18,$F8
 $6658 DEFB $F0,$00,$00,$00,$80,$80,$C0,$60
 $6660 DEFB $20,$30,$03,$03,$01,$40,$40,$20
 $6668 DEFB $5D,$3C,$02,$02,$03,$03,$01,$F6
 $6670 DEFB $50,$38,$61,$3C,$02,$03,$82,$66
 $6678 DEFB $8F,$66,$9C,$66,$A9,$66,$B6,$66
 $6680 DEFB $C3,$66,$02,$01,$00,$00,$3D,$48
 $6688 DEFB $20,$5E,$60,$5E,$02,$04,$00,$02
 $6690 DEFB $01,$01,$01,$5F,$50,$E0,$5D,$FC
 $6698 DEFB $5B,$02,$04,$00,$03,$01,$00,$00
 $66A0 DEFB $3B,$48,$F0,$62,$6A,$5E,$02,$06
 $66A8 DEFB $00,$03,$01,$01,$01,$5F,$50,$90
 $66B0 DEFB $62,$64,$5E,$02,$06,$00,$06,$01
 $66B8 DEFB $00,$00,$38,$48,$31,$64,$09,$65
 $66C0 DEFB $03,$09,$00,$06,$01,$01,$01,$5F
 $66C8 DEFB $50,$50,$63,$28,$64,$03,$09,$00
 $66D0 DEFB $01,$01,$01,$01,$5F,$50,$12,$65
 $66D8 DEFB $DD,$66,$02,$06,$00,$00,$03,$03
 $66E0 DEFB $03,$03,$00,$01,$01,$00,$00,$3B
 $66E8 DEFB $48,$72,$65,$F0,$66,$02,$06,$00
 $66F0 DEFB $00,$03,$03,$03,$03,$00,$39,$3B
 $66F8 DEFB $3B,$3B,$3B,$39,$39,$3B,$3B,$3B
 $6700 DEFB $3B,$39,$0C,$67,$54,$67,$9C,$67
 $6708 DEFB $E4,$67,$2C,$68,$00,$01,$07,$1F
 $6710 DEFB $00,$00,$00,$00,$7F,$FF,$FC,$00
 $6718 DEFB $00,$00,$00,$00,$FC,$F0,$00,$00
 $6720 DEFB $00,$00,$00,$00,$3F,$27,$27,$21
 $6728 DEFB $20,$00,$00,$00,$FF,$FF,$FE,$F8
 $6730 DEFB $78,$7C,$34,$26,$00,$00,$00,$00
 $6738 DEFB $00,$00,$06,$3E,$01,$07,$07,$1F
 $6740 DEFB $1F,$1F,$3F,$3F,$FE,$FF,$FF,$FF
 $6748 DEFB $FF,$C1,$83,$87,$00,$80,$C0,$C0
 $6750 DEFB $C0,$80,$80,$80,$00,$00,$00,$00
 $6758 DEFB $00,$00,$00,$00,$7C,$1E,$07,$01
 $6760 DEFB $00,$00,$00,$00,$1E,$00,$80,$E0
 $6768 DEFB $00,$00,$00,$00,$13,$01,$00,$04
 $6770 DEFB $07,$07,$01,$00,$FF,$EE,$E6,$77
 $6778 DEFB $7D,$E7,$A3,$F0,$00,$00,$00,$00
 $6780 DEFB $00,$80,$E0,$F8,$00,$03,$0F,$0F
 $6788 DEFB $1F,$1F,$1F,$13,$FF,$FF,$FF,$86
 $6790 DEFB $0E,$0C,$1D,$BF,$00,$80,$C0,$60
 $6798 DEFB $60,$40,$C0,$80,$01,$01,$01,$01
 $67A0 DEFB $00,$00,$00,$00,$42,$42,$C3,$C3
 $67A8 DEFB $C3,$42,$00,$00,$80,$80,$80,$80
 $67B0 DEFB $00,$00,$00,$00,$07,$03,$01,$01
 $67B8 DEFB $01,$01,$01,$01,$FF,$FF,$BD,$81
 $67C0 DEFB $C3,$C3,$42,$C3,$E0,$C0,$80,$80
 $67C8 DEFB $80,$80,$80,$80,$00,$01,$07,$07
 $67D0 DEFB $0C,$0E,$0E,$07,$7E,$FF,$FF,$3C
 $67D8 DEFB $18,$18,$18,$3C,$00,$80,$E0,$E0
 $67E0 DEFB $30,$70,$70,$E0,$78,$00,$01,$07
 $67E8 DEFB $00,$00,$00,$00,$3E,$78,$E0,$80
 $67F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6800 DEFB $00,$01,$07,$1F,$FF,$77,$67,$EE
 $6808 DEFB $BE,$E7,$C5,$0F,$C8,$80,$00,$20
 $6810 DEFB $E0,$E0,$80,$00,$00,$01,$03,$06
 $6818 DEFB $06,$02,$03,$01,$FF,$FF,$FF,$61
 $6820 DEFB $70,$30,$B8,$FD,$00,$C0,$F0,$F0
 $6828 DEFB $F8,$F8,$F8,$C8,$3F,$0F,$00,$00
 $6830 DEFB $00,$00,$00,$00,$FE,$FF,$3F,$00
 $6838 DEFB $00,$00,$00,$00,$00,$80,$E0,$F8
 $6840 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6848 DEFB $00,$00,$60,$7C,$FF,$FF,$7F,$1F
 $6850 DEFB $1E,$3E,$2C,$64,$FC,$E4,$E4,$84
 $6858 DEFB $04,$00,$00,$00,$00,$01,$03,$03
 $6860 DEFB $03,$01,$01,$01,$7F,$FF,$FF,$FF
 $6868 DEFB $87,$83,$C1,$E1,$80,$E0,$E0,$F8
 $6870 DEFB $F8,$F8,$FC,$FC,$01,$01,$02,$8D
 $6878 DEFB $40,$9C,$67,$39,$03,$03,$3F,$3A
 $6880 DEFB $3A,$3F,$3D,$3D,$00,$00,$00,$00
 $6888 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6890 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6898 DEFB $00,$00,$00,$00,$0F,$3C,$F8,$00
 $68A0 DEFB $00,$00,$00,$00,$FF,$FF,$FF,$FF
 $68A8 DEFB $FF,$FF,$FF,$FF,$F0,$3C,$1F,$00
 $68B0 DEFB $00,$00,$00,$00,$00,$00,$01,$03
 $68B8 DEFB $0F,$3C,$00,$03,$7E,$FF,$FF,$FF
 $68C0 DEFB $FF,$7E,$FF,$FF,$00,$00,$80,$C0
 $68C8 DEFB $F0,$3C,$00,$C0,$0F,$1C,$00,$03
 $68D0 DEFB $07,$0F,$3F,$F0,$3C,$7E,$FF,$FF
 $68D8 DEFB $FF,$FF,$3C,$3C,$F0,$38,$00,$C0
 $68E0 DEFB $E0,$F0,$FC,$0F,$00,$00,$00,$00
 $68E8 DEFB $00,$00,$01,$03,$18,$3C,$7E,$DB
 $68F0 DEFB $3C,$7E,$FF,$FF,$00,$00,$00,$00
 $68F8 DEFB $00,$00,$80,$C0,$00,$00,$00,$00
 $6900 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6908 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6910 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6918 DEFB $03,$0F,$3C,$E0,$00,$00,$00,$E0
 $6920 DEFB $FC,$0F,$00,$00,$00,$00,$00,$00
 $6928 DEFB $00,$E0,$7C,$07,$3F,$3F,$3F,$38
 $6930 DEFB $38,$38,$3E,$69,$47,$69,$50,$69
 $6938 DEFB $59,$69,$62,$69,$6B,$69,$02,$00
 $6940 DEFB $00,$84,$68,$18,$5B,$05,$03,$00
 $6948 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6950 DEFB $01,$00,$00,$00,$5B,$7E,$68,$03
 $6958 DEFB $01,$01,$00,$00,$00,$5B,$81,$68
 $6960 DEFB $03,$01,$03,$00,$00,$FC,$68,$2C
 $6968 DEFB $69,$02,$03,$00,$00,$00,$00,$00
 $6970 DEFB $00,$00,$00,$00

; Data block at 6974
b$6974 DEFB $00,$00,$00,$01,$00,$00,$00,$00
 $697C DEFB $7E,$7E,$FF,$E7,$00,$00,$00,$00
 $6984 DEFB $00,$00,$80,$00,$00,$00,$00,$00
 $698C DEFB $C3,$E3,$FB,$7F,$1F,$0F,$03,$01
 $6994 DEFB $FF,$BD,$BD,$81,$81,$81,$E7,$FF
 $699C DEFB $C3,$C7,$DF,$FE,$F8,$F0,$C0,$80
 $69A4 DEFB $00,$01,$07,$0E,$0C,$0C,$04,$06
 $69AC DEFB $7E,$FF,$99,$18,$18,$18,$7E,$FF
 $69B4 DEFB $00,$80,$E0,$70,$30,$30,$20,$60
 $69BC DEFB $02,$EE,$01,$9D,$01,$12,$00,$11
 $69C4 DEFB $03,$10,$01,$16,$16,$0A,$8A

; Message at 69CB
t$69CB DEFM "      "

; Data block at 69D1
b$69D1 DEFB $85,$12,$00,$11,$02,$10,$07,$16
 $69D9 DEFB $16,$0A

; FINISH
t$69DB DEFM " FINISH "

; Data block at 69E3
b$69E3 DEFB $12,$00,$11,$03,$10,$01,$16,$16
 $69EB DEFB $0A,$8A,$20,$20,$20,$20,$20,$20
 $69F3 DEFB $85,$12,$00,$11,$07,$10,$01,$16
 $69FB DEFB $16,$0A,$8A,$20,$20,$20,$20,$20
 $6A03 DEFB $20,$85,$12,$00,$11,$07,$10,$01
 $6A0B DEFB $16,$16,$0A,$8A,$20,$20,$20,$20
 $6A13 DEFB $20,$20,$85,$12,$00,$11,$07,$10
 $6A1B DEFB $07,$16,$16,$0A,$20,$20,$20,$20
 $6A23 DEFB $20,$20,$20,$20

; String table
w$6A27 DEFW $6A35
 $6A29 DEFW $6A56
 $6A2B DEFW $6A77
 $6A2D DEFW $6A98
 $6A2F DEFW $6AB9
 $6A31 DEFW $6ADA
 $6A33 DEFW $6AFB

; String 1 : SKI HIRE $10
t$6A35 DEFM $12,$01,$11,$02,$10,$07,$16,$01,$04,"***   SKI HIRE $10   ***"

; String 2 : AMBULANCE FEE $10
t$6A56 DEFM $12,$01,$11,$02,$10,$07,$16,$01,$04,"** AMBULANCE FEE  $10 **"

; String 3 : LUCKY! SKIS STILL OK
t$6A77 DEFM $11,$01,$10,$07,$12,$01,$16,$01,$04,"* LUCKY! SKIS STILL OK *"

; String 4 : BONUS 100 POINTS
t$6A98 DEFM $11,$01,$10,$07,$12,$01,$16,$01,$04,"**  BONUS 100 POINTS  **"

; String 5 : BAD LUCK! SKIS BROKEN
t$6AB9 DEFM $11,$02,$10,$07,$12,$01,$16,$01,$04,"*BAD LUCK!  SKIS BROKEN*"

; String 6 : SORRY - NO MONEY NO SKI!
t$6ADA DEFM $12,$01,$11,$02,$10,$07,$16,$01,$04,"SORRY - NO MONEY NO SKI!"

; MISSED BONUS
t$6AFB DEFM $11,$02,$10,$07,$12,$01,$16,$01,$04,"****  MISSED BONUS  ****"

; Demo mode text 1
t$6B1C DEFM $12,$01,$11,$07,$10,$01,$16,$00,$00,"DEMO MODE"

; Demo mode text 2
t$6B2E DEFM $12,$00,$11,$07,$10,$01,$16,$00,$09,"  PRESS ANY KEY TO PLAY"

; Message at 6B4E
t$6B4E DEFM $12,$00,$11,$07,$10,$00,$16,$01,$04,"                        "

; Data block at 6B6F
b$6B6F DEFB $00,$00,$00,$01,$01,$04,$06,$0A
 $6B77 DEFB $C3,$60,$5A,$01,$14

; Scrolling message
t$6B7C DEFM $12,$00,$11,$07,$10,$01,$16,$16,$01,"COPYRIGHT ",$7F," 1982 BEAM SOFTWARE - WRITTEN BY WILLIAM TANG"
 $6BBD DEFM " - "

; Initialize display
;
; Used by the routines at #R$70AB and #R$792A.
c$6BC0 LD B,$18      ; { Clear #N$18 lines
 $6BC2 CALL $0E44    ; }
 $6BC5 XOR A         ; Set #REGa to 0 to reset some flags
 $6BC6 LD ($5EFD),A  ;
 $6BC9 LD ($5E94),A  ;
 $6BCC LD ($5E8D),A  ; Set Horace's state to 0
 $6BCF LD ($5E8E),A  ;
 $6BD2 LD ($5EB5),A  ; Set no message to print
 $6BD5 LD ($5EB7),A  ;
 $6BD8 INC A         ;
 $6BD9 LD ($5E9C),A  ;
 $6BDC LD HL,$5F07   ; { Clear object screen addresses
 $6BDF LD DE,$5F08   ;
 $6BE2 LD BC,$00DF   ;
 $6BE5 LD (HL),$00   ;
 $6BE7 LDIR          ; }
 $6BE9 LD A,($5EB8)  ; { Is the game in demo mode?
 $6BEC AND A         ; }
 $6BED JR Z,$6C02    ; Jump forward if not
 $6BEF LD DE,$6B1C   ; Set #REGde to demo mode text 1 (#R$6B1C)
 $6BF2 LD BC,$0012   ; Set #REGde to the length
 $6BF5 CALL $203C    ; Print it
 $6BF8 LD DE,$6B2E   ; Set #REGde to demo mode text 2 (#R$6B2E)
 $6BFB LD BC,$0020   ; Set #REGde to the length
 $6BFE CALL $203C    ; Print it
 $6C01 RET           ; Return
*$6C02 LD DE,$60B9   ; Set #REGde to the display text (#R$60B9)
 $6C05 LD BC,$0028   ; Set #REGbc to the length
 $6C08 CALL $203C    ; Print the string

; Print the hi score
;
; Used by the routine at #R$6DBC.
c$6C0B LD HL,$5CDB   ; Point #REGhl at the hi score digits (#R$5CDB)
 $6C0E CALL $6D53    ; Copy this into the dynamic string buffer
 $6C11 LD A,$1B      ;
 $6C13 LD ($60EA),A  ;
 $6C16 LD DE,$60E2   ; Print text starting at #R$60e2
 $6C19 LD BC,$000E   ; Set the length to #N$E
 $6C1C CALL $203C    ; { Print the string and return
 $6C1F RET           ; }

; Draw a sprite
;
; Used by the routines at #R$6C8B, #R$769C, #R$7C74 and #R$7D5F.
;
; HL Screen address to draw
; DE Sprite to draw
c$6C20 LD A,($5F05)  ; Put the number of rows to draw in #REGa.
 $6C23 EX AF,AF'     ; Swap #REGaf for the alternate set
 $6C24 PUSH HL       ; Store #REGhl
*$6C25 PUSH HL       ; Store #REGhl
 $6C26 LD A,($5F06)  ; { Put the number of columns in #REGc
 $6C29 LD C,A        ; }
*$6C2A PUSH HL       ; Store #REGhl
 $6C2B LD B,$08      ; Repeat for 8 sub-rows
*$6C2D LD A,(DE)     ; { Move the sprite data on screen
 $6C2E LD (HL),A     ; }
 $6C2F INC DE        ; Move to the next sprite data
 $6C30 INC H         ; Move to the next sub-row
 $6C31 DJNZ $6C2D    ; Repeat until all sub-rows have been drawn
 $6C33 POP HL        ; Restore #REGhl
 $6C34 INC HL        ; Move to the next column
 $6C35 DEC C         ; { Repeat until all columns are drawn
 $6C36 JR NZ,$6C2A   ; }
 $6C38 POP HL        ; Restore #REGhl
 $6C39 EX AF,AF'     ; Restore number of rows in #REGa
 $6C3A DEC A         ; Decrease number of rows
 $6C3B LD C,$20      ; Next row has offset of #N$20 added
 $6C3D JR Z,$6C4D    ; Jump forward if there are no rows left to draw
 $6C3F EX AF,AF'     ; Swap #REGaf to remember the number of rows
 $6C40 AND A         ; { Move up a row
 $6C41 SBC HL,BC     ; }
 $6C43 BIT 0,H       ; Has the top of this screen sector been reached?
 $6C45 JR Z,$6C25    ; Jump back if not.
 $6C47 LD A,H        ; { The sprite overlaps a third of the screen, 
 $6C48 SUB $07       ; so ajust the target address
 $6C4A LD H,A        ; 
 $6C4B JR $6C25      ; }
; The sprite is now on screen, so set the attributes
*$6C4D POP HL        ; Restore #REGhl
 $6C4E LD A,H        ; Take the high byte of the screen address
 $6C4F AND $18       ; { Convert it to an attribute address
 $6C51 SRA A         ;
 $6C53 SRA A         ;
 $6C55 SRA A         ;
 $6C57 ADD A,$58     ;
 $6C59 LD H,A        ; }
 $6C5A LD ($5E78),HL ; Set this as the next attribute address to use
 $6C5D LD A,($5F04)  ; Set #REGa to the attribute to use
 $6C60 LD D,A        ;
 $6C61 LD E,A        ;
 $6C62 LD A,($5E94)  ;
 $6C65 AND A         ;
 $6C66 JR Z,$6C73    ;
 $6C68 BIT 0,A       ;
 $6C6A LD D,$04      ;
 $6C6C LD E,$3C      ;
 $6C6E JR Z,$6C73    ;
 $6C70 LD A,D        ;
 $6C71 LD D,E        ;
 $6C72 LD E,A        ;
*$6C73 LD A,($5F05)  ;
*$6C76 EX AF,AF'     ;
 $6C77 PUSH HL       ;
 $6C78 LD A,($5F06)  ;
 $6C7B LD B,A        ;
*$6C7C LD (HL),E     ;
 $6C7D INC HL        ;
 $6C7E DJNZ $6C7C    ;
 $6C80 POP HL        ;
 $6C81 AND A         ;
 $6C82 SBC HL,BC     ;
 $6C84 LD E,D        ;
 $6C85 EX AF,AF'     ;
 $6C86 DEC A         ;
 $6C87 JR NZ,$6C76   ;
 $6C89 EX AF,AF'     ;
 $6C8A RET           ;

; Routine at 6C8B
;
; Used by the routine at #R$781B.
c$6C8B LD HL,($5E89) ;
 $6C8E LD A,H        ;
 $6C8F CP $40        ;
 $6C91 JR NZ,$6C97   ;
 $6C93 LD A,L        ;
 $6C94 CP $40        ;
 $6C96 RET C         ;
*$6C97 EXX           ;
 $6C98 LD HL,$60B5   ;
 $6C9B EXX           ;
 $6C9C LD A,$02      ;
 $6C9E LD ($5E7A),A  ;
 $6CA1 LD DE,($5F02) ;
 $6CA5 CALL $6C20    ; Draw the sprite
 $6CA8 LD B,$05      ;
*$6CAA PUSH BC       ;
 $6CAB XOR A         ;
 $6CAC CALL $6CB9    ;
 $6CAF LD A,($5E7A)  ;
 $6CB2 CALL $6CB9    ;
 $6CB5 POP BC        ;
 $6CB6 DJNZ $6CAA    ;
 $6CB8 RET           ;

; Routine at 6CB9
;
; Used by the routine at #R$6C8B.
c$6CB9 LD DE,$FFE0   ;
 $6CBC LD HL,($5E78) ;
 $6CBF LD B,$02      ;
 $6CC1 LD C,A        ;
*$6CC2 PUSH BC       ;
 $6CC3 PUSH HL       ;
 $6CC4 LD A,($5F06)  ;
 $6CC7 LD B,A        ;
*$6CC8 LD (HL),C     ;
 $6CC9 INC HL        ;
 $6CCA DJNZ $6CC8    ;
 $6CCC POP HL        ;
 $6CCD ADD HL,DE     ;
 $6CCE POP BC        ;
 $6CCF DJNZ $6CC2    ;
 $6CD1 EXX           ;
 $6CD2 PUSH HL       ;
 $6CD3 CALL $6E0D    ;
 $6CD6 POP HL        ;
 $6CD7 LD BC,$FFFC   ;
 $6CDA ADD HL,BC     ;
 $6CDB EXX           ;
 $6CDC RET           ;

; Routine at 6CDD
;
; Used by the routines at #R$6053 and #R$78B4.
c$6CDD LD A,($5EFD)  ;
 $6CE0 AND A         ;
 $6CE1 JR Z,$6D0C    ;
 $6CE3 LD A,($5E73)  ;
 $6CE6 AND A         ;
 $6CE7 JR Z,$6D0C    ;
 $6CE9 LD B,A        ;
 $6CEA ADD A,A       ;
 $6CEB ADD A,A       ;
 $6CEC ADD A,B       ;
 $6CED LD HL,$5CDA   ;
 $6CF0 ADD A,(HL)    ;
 $6CF1 LD (HL),A     ;
 $6CF2 XOR A         ;
 $6CF3 LD ($5E73),A  ;
 $6CF6 CALL $6D35    ;
 $6CF9 LD A,($5CD5)  ;
 $6CFC CP $30        ;
 $6CFE JR NC,$6D0C   ;
 $6D00 LD HL,$5CD5   ;
 $6D03 LD DE,$5CD6   ;
 $6D06 LD (HL),$30   ;
 $6D08 LD C,$05      ;
 $6D0A LDIR          ;
*$6D0C LD HL,$5CD6   ;
 $6D0F CALL $6D53    ;
 $6D12 LD A,$11      ;
 $6D14 LD ($60EA),A  ;
 $6D17 LD BC,$000E   ;
 $6D1A LD DE,$60E2   ;
 $6D1D CALL $203C    ;
 $6D20 LD HL,$5CD6   ;
 $6D23 LD A,(HL)     ;
 $6D24 INC HL        ;
 $6D25 ADD A,(HL)    ;
 $6D26 LD B,A        ;
 $6D27 LD A,($5EC3)  ;
 $6D2A CP B          ;
 $6D2B RET NC        ;
 $6D2C LD A,B        ;
 $6D2D LD ($5EC3),A  ;
 $6D30 LD HL,$5EBF   ; { Add $10
 $6D33 INC (HL)      ; }
 $6D34 RET           ;

; Routine at 6D35
;
; Used by the routines at #R$6CDD and #R$6D6B.
c$6D35 LD BC,$050A   ;
 $6D38 LD DE,$3A30   ;
*$6D3B LD A,(HL)     ;
*$6D3C CP D          ;
 $6D3D JR NC,$6D48   ;
 $6D3F CP E          ;
 $6D40 JR NC,$6D4E   ;
 $6D42 ADD A,C       ;
 $6D43 DEC HL        ;
 $6D44 DEC (HL)      ;
 $6D45 INC HL        ;
 $6D46 JR $6D3C      ;
*$6D48 SUB C         ;
 $6D49 DEC HL        ;
 $6D4A INC (HL)      ;
 $6D4B INC HL        ;
 $6D4C JR $6D3C      ;
*$6D4E LD (HL),A     ;
 $6D4F DEC HL        ;
 $6D50 DJNZ $6D3B    ;
 $6D52 RET           ;

; Copy a number into a string
;
; Used by the routines at #R$6C0B, #R$6CDD and #R$6D6B.
; 
; HL Address of data to copy
c$6D53 LD DE,$60EB   ; Point #REGde at the dynamic text (#R$60e2)
 $6D56 LD BC,$0005   ; Copy five digits
 $6D59 LDIR          ; Do the copy
; Remove any trailing zeros before printing
 $6D5B LD HL,$60EB   ; Point #REGhl at the dynamic text
 $6D5E LD BC,$0430   ; Set #REGb to count 4 digits, and #REGc to '0'
*$6D61 LD A,C        ; Set #REGa to '0'
 $6D62 CP (HL)       ; Is the digit zero here?
 $6D63 JR NZ,$6D6A   ; If not, done copying, so jump forward to exit
 $6D65 LD (HL),$20   ; Otherwise, replace '0' with a space
 $6D67 INC HL        ; Move to the next digit
 $6D68 DJNZ $6D61    ; Repeat until all digits looked at
*$6D6A RET           ; All done, so return

; Routine at 6D6B
;
; Used by the routines at #R$6053 and #R$78B4.
c$6D6B LD A,($5EFD)  ;
 $6D6E AND A         ;
 $6D6F JR Z,$6D8D    ;
 $6D71 LD A,($5EBF)  ;
 $6D74 BIT 7,A       ;
 $6D76 JR Z,$6D82    ;
 $6D78 CALL $6DBC    ; Update the hi score
 $6D7B XOR A         ;
 $6D7C LD ($5EBE),A  ;
 $6D7F LD ($5EBF),A  ;
*$6D82 ADD A,$30     ; { Convert this to ASCII and store it in the 'tens' digit
 $6D84 LD ($5CD3),A  ; }
 $6D87 LD HL,$5CD4   ;
 $6D8A CALL $6D35    ;
*$6D8D LD HL,$5CD0   ;
 $6D90 CALL $6D53    ;
 $6D93 LD DE,$60EB   ;
 $6D96 LD HL,$60ED   ;
 $6D99 LD BC,$0003   ;
 $6D9C LDIR          ;
 $6D9E LD A,$06      ;
 $6DA0 LD ($60EA),A  ;
 $6DA3 LD DE,$60E2   ;
 $6DA6 LD BC,$000C   ;
 $6DA9 CALL $203C    ;
 $6DAC RET           ;

; Generate a random number
;
; Used by the routines at #R$6E4A, #R$7164, #R$71E6, #R$7C74 and #R$7D5F.
;
; A On exit, holds a random number
c$6DAD PUSH HL       ; Store #REGhl
 $6DAE LD HL,($5E87) ; Get the current seed value (#R$5E87)
 $6DB1 INC HL        ; Increment it
 $6DB2 LD A,$3F      ; { Change the high byte to be ANDed against #N$3F
 $6DB4 AND H         ;
 $6DB5 LD H,A        ; }
 $6DB6 LD A,(HL)     ; Set the return value to the contents of this
 $6DB7 LD ($5E87),HL ; Store the new seed value
 $6DBA POP HL        ; { Restore #REGhl and return
 $6DBB RET           ; }

; Update the high score if required
;
; Used by the routine at #R$6D6B.
c$6DBC LD HL,$5CD6   ; Point #REGhl at the current score (#R$5CD6)
 $6DBF LD DE,$5CDB   ; Point #REGde at the high score (#R$5CDB)
 $6DC2 LD B,$05      ; 5 digits to check
*$6DC4 LD A,(DE)     ; Get the next hi score digit
 $6DC5 CP (HL)       ; Compare it to the current digit
 $6DC6 JR Z,$6DCB    ; Jump forward if the digits are the same
 $6DC8 RET NC        ; Return if the current digit is less
 $6DC9 JR $6DD0      ; Otherwise, the current score must be higher, so handle that
; This score digit is the same as the hi score, what about the others?
*$6DCB INC DE        ; { Move to the next digits
 $6DCC INC HL        ; }
 $6DCD DJNZ $6DC4    ; Jump back if there are more digits to check
 $6DCF RET           ; Otherwise the current score must equal the hi score, so exit
; The current score is greater than the hi score, so update it
*$6DD0 LD HL,$5CD6   ; { Copy the current score into the high score
 $6DD3 LD DE,$5CDB   ;
 $6DD6 LD BC,$0005   ;
 $6DD9 LDIR          ; }
 $6DDB CALL $6C0B    ; { Print the high score
 $6DDE RET           ; and return }

; Routine at 6DDF
;
; Used by the routine at #R$6053.
c$6DDF LD A,$BF      ; { Was 'ENTER' pressed?
 $6DE1 IN A,($FE)    ;
 $6DE3 AND $01       ; }
 $6DE5 JR NZ,$6DF0   ; Jump forward if so
 $6DE7 LD A,($5E71)  ;
 $6DEA INC A         ;
 $6DEB AND $01       ;
 $6DED LD ($5E71),A  ;
*$6DF0 LD A,($5E71)  ;
 $6DF3 AND A         ;
 $6DF4 JR Z,$6E1B    ;
 $6DF6 LD A,($5F07)  ;
 $6DF9 AND A         ;
 $6DFA JR Z,$6E1B    ;

; Play a sound effect
;
; Used by the routine at #R$783B.
c$6DFC LD A,($5E72)  ; { Toggle effect flag between 0 and 1
 $6DFF INC A         ;
 $6E00 AND $01       ;
 $6E02 LD ($5E72),A  ; }
 $6E05 LD HL,$5BF4   ; { If the flag is 0, use #R$5BF8, otherwise #R$5BF4.
 $6E08 JR Z,$6E0D    ; Control then passes to 
 $6E0A LD HL,$5BF8   ; }

; Play a note
;
; Used by the routines at #R$6CB9, #R$6DFC and #R$7C74.
;
; HL Pointer to note data
c$6E0D LD E,(HL)     ; { First two bytes are the length 
 $6E0E INC HL        ;
 $6E0F LD D,(HL)     ; }
 $6E10 INC HL        ; { Second two bytes are the frequency
 $6E11 LD C,(HL)     ;
 $6E12 INC HL        ;
 $6E13 LD B,(HL)     ; }
 $6E14 PUSH BC       ; { Put the frequency in #REGhl, which is what the ROM routine expects.
 $6E15 POP HL        ; }
 $6E16 CALL $03B5    ; Run the ROM routine to play a note
 $6E19 DI            ; { Disable interrupts (set in the ROM routine) and return
 $6E1A RET           ; }

; Routine at 6E1B
;
; Used by the routines at #R$6DDF, #R$703F and #R$78B4.
c$6E1B LD BC,($5E97) ;
; This entry point is used by the routine at #R$783B.
*$6E1F DEC BC        ;
 $6E20 LD A,B        ;
 $6E21 OR C          ;
 $6E22 JR NZ,$6E1F   ;
 $6E24 RET           ;

; Routine at 6E25
;
; Used by the routines at #R$7532, #R$7D5F and #R$7F04.
c$6E25 LD HL,$5E9B   ;
 $6E28 LD C,$10      ;
*$6E2A LD B,C        ;
 $6E2B SLA B         ;
 $6E2D SLA B         ;
 $6E2F SLA B         ;
 $6E31 LD E,B        ;
 $6E32 LD D,$08      ;
*$6E34 LD B,E        ;
 $6E35 LD A,$1F      ;
 $6E37 AND (HL)      ;
 $6E38 OUT ($FE),A   ;
*$6E3A DJNZ $6E3A    ;
 $6E3C AND $07       ;
 $6E3E OUT ($FE),A   ;
 $6E40 LD B,E        ;
*$6E41 DJNZ $6E41    ;
 $6E43 DEC D         ;
 $6E44 JR NZ,$6E34   ;
 $6E46 DEC C         ;
 $6E47 JR NZ,$6E2A   ;
 $6E49 RET           ;

; Get keyboard input
;
; Used by the routines at #R$75B5 and #R$7E25.
;
; B On exit, holds 0 = up, 1 = right, 2 = down, 3 = left
c$6E4A LD BC,$04F7   ;
 $6E4D LD DE,$5EB8   ;
 $6E50 LD A,(DE)     ;
 $6E51 AND A         ;
 $6E52 JR Z,$6EAF    ;
 $6E54 BIT 0,A       ;
 $6E56 JR NZ,$6E60   ;
 $6E58 CP $02        ;
 $6E5A JR Z,$6E89    ;
 $6E5C LD B,$00      ;
 $6E5E JR $6E8B      ;
*$6E60 CP $05        ;
 $6E62 JR Z,$6E7D    ;
 $6E64 LD HL,$5EC6   ;
 $6E67 LD A,(HL)     ;
 $6E68 AND A         ;
 $6E69 JR NZ,$6E6D   ;
 $6E6B LD (HL),$14   ;
*$6E6D DEC (HL)      ;
 $6E6E LD A,($5EC5)  ;
 $6E71 JR NZ,$6E77   ;
 $6E73 XOR $03       ;
 $6E75 OR $01        ;
*$6E77 LD B,A        ;
 $6E78 LD ($5EC5),A  ;
 $6E7B JR $6E8B      ;
*$6E7D CALL $6DAD    ;
 $6E80 AND $03       ;
 $6E82 BIT 0,A       ;
 $6E84 JR Z,$6E9E    ;
 $6E86 LD B,A        ;
 $6E87 JR $6E8B      ;
*$6E89 LD B,$02      ;
*$6E8B LD HL,$5EC4   ;
 $6E8E DEC (HL)      ;
 $6E8F JR NZ,$6E9E   ;
 $6E91 LD (HL),$5A   ;
 $6E93 LD A,(DE)     ;
 $6E94 INC A         ;
 $6E95 CP $05        ;
 $6E97 LD (DE),A     ;
 $6E98 JR C,$6E9E    ;
 $6E9A XOR A         ;
 $6E9B LD ($5E9C),A  ;
*$6E9E XOR A         ;
 $6E9F IN A,($FE)    ;
 $6EA1 AND $1F       ;
 $6EA3 CP $1F        ;
 $6EA5 RET Z         ;
 $6EA6 XOR A         ;
 $6EA7 LD ($5E9C),A  ;
 $6EAA INC A         ;
 $6EAB LD ($5EB9),A  ;
 $6EAE RET           ;
*$6EAF LD A,$FD      ; { Was 'S' pressed?
 $6EB1 IN A,($FE)    ;
 $6EB3 AND $02       ; }
 $6EB5 JR NZ,$6ECB   ; Jump forward if not
; 'S' was pressed, so pause the game
*$6EB7 LD A,$7F      ; { Read 'SPACE' to 'B' on the keyboard
 $6EB9 IN A,($FE)    ; }
 $6EBB AND $1F       ; { Were any keys pressed?
 $6EBD CP $1F        ; }
 $6EBF JR NZ,$6ECB   ; Jump forward if so
 $6EC1 LD A,$FE      ; { Read 'CAPS' to 'V' on the keyboard
 $6EC3 IN A,($FE)    ; }
 $6EC5 AND $1F       ; { Were any keys pressed?
 $6EC7 CP $1F        ; }
 $6EC9 JR Z,$6EB7    ; Jump back if not
; Game is not paused, so carry on
*$6ECB LD A,$BF      ; { Was 'H' pressed?
 $6ECD IN A,($FE)    ;
 $6ECF AND $10       ; }
 $6ED1 JR NZ,$6EDF   ; Jump forward if not
 $6ED3 LD A,$FD      ; { Was 'G' pressed?
 $6ED5 IN A,($FE)    ;
 $6ED7 AND $10       ; }
 $6ED9 JR NZ,$6EDF   ; Jump forward if not
; Game is aborted
 $6EDB INC A         ; { Set the 'game over' flag 
 $6EDC LD ($5EB9),A  ; }
; Check for movement
*$6EDF LD DE,$DFEF   ; Set #REGde to read the top right of the keyboard
; Check for moving right
 $6EE2 LD A,D        ; { Read 'P' - 'Y'
 $6EE3 IN A,($FE)    ; }
 $6EE5 BIT 0,A       ; Was 'P' pressed?
 $6EE7 JR Z,$6EF7    ; Jump forward if so
 $6EE9 LD A,E        ; { Read '0' - '6'
 $6EEA IN A,($FE)    ; }
 $6EEC BIT 3,A       ; Was '7' pressed?
 $6EEE JR Z,$6EF7    ; Jump forward if so.
 $6EF0 LD A,C        ; { Read '1' - '5'
 $6EF1 IN A,($FE)    ; }
 $6EF3 BIT 1,A       ; Was '2' pressed?
 $6EF5 JR NZ,$6EF9   ; Jump forward if not.
*$6EF7 LD B,$01      ; Set direction to RIGHT
; Check for moving left
*$6EF9 LD A,C        ; { Read '1' - '5'
 $6EFA IN A,($FE)    ; }
 $6EFC BIT 0,A       ; Was '1' pressed?
 $6EFE JR Z,$6F0E    ; Jump forward if so
 $6F00 LD A,D        ; { Read 'P' - 'Y'
 $6F01 IN A,($FE)    ; }
 $6F03 BIT 2,A       ; Was 'I' pressed?
 $6F05 JR Z,$6F0E    ; Jump forward if so
 $6F07 LD A,E        ; { Read '0' - '6'
 $6F08 IN A,($FE)    ; }
 $6F0A BIT 4,A       ; Was '6' pressed?
 $6F0C JR NZ,$6F10   ; Jump foward if not
*$6F0E LD B,$03      ; Set direction to LEFT
; Check for moving up
*$6F10 LD A,E        ; { Read '0' - '6'
 $6F11 IN A,($FE)    ; }
 $6F13 BIT 1,A       ; Was '9' pressed?
 $6F15 JR Z,$6F26    ; Jump forward if so
 $6F17 LD A,$FB      ; { Read 'Q' - 'T'
 $6F19 IN A,($FE)    ; }
 $6F1B BIT 0,A       ; Was 'Q' pressed?
 $6F1D JR Z,$6F26    ; Jump forward if so
 $6F1F LD A,C        ; { Read '1' - '5'
 $6F20 IN A,($FE)    ; }
 $6F22 BIT 3,A       ; Was '4' pressed?
 $6F24 JR NZ,$6F28   ; Jump forward if not
*$6F26 LD B,$00      ; Set direction to UP
; Check for moving down
*$6F28 LD A,C        ; { Read '1' - '5'
 $6F29 IN A,($FE)    ; }
 $6F2B BIT 2,A       ; Was '3' pressed?
 $6F2D JR Z,$6F3D    ; Jump forward if so
 $6F2F LD A,$FE      ; { Read CAPS - 'V' 
 $6F31 IN A,($FE)    ; }
 $6F33 BIT 1,A       ; Was 'Z' pressed?
 $6F35 JR Z,$6F3D    ; Jump forward if so
 $6F37 LD A,E        ; Read { '0' - '6' 
 $6F38 IN A,($FE)    ; }
 $6F3A BIT 2,A       ; Was '8' pressed?
 $6F3C RET NZ        ; Return if not
*$6F3D LD B,$02      ; Set direction to DOWN
 $6F3F RET           ; Return

; Run the intro screen
;
; Used by the routine at #R$601C.
c$6F40 XOR A         ;
 $6F41 LD ($5EB8),A  ;
 $6F44 LD ($5EB9),A  ;
 $6F47 LD A,$3F      ;
 $6F49 LD ($5C8D),A  ;
 $6F4C LD B,$18      ; { Clear #N$18 lines of the display.
 $6F4E CALL $0E44    ; }
 $6F51 LD A,$8C      ; { Set the timer to #N$8C ticks
 $6F53 LD ($5E70),A  ; }
 $6F56 LD DE,$4040   ; { Print the top line of text
 $6F59 LD HL,$5B27   ;
 $6F5C LD C,$10      ;
 $6F5E CALL $6FD0    ; }
 $6F61 LD DE,$4825   ; { Print the middle line of text
 $6F64 LD HL,$5B77   ;
 $6F67 LD C,$0B      ; 
 $6F69 CALL $6FD0    ; }
 $6F6C LD DE,$5002   ; { Print the bottom line of text
 $6F6F LD HL,$5BAE   ;
 $6F72 LD C,$0E      ;
 $6F74 CALL $6FD0    ; }
*$6F77 LD DE,$6B7C   ; Print a string starting at #R$6B7C
 $6F7A LD BC,$0027   ; Print #N$27 characters
 $6F7D CALL $203C    ; Print the string
 $6F80 LD HL,$5E9E   ; { Put the current fill attribute in #REGa
 $6F83 LD A,(HL)     ; }
 $6F84 INC A         ; { Move it to the next one, and keep only the INK colour
 $6F85 AND $07       ;
 $6F87 LD (HL),A     ; }
 $6F88 ADD A,$38     ; Set white PAPER
 $6F8A LD HL,$5840   ; { Fill the centre attributes with this
 $6F8D LD DE,$5841   ;
 $6F90 LD BC,$025F   ;
 $6F93 LD (HL),A     ;
 $6F94 LDIR          ; }
 $6F96 CALL $700E    ; Advance the scrolling message by one character
 $6F99 CALL $701C    ; Make a sound effect
 $6F9C XOR A         ; { Read the keyboard
 $6F9D IN A,($FE)    ; }
 $6F9F AND $1F       ; Keep only the bottom 5 bits; the others are undefined
 $6FA1 CP $1F        ; Was a key pressed?
 $6FA3 JR NZ,$6FAF   ; Jump forward if so
 $6FA5 LD HL,$5E70   ; { Otherwise decrement the timer on the title screen
 $6FA8 DEC (HL)      ; }
 $6FA9 JR NZ,$6F77   ; Jump back to run another frame of the title screen if there is time
 $6FAB LD HL,$5EB8   ;
 $6FAE INC (HL)      ;
*$6FAF LD HL,$5CD5   ;
 $6FB2 LD DE,$5CCF   ;
 $6FB5 LD A,$30      ;
 $6FB7 LD (HL),A     ;
 $6FB8 LD B,$05      ;
*$6FBA INC HL        ;
 $6FBB INC DE        ;
 $6FBC LD (HL),A     ;
 $6FBD LD (DE),A     ;
 $6FBE DJNZ $6FBA    ;
 $6FC0 LD A,$34      ;
 $6FC2 LD ($5CD3),A  ;
 $6FC5 LD HL,$6B6F   ;
 $6FC8 LD DE,$5EBA   ;
 $6FCB LD C,$0D      ;
 $6FCD LDIR          ;
 $6FCF RET           ;

; Print a line of text on the intro screen
;
; Used by the routine at #R$6F40.
c$6FD0 LD B,$05      ;
*$6FD2 PUSH BC       ;
 $6FD3 PUSH DE       ;
 $6FD4 LD B,C        ;
*$6FD5 PUSH BC       ;
 $6FD6 LD C,(HL)     ;
 $6FD7 EX AF,AF'     ;
 $6FD8 LD A,$02      ;
*$6FDA EX AF,AF'     ;
 $6FDB LD B,$02      ;
*$6FDD LD A,$00      ;
 $6FDF RL C          ;
 $6FE1 JR NC,$6FE5   ;
 $6FE3 ADD A,$0F     ;
*$6FE5 RL C          ;
 $6FE7 JR NC,$6FEB   ;
 $6FE9 ADD A,$F0     ;
*$6FEB PUSH BC       ;
 $6FEC LD B,$04      ;
*$6FEE LD (DE),A     ;
 $6FEF INC D         ;
 $6FF0 DJNZ $6FEE    ;
 $6FF2 POP BC        ;
 $6FF3 DJNZ $6FDD    ;
 $6FF5 LD A,D        ;
 $6FF6 SUB $08       ;
 $6FF8 LD D,A        ;
 $6FF9 INC DE        ;
 $6FFA EX AF,AF'     ;
 $6FFB DEC A         ;
 $6FFC JR NZ,$6FDA   ;
 $6FFE EX AF,AF'     ;
 $6FFF INC HL        ;
 $7000 POP BC        ;
 $7001 DJNZ $6FD5    ;
 $7003 POP DE        ;
 $7004 EX DE,HL      ;
 $7005 LD BC,$0020   ;
 $7008 ADD HL,BC     ;
 $7009 EX DE,HL      ;
 $700A POP BC        ;
 $700B DJNZ $6FD2    ;
 $700D RET           ;

; Advance the title scrolling message
;
; Used by the routine at #R$6F40.
c$700E LD DE,$6B85   ; { Put the first character in #REGa.
 $7011 LD A,(DE)     ; }
 $7012 LD HL,$6B86   ; { Advance all other characters by one.
 $7015 LD BC,$003A   ;
 $7018 LDIR          ; }
 $701A LD (DE),A     ; { Add the first character on the end and return.
 $701B RET           ; }

; Play a sound effect on the title screen
;
; Used by the routine at #R$6F40.
c$701C LD C,$10      ;
*$701E PUSH BC       ;
 $701F LD B,C        ;
 $7020 SLA B         ;
 $7022 SLA B         ;
 $7024 SLA B         ;
 $7026 LD D,B        ;
 $7027 LD E,$0A      ;
*$7029 LD B,D        ;
 $702A LD A,$1F      ;
 $702C OUT ($FE),A   ;
*$702E DJNZ $702E    ;
 $7030 LD A,$07      ;
 $7032 OUT ($FE),A   ;
 $7034 LD B,D        ;
*$7035 DJNZ $7035    ;
 $7037 DEC E         ;
 $7038 JR NZ,$7029   ;
 $703A POP BC        ;
 $703B DEC C         ;
 $703C JR NZ,$701E   ;
 $703E RET           ;

; Fill the screen with colours
;
; Used by the routine at #R$6053.
c$703F LD A,$19      ;
 $7041 LD ($5E9B),A  ;
 $7044 LD BC,$07FF   ;
 $7047 LD A,B        ;
 $7048 LD ($5E9E),A  ;
; This entry point is used by the routine at #R$7904.
*$704B LD HL,$1000   ;
 $704E LD ($5E97),HL ;
 $7051 LD HL,$5800   ; Point #REGhl at the attribute buffer
 $7054 LD DE,$0020   ; Set #REGde for the length of one line
*$7057 PUSH BC       ;
 $7058 PUSH HL       ;
 $7059 LD A,($5E9E)  ;
 $705C OUT ($FE),A   ;
 $705E LD C,A        ;
 $705F SLA A         ;
 $7061 SLA A         ;
 $7063 SLA A         ;
 $7065 LD ($5C48),A  ;
 $7068 ADD A,C       ;
 $7069 LD C,A        ;
 $706A LD A,$17      ;
 $706C EX AF,AF'     ;
 $706D LD A,$1F      ;
 $706F EX AF,AF'     ;
*$7070 PUSH HL       ;
 $7071 EX AF,AF'     ;
 $7072 LD B,A        ;
 $7073 EX AF,AF'     ;
*$7074 INC HL        ;
 $7075 LD (HL),C     ;
 $7076 DJNZ $7074    ;
 $7078 LD B,A        ;
*$7079 ADD HL,DE     ;
 $707A LD (HL),C     ;
 $707B DJNZ $7079    ;
 $707D EX AF,AF'     ;
 $707E LD B,A        ;
 $707F EX AF,AF'     ;
*$7080 DEC HL        ;
 $7081 LD (HL),C     ;
 $7082 DJNZ $7080    ;
 $7084 LD B,A        ;
*$7085 AND A         ;
 $7086 SBC HL,DE     ;
 $7088 LD (HL),C     ;
 $7089 DJNZ $7085    ;
 $708B POP HL        ;
 $708C SUB $02       ;
 $708E JR C,$709F    ;
 $7090 EX AF,AF'     ;
 $7091 SUB $02       ;
 $7093 EX AF,AF'     ;
 $7094 ADD HL,DE     ;
 $7095 INC HL        ;
 $7096 LD B,A        ;
 $7097 PUSH BC       ;
 $7098 CALL $6E1B    ;
 $709B POP BC        ;
 $709C LD A,B        ;
 $709D JR $7070      ;
*$709F POP HL        ;
 $70A0 POP BC        ;
 $70A1 LD A,($5E9E)  ;
 $70A4 ADD A,C       ;
 $70A5 LD ($5E9E),A  ;
 $70A8 DJNZ $7057    ;
 $70AA RET           ;

; Initialize traffic screen
;
; Used by the routine at #R$6053.
c$70AB XOR A         ;
 $70AC LD ($5EB6),A  ;
 $70AF INC A         ;
 $70B0 LD ($5E96),A  ;
 $70B3 LD ($5EA4),A  ;
 $70B6 LD ($5E71),A  ;
 $70B9 LD HL,$03E8   ;
 $70BC LD ($5EA5),HL ;
 $70BF LD HL,$0400   ;
 $70C2 LD A,($5EB8)  ;
 $70C5 AND A         ;
 $70C6 JR Z,$70CB    ;
 $70C8 LD HL,$0B00   ;
*$70CB LD ($5E97),HL ;
 $70CE CALL $6BC0    ;
 $70D1 CALL $70D5    ;
 $70D4 RET           ;

; Routine at 70D5
;
; Used by the routine at #R$70AB.
c$70D5 LD HL,$5820   ;
 $70D8 LD DE,$5821   ;
 $70DB LD BC,$003F   ;
 $70DE LD (HL),$38   ;
 $70E0 LDIR          ;
 $70E2 INC HL        ;
 $70E3 INC DE        ;
 $70E4 LD BC,$021F   ;
 $70E7 LD (HL),$00   ;
 $70E9 LDIR          ;
 $70EB INC HL        ;
 $70EC INC DE        ;
 $70ED LD C,$7F      ;
 $70EF LD (HL),$39   ;
 $70F1 LDIR          ;
 $70F3 LD HL,$5960   ;
 $70F6 LD DE,$5961   ;
 $70F9 LD C,$1F      ;
 $70FB LD (HL),$38   ;
 $70FD LDIR          ;
 $70FF LD HL,$4860   ;
 $7102 LD A,$FF      ;
 $7104 LD C,$20      ;
*$7106 PUSH HL       ;
 $7107 LD B,$08      ;
*$7109 LD (HL),A     ;
 $710A INC H         ;
 $710B DJNZ $7109    ;
 $710D POP HL        ;
 $710E INC HL        ;
 $710F DEC C         ;
 $7110 JR NZ,$7106   ;
 $7112 LD HL,$4B60   ;
 $7115 LD DE,$4C60   ;
 $7118 LD A,$C3      ;
 $711A LD B,$20      ;
*$711C LD (HL),A     ;
 $711D LD (DE),A     ;
 $711E INC HL        ;
 $711F INC DE        ;
 $7120 DJNZ $711C    ;

; Routine at 7122
;
; Used by the routine at #R$781B.
c$7122 LD DE,$65D2   ;
 $7125 LD HL,$50ED   ;
 $7128 LD A,$03      ;
*$712A EX AF,AF'     ;
 $712B LD C,$06      ;
 $712D PUSH HL       ;
*$712E LD B,$08      ;
 $7130 PUSH HL       ;
*$7131 LD A,(DE)     ;
 $7132 LD (HL),A     ;
 $7133 INC DE        ;
 $7134 INC H         ;
 $7135 DJNZ $7131    ;
 $7137 POP HL        ;
 $7138 INC HL        ;
 $7139 DEC C         ;
 $713A JR NZ,$712E   ;
 $713C POP HL        ;
 $713D LD BC,$FFE0   ;
 $7140 ADD HL,BC     ;
 $7141 EX AF,AF'     ;
 $7142 DEC A         ;
 $7143 JR NZ,$712A   ;
 $7145 RET           ;

; Routine at 7146
;
; Used by the routine at #R$6053.
c$7146 LD HL,$5E86   ;
 $7149 LD A,($5EC0)  ;
 $714C LD B,A        ;
 $714D XOR A         ;
 $714E CP (HL)       ;
 $714F JR Z,$7153    ;
 $7151 DEC (HL)      ;
 $7152 RET           ;
*$7153 LD HL,$5F14   ;
 $7156 LD DE,$000D   ;
*$7159 CP (HL)       ;
 $715A JR NZ,$7160   ;
 $715C CALL $7164    ;
 $715F RET           ;
*$7160 ADD HL,DE     ;
 $7161 DJNZ $7159    ;
 $7163 RET           ;

; Routine at 7164
;
; Used by the routine at #R$7146.
c$7164 PUSH HL       ;
 $7165 LD HL,$5EA4   ;
*$7168 CALL $6DAD    ;
 $716B AND $07       ;
 $716D CP $06        ;
 $716F JR NC,$7168   ;
 $7171 BIT 2,A       ;
 $7173 JR Z,$717A    ;
 $7175 DEC (HL)      ;
 $7176 JR NZ,$7168   ;
 $7178 LD (HL),$06   ;
*$717A LD DE,$58C0   ;
 $717D LD HL,$5940   ;
 $7180 BIT 0,A       ;
 $7182 JR Z,$718A    ;
 $7184 LD DE,$59DE   ;
 $7187 LD HL,$5A5E   ;
*$718A ADD A,A       ;
 $718B LD C,A        ;
 $718C CALL $6DAD    ;
 $718F AND $01       ;
 $7191 JR NZ,$7194   ;
 $7193 EX DE,HL      ;
*$7194 EX AF,AF'     ;
 $7195 LD DE,$FFE0   ;
 $7198 XOR A         ;
 $7199 ADD A,(HL)    ;
 $719A INC HL        ;
 $719B ADD A,(HL)    ;
 $719C ADD HL,DE     ;
 $719D ADD A,(HL)    ;
 $719E DEC HL        ;
 $719F ADD A,(HL)    ;
 $71A0 AND A         ;
 $71A1 JR Z,$71A6    ;
 $71A3 POP HL        ;
 $71A4 EX AF,AF'     ;
 $71A5 RET           ;
*$71A6 LD B,A        ;
 $71A7 EX AF,AF'     ;
 $71A8 LD HL,$6676   ;
 $71AB ADD HL,BC     ;
 $71AC LD E,(HL)     ;
 $71AD INC HL        ;
 $71AE LD D,(HL)     ;
 $71AF EX DE,HL      ;
 $71B0 POP DE        ;
 $71B1 PUSH DE       ;
 $71B2 LD BC,$000D   ;
 $71B5 LDIR          ;
 $71B7 LD HL,$5E86   ;
 $71BA LD (HL),$02   ;
 $71BC POP HL        ;
 $71BD PUSH HL       ;
 $71BE AND A         ;
 $71BF JR NZ,$71CB   ;
 $71C1 LD C,$04      ;
 $71C3 ADD HL,BC     ;
 $71C4 SET 7,(HL)    ;
 $71C6 INC HL        ;
 $71C7 LD A,(HL)     ;
 $71C8 SUB $08       ;
 $71CA LD (HL),A     ;
*$71CB POP BC        ;
 $71CC LD A,(BC)     ;
 $71CD CP $03        ;
 $71CF RET NZ        ;
 $71D0 CALL $6DAD    ;
 $71D3 LD HL,$5E64   ;
 $71D6 LD DE,$5E6A   ;
 $71D9 AND $01       ;
 $71DB JR NZ,$71DE   ;
 $71DD EX DE,HL      ;
*$71DE LD HL,$0008   ;
 $71E1 ADD HL,BC     ;
 $71E2 LD (HL),E     ;
 $71E3 INC HL        ;
 $71E4 LD (HL),D     ;
 $71E5 RET           ;

; Routine at 71E6
;
; Used by the routine at #R$6053.
c$71E6 LD DE,$5F07   ;
 $71E9 LD A,(DE)     ;
 $71EA AND A         ;
 $71EB JR Z,$71F2    ;
 $71ED LD A,$01      ;
 $71EF INC DE        ;
 $71F0 LD (DE),A     ;
 $71F1 RET           ;
*$71F2 CALL $6DAD    ;
 $71F5 AND $1F       ;
 $71F7 CP $1F        ;
 $71F9 RET NZ        ;
 $71FA LD HL,$66E3   ;
 $71FD CALL $6DAD    ;
 $7200 AND $01       ;
 $7202 JR Z,$7207    ;
 $7204 LD HL,$66D0   ;
*$7207 LD BC,$000D   ;
 $720A LDIR          ;
 $720C CALL $6DAD    ;
 $720F AND $01       ;
 $7211 JR NZ,$721D   ;
 $7213 LD HL,$5F0B   ;
 $7216 SET 7,(HL)    ;
 $7218 INC HL        ;
 $7219 LD A,(HL)     ;
 $721A SUB $08       ;
 $721C LD (HL),A     ;
*$721D LD HL,($5F0B) ;
 $7220 LD A,H        ;
 $7221 AND $18       ;
 $7223 SRA A         ;
 $7225 SRA A         ;
 $7227 SRA A         ;
 $7229 ADD A,$58     ;
 $722B LD H,A        ;
 $722C XOR A         ;
 $722D LD B,$02      ;
 $722F LD DE,$FFE0   ;
*$7232 PUSH HL       ;
 $7233 ADD A,(HL)    ;
 $7234 INC HL        ;
 $7235 ADD A,(HL)    ;
 $7236 POP HL        ;
 $7237 ADD HL,DE     ;
 $7238 DJNZ $7232    ;
 $723A AND A         ;
 $723B RET Z         ;
 $723C XOR A         ;
 $723D LD ($5F07),A  ;
 $7240 RET           ;

; Routine at 7241
;
; Used by the routine at #R$6053.
c$7241 EXX           ;
 $7242 LD HL,$5F07   ;
 $7245 LD DE,$000D   ;
 $7248 LD A,($5EC0)  ;
 $724B INC A         ;
 $724C LD B,A        ;
*$724D PUSH HL       ;
 $724E EXX           ;
 $724F POP HL        ;
 $7250 LD A,(HL)     ;
 $7251 AND A         ;
 $7252 JP Z,$7381    ;
 $7255 INC HL        ;
 $7256 DEC (HL)      ;
 $7257 JP NZ,$7381   ;
 $725A INC HL        ;
 $725B LD A,(HL)     ;
 $725C LD ($5E83),A  ;
 $725F INC HL        ;
 $7260 LD A,(HL)     ;
 $7261 LD ($5EA3),A  ;
 $7264 INC HL        ;
 $7265 LD ($5E84),HL ;
 $7268 LD E,(HL)     ;
 $7269 INC HL        ;
 $726A LD D,(HL)     ;
 $726B LD A,E        ;
 $726C LD ($5EA2),A  ;
 $726F LD BC,$0005   ;
 $7272 ADD HL,BC     ;
 $7273 LD A,(HL)     ;
 $7274 LD ($5E75),A  ;
 $7277 INC HL        ;
 $7278 LD A,(HL)     ;
 $7279 LD ($5E74),A  ;
 $727C INC HL        ;
 $727D LD ($5EA0),HL ;
 $7280 EX DE,HL      ;
 $7281 LD E,$07      ;
 $7283 INC HL        ;
 $7284 LD A,($5E83)  ;
 $7287 LD C,A        ;
 $7288 AND A         ;
 $7289 JR Z,$728F    ;
 $728B DEC HL        ;
 $728C DEC HL        ;
 $728D LD E,$F9      ;
*$728F BIT 0,H       ;
 $7291 JR Z,$7296    ;
 $7293 LD A,H        ;
 $7294 ADD A,E       ;
 $7295 LD H,A        ;
*$7296 LD ($5E81),HL ;
 $7299 LD A,L        ;
 $729A AND $1F       ;
 $729C LD A,($5EA3)  ;
 $729F JR NZ,$72A7   ;
 $72A1 INC A         ;
 $72A2 AND $01       ;
 $72A4 LD ($5EA3),A  ;
*$72A7 LD B,A        ;
 $72A8 LD A,C        ;
 $72A9 AND A         ;
 $72AA JR NZ,$72B7   ;
 $72AC LD A,L        ;
 $72AD AND $1F       ;
 $72AF JR NZ,$72CD   ;
 $72B1 LD A,B        ;
 $72B2 AND A         ;
 $72B3 JR Z,$72C7    ;
 $72B5 JR $72CD      ;
*$72B7 LD A,($5E74)  ;
 $72BA LD E,A        ;
 $72BB LD D,$00      ;
 $72BD ADD HL,DE     ;
 $72BE LD A,L        ;
 $72BF AND $1F       ;
 $72C1 JR NZ,$72CD   ;
 $72C3 LD A,B        ;
 $72C4 AND A         ;
 $72C5 JR NZ,$72CD   ;
*$72C7 EXX           ;
 $72C8 LD (HL),A     ;
 $72C9 EXX           ;
 $72CA JP $7381      ;
*$72CD EXX           ;
 $72CE LD A,(HL)     ;
 $72CF INC HL        ;
 $72D0 LD (HL),A     ;
 $72D1 DEC HL        ;
 $72D2 EXX           ;
 $72D3 LD A,($5E74)  ;
 $72D6 DEC A         ;
 $72D7 LD E,A        ;
 $72D8 LD D,$00      ;
 $72DA LD HL,($5E81) ;
 $72DD LD A,C        ;
 $72DE AND A         ;
 $72DF LD A,B        ;
 $72E0 JR NZ,$72FC   ;
 $72E2 AND A         ;
 $72E3 LD A,L        ;
 $72E4 JR NZ,$72E8   ;
 $72E6 ADD A,$20     ;
*$72E8 AND $E0       ;
 $72EA ADD HL,DE     ;
 $72EB ADD A,$20     ;
 $72ED JR Z,$72F6    ;
 $72EF LD C,A        ;
 $72F0 LD A,L        ;
 $72F1 CP C          ;
 $72F2 JR NC,$7353   ;
 $72F4 JR $72FF      ;
*$72F6 BIT 7,L       ;
 $72F8 JR Z,$7353    ;
 $72FA JR $72FF      ;
*$72FC AND A         ;
 $72FD JR Z,$7353    ;
*$72FF LD A,H        ;
 $7300 AND $18       ;
 $7302 SRA A         ;
 $7304 SRA A         ;
 $7306 SRA A         ;
 $7308 ADD A,$58     ;
 $730A LD H,A        ;
 $730B LD BC,$FFE0   ;
 $730E XOR A         ;
 $730F LD ($5E9F),A  ;
 $7312 LD A,($5E75)  ;
*$7315 EX AF,AF'     ;
 $7316 LD A,(HL)     ;
 $7317 AND $07       ;
 $7319 JR Z,$7329    ;
 $731B CP $04        ;
 $731D JR NZ,$7326   ;
 $731F LD A,$01      ;
 $7321 LD ($5E8E),A  ;
 $7324 JR $7329      ;
*$7326 LD ($5E9F),A  ;
*$7329 ADD HL,BC     ;
 $732A EX AF,AF'     ;
 $732B DEC A         ;
 $732C JR NZ,$7315   ;
 $732E LD A,($5E9F)  ;
 $7331 AND A         ;
 $7332 LD HL,($5EA0) ;
 $7335 JR Z,$7358    ;
 $7337 XOR A         ;
 $7338 CP (HL)       ;
 $7339 JR NZ,$734B   ;
 $733B LD A,($5EA3)  ;
 $733E AND A         ;
 $733F JR Z,$734B    ;
 $7341 LD A,($5EA2)  ;
 $7344 INC (HL)      ;
 $7345 BIT 7,A       ;
 $7347 JR NZ,$734B   ;
 $7349 LD (HL),$FF   ;
*$734B EXX           ;
 $734C INC HL        ;
 $734D LD (HL),$02   ;
 $734F DEC HL        ;
 $7350 EXX           ;
 $7351 JR $7381      ;
*$7353 LD HL,($5EA0) ;
 $7356 LD (HL),$00   ;
*$7358 LD A,(HL)     ;
 $7359 AND A         ;
 $735A CALL NZ,$7389 ;
 $735D LD A,($5E8E)  ;
 $7360 AND A         ;
 $7361 CALL NZ,$76AD ;
 $7364 CALL $7402    ;
 $7367 LD A,($5E8E)  ;
 $736A AND A         ;
 $736B JR Z,$7381    ;
 $736D EXX           ;
 $736E PUSH HL       ;
 $736F PUSH DE       ;
 $7370 PUSH BC       ;
 $7371 EXX           ;
 $7372 CALL $7706    ;
 $7375 CALL $769C    ;
 $7378 EXX           ;
 $7379 POP BC        ;
 $737A POP DE        ;
 $737B POP HL        ;
 $737C EXX           ;
 $737D XOR A         ;
 $737E LD ($5E8E),A  ;
*$7381 EXX           ;
 $7382 ADD HL,DE     ;
 $7383 DEC B         ;
 $7384 JP NZ,$724D   ;
 $7387 EXX           ;
 $7388 RET           ;

; Routine at 7389
;
; Used by the routine at #R$7241.
c$7389 LD C,A        ;
 $738A LD DE,$0020   ;
 $738D BIT 7,A       ;
 $738F JR Z,$739F    ;
 $7391 LD A,($5E75)  ;
 $7394 LD HL,$0000   ;
 $7397 LD DE,$FFE0   ;
 $739A LD B,A        ;
*$739B ADD HL,DE     ;
 $739C DJNZ $739B    ;
 $739E EX DE,HL      ;
*$739F LD HL,($5E81) ;
 $73A2 LD A,H        ;
 $73A3 AND $18       ;
 $73A5 SRA A         ;
 $73A7 SRA A         ;
 $73A9 SRA A         ;
 $73AB ADD A,$58     ;
 $73AD LD H,A        ;
 $73AE LD ($5E78),HL ;
 $73B1 ADD HL,DE     ;
 $73B2 LD A,($5E74)  ;
 $73B5 LD B,A        ;
 $73B6 XOR A         ;
*$73B7 ADD A,(HL)    ;
 $73B8 INC HL        ;
 $73B9 DJNZ $73B7    ;
 $73BB AND A         ;
 $73BC RET NZ        ;
 $73BD LD HL,($5E78) ;
 $73C0 LD DE,$FFE0   ;
 $73C3 BIT 7,C       ;
 $73C5 JR NZ,$73CF   ;
 $73C7 LD A,($5E75)  ;
 $73CA DEC A         ;
 $73CB LD B,A        ;
*$73CC ADD HL,DE     ;
 $73CD DJNZ $73CC    ;
*$73CF LD A,($5E74)  ;
 $73D2 LD B,A        ;
 $73D3 XOR A         ;
*$73D4 LD (HL),A     ;
 $73D5 INC HL        ;
 $73D6 DJNZ $73D4    ;
 $73D8 BIT 7,C       ;
 $73DA LD BC,$0020   ;
 $73DD LD DE,$4007   ;
 $73E0 JR Z,$73E8    ;
 $73E2 LD BC,$FFE0   ;
 $73E5 LD DE,$C0F9   ;
*$73E8 LD HL,($5E81) ;
 $73EB ADD HL,BC     ;
 $73EC BIT 0,H       ;
 $73EE JR Z,$73F3    ;
 $73F0 LD A,H        ;
 $73F1 ADD A,E       ;
 $73F2 LD H,A        ;
*$73F3 LD A,L        ;
 $73F4 AND $E0       ;
 $73F6 CP D          ;
 $73F7 LD ($5E81),HL ;
 $73FA RET NZ        ;
 $73FB LD DE,($5EA0) ;
 $73FF XOR A         ;
 $7400 LD (DE),A     ;
 $7401 RET           ;

; Routine at 7402
;
; Used by the routines at #R$7241 and #R$783B.
c$7402 LD DE,($5E81) ;
 $7406 LD HL,($5E84) ;
 $7409 DEC HL        ;
 $740A LD A,($5EA3)  ;
 $740D LD (HL),A     ;
 $740E INC HL        ;
 $740F LD (HL),E     ;
 $7410 INC HL        ;
 $7411 LD (HL),D     ;
 $7412 INC HL        ;
 $7413 LD E,(HL)     ;
 $7414 INC HL        ;
 $7415 LD D,(HL)     ;
 $7416 INC HL        ;
 $7417 LD C,(HL)     ;
 $7418 INC HL        ;
 $7419 LD B,(HL)     ;
 $741A LD ($5E7F),BC ;
 $741E LD HL,($5E81) ;
 $7421 CALL $74A2    ;
 $7424 LD A,($5E75)  ;
 $7427 EX AF,AF'     ;
*$7428 PUSH DE       ;
 $7429 PUSH HL       ;
 $742A LD A,($5E76)  ;
 $742D LD C,A        ;
 $742E LD B,$00      ;
 $7430 ADD HL,BC     ;
 $7431 ADD A,A       ;
 $7432 ADD A,A       ;
 $7433 ADD A,A       ;
 $7434 LD C,A        ;
 $7435 EX DE,HL      ;
 $7436 ADD HL,BC     ;
 $7437 EX DE,HL      ;
 $7438 BIT 0,H       ;
 $743A JR Z,$7440    ;
 $743C LD A,$07      ;
 $743E ADD A,H       ;
 $743F LD H,A        ;
*$7440 LD A,($5E77)  ;
 $7443 AND A         ;
 $7444 JR Z,$7457    ;
 $7446 LD C,A        ;
*$7447 PUSH HL       ;
 $7448 LD B,$08      ;
*$744A LD A,(DE)     ;
 $744B LD (HL),A     ;
 $744C INC DE        ;
 $744D INC H         ;
 $744E DJNZ $744A    ;
 $7450 POP HL        ;
 $7451 DEC C         ;
 $7452 JR Z,$7457    ;
 $7454 INC HL        ;
 $7455 JR $7447      ;
*$7457 EX AF,AF'     ;
 $7458 POP HL        ;
 $7459 POP DE        ;
 $745A DEC A         ;
 $745B JR Z,$7477    ;
 $745D EX AF,AF'     ;
 $745E AND A         ;
 $745F LD C,$20      ;
 $7461 SBC HL,BC     ;
 $7463 BIT 0,H       ;
 $7465 JR Z,$746B    ;
 $7467 LD A,H        ;
 $7468 SUB $07       ;
 $746A LD H,A        ;
*$746B LD A,($5E74)  ;
 $746E ADD A,A       ;
 $746F ADD A,A       ;
 $7470 ADD A,A       ;
 $7471 LD C,A        ;
 $7472 EX DE,HL      ;
 $7473 ADD HL,BC     ;
 $7474 EX DE,HL      ;
 $7475 JR $7428      ;
*$7477 LD HL,($5E78) ;
 $747A LD DE,($5E7F) ;
 $747E LD A,($5E75)  ;
*$7481 EX AF,AF'     ;
 $7482 PUSH DE       ;
 $7483 PUSH HL       ;
 $7484 LD A,($5E76)  ;
 $7487 LD C,A        ;
 $7488 LD B,$00      ;
 $748A ADD HL,BC     ;
 $748B EX DE,HL      ;
 $748C ADD HL,BC     ;
 $748D LD A,($5E77)  ;
 $7490 AND A         ;
 $7491 JR Z,$7496    ;
 $7493 LD C,A        ;
 $7494 LDIR          ;
*$7496 POP HL        ;
 $7497 POP DE        ;
 $7498 AND A         ;
 $7499 LD C,$20      ;
 $749B SBC HL,BC     ;
 $749D EX AF,AF'     ;
 $749E DEC A         ;
 $749F JR NZ,$7481   ;
 $74A1 RET           ;

; Routine at 74A2
;
; Used by the routine at #R$7402.
c$74A2 PUSH HL       ;
 $74A3 EX AF,AF'     ;
 $74A4 LD H,$1F      ;
 $74A6 LD A,H        ;
 $74A7 AND L         ;
 $74A8 LD L,A        ;
 $74A9 LD A,H        ;
 $74AA SUB L         ;
 $74AB INC A         ;
 $74AC AND H         ;
 $74AD LD L,A        ;
 $74AE EX AF,AF'     ;
 $74AF AND A         ;
 $74B0 LD A,($5E74)  ;
 $74B3 JR NZ,$74BF   ;
 $74B5 SUB L         ;
 $74B6 LD ($5E77),A  ;
 $74B9 LD A,L        ;
 $74BA LD ($5E76),A  ;
 $74BD JR $74D0      ;
*$74BF CP L          ;
 $74C0 JR C,$74C9    ;
 $74C2 LD A,L        ;
 $74C3 AND A         ;
 $74C4 JR NZ,$74C9   ;
 $74C6 LD A,($5E74)  ;
*$74C9 LD ($5E77),A  ;
 $74CC XOR A         ;
 $74CD LD ($5E76),A  ;
*$74D0 POP HL        ;
 $74D1 PUSH HL       ;
 $74D2 LD A,H        ;
 $74D3 AND $18       ;
 $74D5 SRA A         ;
 $74D7 SRA A         ;
 $74D9 SRA A         ;
 $74DB ADD A,$58     ;
 $74DD LD H,A        ;
 $74DE LD ($5E78),HL ;
 $74E1 POP HL        ;
 $74E2 RET           ;

; Update Horace
;
; Used by the routine at #R$6053.
c$74E3 LD A,($5E8D)  ; { Has Horace hit a vehicle?
 $74E6 AND A         ; }
 $74E7 JR NZ,$752E   ; Jump forward if so
 $74E9 LD ($5E73),A  ;
 $74EC LD A,($5EBC)  ;
 $74EF AND A         ;
 $74F0 CALL Z,$7532  ;
 $74F3 LD A,($5EFD)  ;
 $74F6 AND A         ;
 $74F7 JR NZ,$7501   ;
 $74F9 LD A,($5EB6)  ;
 $74FC AND A         ;
 $74FD RET NZ        ;
 $74FE CALL $7559    ;
*$7501 LD HL,$5EFE   ;
 $7504 DEC (HL)      ;
 $7505 RET NZ        ;
 $7506 LD A,$03      ;
 $7508 LD (HL),A     ;
 $7509 CALL $75B5    ;
 $750C LD A,($5E73)  ;
 $750F AND A         ;
 $7510 JR Z,$7529    ;
 $7512 LD HL,($5F00) ;
 $7515 LD DE,$40BF   ;
 $7518 EX DE,HL      ;
 $7519 XOR A         ;
 $751A SBC HL,DE     ;
 $751C JR NC,$7526   ;
 $751E LD HL,$503F   ;
 $7521 AND A         ;
 $7522 SBC HL,DE     ;
 $7524 JR NC,$7529   ;
*$7526 LD ($5E73),A  ;
*$7529 LD A,($5E8D)  ; { Has Horace hit a vehicle?
 $752C AND A         ; }
 $752D RET Z         ; Return if not
*$752E CALL $781B    ; { Horace was run over. Call the ambulance and pay it.
 $7531 RET           ; }

; Give Horace the skis if he's by the hut
;
; Used by the routine at #R$74E3.
c$7532 LD HL,($5F00) ; Put the current position in #REGhl.
 $7535 LD DE,$50ED   ; { Is it the location of the ski hut?
 $7538 XOR A         ;
 $7539 SBC HL,DE     ; }
 $753B RET NZ        ; Return if it isn't
 $753C LD ($5EFD),A  ;
 $753F DEC A         ;
 $7540 LD ($5EBC),A  ;
 $7543 LD A,$01      ; { Set message ID to 1
 $7545 LD ($5EB5),A  ; SKI HIRE $10 }
 $7548 LD HL,$5EBF   ; { Decrement $10 
 $754B DEC (HL)      ; }
 $754C LD HL,$03E8   ;
 $754F LD ($5EA5),HL ;
 $7552 CALL $76AD    ;
 $7555 CALL $6E25    ;
 $7558 RET           ;

; Routine at 7559
;
; Used by the routine at #R$74E3.
c$7559 LD HL,$5EB8   ;
 $755C LD A,(HL)     ;
 $755D AND A         ;
 $755E JR Z,$7579    ;
 $7560 BIT 0,A       ;
 $7562 JR NZ,$7579   ;
 $7564 INC A         ;
 $7565 LD (HL),A     ;
 $7566 LD HL,$5EC4   ;
 $7569 LD (HL),$5A   ;
 $756B LD HL,$5EBC   ;
 $756E LD (HL),$FF   ;
 $7570 CP $05        ;
 $7572 JR NZ,$7579   ;
 $7574 XOR A         ;
 $7575 LD ($5E9C),A  ;
 $7578 RET           ;
*$7579 LD HL,$6662   ;
 $757C LD A,($5EBC)  ;
 $757F AND A         ;
 $7580 JR Z,$7585    ;
 $7582 LD HL,$666C   ;
*$7585 LD DE,$5EFD   ;
 $7588 LD BC,$000A   ;
 $758B LDIR          ;
 $758D LD HL,($5F00) ;
 $7590 LD ($5E89),HL ;
 $7593 LD ($5E8B),HL ;
 $7596 LD HL,$5EC7   ;
 $7599 LD DE,$5EC8   ;
 $759C LD BC,$002F   ;
 $759F LD (HL),$00   ;
 $75A1 LDIR          ;
 $75A3 INC HL        ;
 $75A4 INC DE        ;
 $75A5 LD C,$05      ;
 $75A7 LD (HL),$38   ;
 $75A9 LDIR          ;
 $75AB AND A         ;
 $75AC RET NZ        ;
 $75AD LD C,$04      ;
 $75AF LD DE,$5EEA   ;
 $75B2 LDDR          ;
 $75B4 RET           ;

; Routine at 75B5
;
; Used by the routine at #R$74E3.
c$75B5 CALL $6E4A    ;
 $75B8 LD HL,$5EFF   ;
 $75BB LD A,B        ;
 $75BC CP $04        ;
 $75BE JR Z,$75C7    ;
 $75C0 CP (HL)       ;
 $75C1 JR Z,$75C7    ;
 $75C3 LD (HL),A     ;
 $75C4 CALL $77ED    ;
*$75C7 LD A,($5EFF)  ;
 $75CA LD BC,$0000   ;
 $75CD LD L,C        ;
 $75CE LD DE,$F907   ;
 $75D1 AND A         ;
 $75D2 JR NZ,$75DA   ;
 $75D4 LD BC,$FFE0   ;
 $75D7 INC L         ;
 $75D8 JR $75ED      ;
*$75DA DEC A         ;
 $75DB JR NZ,$75E1   ;
 $75DD INC BC        ;
 $75DE LD D,E        ;
 $75DF JR $75ED      ;
*$75E1 DEC A         ;
 $75E2 JR NZ,$75EB   ;
 $75E4 LD BC,$0020   ;
 $75E7 INC L         ;
 $75E8 LD D,E        ;
 $75E9 JR $75ED      ;
*$75EB DEC BC        ;
 $75EC DEC A         ;
*$75ED EX AF,AF'     ;
 $75EE LD A,L        ;
 $75EF EX AF,AF'     ;
 $75F0 LD HL,($5E89) ;
 $75F3 ADD HL,BC     ;
 $75F4 BIT 0,H       ;
 $75F6 JR Z,$75FB    ;
 $75F8 LD A,H        ;
 $75F9 ADD A,D       ;
 $75FA LD H,A        ;
*$75FB LD ($5E90),HL ;
 $75FE EX DE,HL      ;
 $75FF LD A,$40      ;
 $7601 CP D          ;
 $7602 LD A,E        ;
 $7603 JR NZ,$7609   ;
 $7605 CP $40        ;
 $7607 JR C,$767B    ;
*$7609 LD HL,$50FE   ;
 $760C LD A,($5EBC)  ;
 $760F LD B,A        ;
 $7610 ADD A,L       ;
 $7611 LD L,A        ;
 $7612 AND A         ;
 $7613 SBC HL,DE     ;
 $7615 JR C,$767B    ;
 $7617 LD A,E        ;
 $7618 AND $1F       ;
 $761A CP $1F        ;
 $761C JR Z,$767B    ;
 $761E LD C,A        ;
 $761F LD A,$1F      ;
 $7621 ADD A,B       ;
 $7622 CP C          ;
 $7623 JR Z,$767B    ;
 $7625 LD ($5E8B),DE ;
 $7629 EX AF,AF'     ;
 $762A LD ($5E73),A  ;
 $762D EX AF,AF'     ;
 $762E XOR A         ;
 $762F LD B,A        ;
 $7630 LD C,$04      ;
 $7632 LD HL,$405E   ;
 $7635 LD A,($5EBC)  ;
 $7638 ADD A,L       ;
 $7639 LD L,A        ;
 $763A AND A         ;
 $763B SBC HL,DE     ;
 $763D JR C,$7643    ;
 $763F LD C,$3C      ;
 $7641 JR $7673      ;
*$7643 LD HL,$407E   ;
 $7646 LD A,($5EBC)  ;
 $7649 ADD A,L       ;
 $764A LD L,A        ;
 $764B AND A         ;
 $764C SBC HL,DE     ;
 $764E JR C,$7653    ;
 $7650 INC B         ;
 $7651 JR $7673      ;
*$7653 LD HL,$507E   ;
 $7656 LD A,($5EBC)  ;
 $7659 ADD A,L       ;
 $765A LD L,A        ;
 $765B AND A         ;
 $765C SBC HL,DE     ;
 $765E JR NC,$7673   ;
 $7660 LD HL,$509E   ;
 $7663 LD A,($5EBC)  ;
 $7666 ADD A,L       ;
 $7667 LD L,A        ;
 $7668 AND A         ;
 $7669 SBC HL,DE     ;
 $766B JR C,$7671    ;
 $766D LD B,$02      ;
 $766F JR $7673      ;
*$7671 LD C,$3C      ;
*$7673 LD A,B        ;
 $7674 LD ($5E94),A  ;
 $7677 LD A,C        ;
 $7678 LD ($5F04),A  ;
*$767B LD HL,($5E89) ;
 $767E AND A         ;
 $767F SBC HL,DE     ;
 $7681 JR Z,$769C    ;
 $7683 CALL $76AD    ;
 $7686 CALL $7706    ;
 $7689 LD HL,($5E8B) ;
 $768C LD ($5E89),HL ;
 $768F LD ($5F00),HL ;
 $7692 LD A,($5E8D)  ;
 $7695 AND A         ;
 $7696 JR Z,$769C    ;
 $7698 CALL $76AD    ;
 $769B RET           ;

; Draw a sprite
;
; Used by the routines at #R$7241 and #R$75B5.
c$769C LD HL,($5F00) ; Put the screen address in #REGhl
 $769F LD DE,($5F02) ; Put the sprite address in #REGde
 $76A3 LD A,($5F04)  ; { Set the current attribute
 $76A6 LD ($5E7A),A  ; }
 $76A9 CALL $6C20    ; { Draw it
 $76AC RET           ; }

; Routine at 76AD
;
; Used by the routines at #R$7241, #R$7532, #R$75B5 and #R$781B.
c$76AD LD DE,$5EC7   ;
 $76B0 LD HL,($5E89) ;
 $76B3 PUSH HL       ;
 $76B4 LD A,($5F05)  ;
 $76B7 EX AF,AF'     ;
*$76B8 PUSH HL       ;
 $76B9 LD A,($5F06)  ;
 $76BC LD C,A        ;
*$76BD PUSH HL       ;
 $76BE LD B,$08      ;
*$76C0 LD A,(DE)     ;
 $76C1 LD (HL),A     ;
 $76C2 INC DE        ;
 $76C3 INC H         ;
 $76C4 DJNZ $76C0    ;
 $76C6 POP HL        ;
 $76C7 INC HL        ;
 $76C8 DEC C         ;
 $76C9 JR NZ,$76BD   ;
 $76CB POP HL        ;
 $76CC EX AF,AF'     ;
 $76CD DEC A         ;
 $76CE JR Z,$76E0    ;
 $76D0 EX AF,AF'     ;
 $76D1 AND A         ;
 $76D2 LD C,$20      ;
 $76D4 SBC HL,BC     ;
 $76D6 BIT 0,H       ;
 $76D8 JR Z,$76B8    ;
 $76DA LD A,H        ;
 $76DB SUB $07       ;
 $76DD LD H,A        ;
 $76DE JR $76B8      ;
*$76E0 POP HL        ;
 $76E1 LD A,H        ;
 $76E2 AND $18       ;
 $76E4 SRA A         ;
 $76E6 SRA A         ;
 $76E8 SRA A         ;
 $76EA ADD A,$58     ;
 $76EC LD H,A        ;
 $76ED LD A,($5F05)  ;
 $76F0 EX AF,AF'     ;
*$76F1 PUSH HL       ;
 $76F2 EX DE,HL      ;
 $76F3 LD A,($5F06)  ;
 $76F6 LD C,A        ;
 $76F7 LDIR          ;
 $76F9 EX DE,HL      ;
 $76FA POP HL        ;
 $76FB EX AF,AF'     ;
 $76FC DEC A         ;
 $76FD RET Z         ;
 $76FE EX AF,AF'     ;
 $76FF AND A         ;
 $7700 LD C,$20      ;
 $7702 SBC HL,BC     ;
 $7704 JR $76F1      ;

; Routine at 7706
;
; Used by the routines at #R$7241 and #R$75B5.
c$7706 LD DE,$5EC7   ;
 $7709 LD HL,($5E8B) ;
 $770C PUSH HL       ;
 $770D LD A,($5F05)  ;
 $7710 EX AF,AF'     ;
*$7711 PUSH HL       ;
 $7712 LD A,($5F06)  ;
 $7715 LD C,A        ;
*$7716 PUSH HL       ;
 $7717 LD B,$08      ;
*$7719 LD A,(HL)     ;
 $771A LD (DE),A     ;
 $771B INC DE        ;
 $771C INC H         ;
 $771D DJNZ $7719    ;
 $771F POP HL        ;
 $7720 INC HL        ;
 $7721 DEC C         ;
 $7722 JR NZ,$7716   ;
 $7724 POP HL        ;
 $7725 EX AF,AF'     ;
 $7726 DEC A         ;
 $7727 JR Z,$7739    ;
 $7729 EX AF,AF'     ;
 $772A AND A         ;
 $772B LD C,$20      ;
 $772D SBC HL,BC     ;
 $772F BIT 0,H       ;
 $7731 JR Z,$7711    ;
 $7733 LD A,H        ;
 $7734 SUB $07       ;
 $7736 LD H,A        ;
 $7737 JR $7711      ;
*$7739 POP HL        ;
 $773A LD A,H        ;
 $773B AND $18       ;
 $773D SRA A         ;
 $773F SRA A         ;
 $7741 SRA A         ;
 $7743 ADD A,$58     ;
 $7745 LD H,A        ;
 $7746 EXX           ;
 $7747 LD HL,($5E8B) ;
 $774A LD DE,($5F02) ;
 $774E EXX           ;
 $774F LD A,($5F05)  ;
 $7752 EX AF,AF'     ;
*$7753 LD A,($5F06)  ;
 $7756 LD B,A        ;
 $7757 PUSH HL       ;
*$7758 LD A,(HL)     ;
 $7759 LD (DE),A     ;
 $775A AND $07       ;
 $775C JR Z,$7782    ;
 $775E CP $04        ;
 $7760 JR Z,$7782    ;
 $7762 DEC A         ;
 $7763 JR Z,$7782    ;
 $7765 EXX           ;
 $7766 PUSH HL       ;
 $7767 PUSH DE       ;
 $7768 LD B,$08      ; Check 8 rows
*$776A LD A,(DE)     ; Get the next graphic from the buffer
 $776B AND (HL)      ; Is there anything at this screen address?
 $776C JR Z,$7773    ; Jump forward if not
 $776E LD A,$01      ; { Signal that Horace was run over
 $7770 LD ($5E8D),A  ; }
*$7773 INC DE        ; Point #REGde to the next buffer address
 $7774 INC H         ; Move forward a row
 $7775 DJNZ $776A    ; Loop until all rows checked
 $7777 POP DE        ;
 $7778 POP HL        ;
 $7779 EXX           ;
 $777A LD A,($5E8D)  ;
 $777D AND A         ;
 $777E JR NZ,$7782   ;
 $7780 XOR A         ;
 $7781 LD (DE),A     ;
*$7782 EXX           ;
 $7783 INC HL        ;
 $7784 EX DE,HL      ;
 $7785 LD BC,$0008   ;
 $7788 ADD HL,BC     ;
 $7789 EX DE,HL      ;
 $778A EXX           ;
 $778B INC HL        ;
 $778C INC DE        ;
 $778D DJNZ $7758    ;
 $778F POP HL        ;
 $7790 EX AF,AF'     ;
 $7791 DEC A         ;
 $7792 RET Z         ;
 $7793 EX AF,AF'     ;
 $7794 AND A         ;
 $7795 LD C,$20      ;
 $7797 SBC HL,BC     ;
 $7799 EXX           ;
 $779A LD HL,($5E8B) ;
 $779D LD BC,$FFE0   ;
 $77A0 ADD HL,BC     ;
 $77A1 BIT 0,H       ;
 $77A3 JR Z,$77A9    ;
 $77A5 LD A,H        ;
 $77A6 SUB $07       ;
 $77A8 LD H,A        ;
*$77A9 EXX           ;
 $77AA JR $7753      ;

; Routine at 77AC
;
; Used by the routine at #R$6053.
c$77AC LD A,($5EFD)  ;
 $77AF AND A         ;
 $77B0 RET Z         ;
 $77B1 LD HL,$5E96   ;
 $77B4 DEC (HL)      ;
 $77B5 JR NZ,$77BC   ;
 $77B7 LD (HL),$08   ;
 $77B9 CALL $77ED    ;
*$77BC LD HL,($5EA5) ;
 $77BF DEC HL        ;
 $77C0 LD A,L        ;
 $77C1 OR H          ;
 $77C2 JR NZ,$77CA   ;
 $77C4 CALL $77E2    ;
 $77C7 LD HL,$03E8   ;
*$77CA LD ($5EA5),HL ;
 $77CD LD A,($5EBC)  ;
 $77D0 AND A         ;
 $77D1 RET Z         ;
 $77D2 LD HL,($5F00) ;
 $77D5 LD DE,$4060   ;
 $77D8 SBC HL,DE     ;
 $77DA RET NC        ;
 $77DB XOR A         ;
 $77DC LD ($5E9C),A  ;
 $77DF LD ($5EFD),A  ;
*$77E2 LD A,($5EC0)  ;
 $77E5 CP $10        ;
 $77E7 RET Z         ;
 $77E8 INC A         ;
 $77E9 LD ($5EC0),A  ;
 $77EC RET           ;

; Routine at 77ED
;
; Used by the routines at #R$75B5 and #R$77AC.
c$77ED LD A,($5E95)  ; { Flip flag ??? between 0 and 1
 $77F0 INC A         ;
 $77F1 AND $01       ;
 $77F3 LD ($5E95),A  ; }
 $77F6 LD HL,$60F8   ; Point #REGhl at the first sprite table
 $77F9 LD DE,$61C8   ; Point #REGde at the second sprite table
 $77FC JR Z,$7804    ; Move forward if the flag is zero
 $77FE LD HL,$60F0   ; Point #REGhl at the first sprite table
 $7801 LD DE,$6100   ; Point #REGde at the second sprite table
*$7804 LD A,($5EBC)  ;
 $7807 AND A         ;
 $7808 JR Z,$780B    ;
 $780A EX DE,HL      ;
*$780B LD A,($5EFF)  ; Put the current frame ID in #REGa
 $780E ADD A,A       ; { Double it to get a word offset and store in #REGde
 $780F LD D,$00      ;
 $7811 LD E,A        ; }
 $7812 ADD HL,DE     ; Add the base address of the sprite table
 $7813 LD E,(HL)     ; { Get the sprite address to draw and store it in #R$5F02
 $7814 INC HL        ;
 $7815 LD D,(HL)     ;
 $7816 LD ($5F02),DE ; }
 $781A RET           ; Return

; Horace has been run over
;
; Used by the routine at #R$74E3.
c$781B XOR A         ; Set #REGa to 0 to reset some flags
 $781C LD ($5E8D),A  ; Reset the "run over" flag
 $781F LD ($5EFD),A  ;
 $7822 LD A,$02      ; { Set the next string to 2
 $7824 LD ($5EB5),A  ; AMBULANCE FEE $10 } 
 $7827 LD HL,$5EBF   ; { Decrement $10
 $782A DEC (HL)      ; }
 $782B CALL $7F1F    ; Print the message
 $782E CALL $6C8B    ;
 $7831 CALL $783B    ;
 $7834 CALL $7122    ;
 $7837 CALL $76AD    ;
 $783A RET           ;

; Routine at 783B
;
; Used by the routine at #R$781B.
c$783B LD HL,$5AA0   ;
 $783E LD DE,$5AA1   ;
 $7841 LD (HL),$3F   ;
 $7843 LD BC,$005F   ;
 $7846 LDIR          ;
 $7848 LD HL,$66E3   ;
 $784B LD DE,$5FE7   ;
 $784E LD BC,$000D   ;
 $7851 LDIR          ;
 $7853 LD HL,$50DB   ;
 $7856 LD ($5FEB),HL ;
 $7859 LD HL,$66F6   ;
 $785C LD ($5FEF),HL ;
 $785F LD A,$02      ;
 $7861 LD ($5E75),A  ;
 $7864 LD A,$06      ;
 $7866 LD ($5E74),A  ;
 $7869 LD HL,$5FEB   ;
 $786C LD ($5E84),HL ;
*$786F LD HL,($5FEB) ;
 $7872 INC HL        ;
 $7873 LD ($5E81),HL ;
 $7876 LD A,($5FEA)  ;
 $7879 LD ($5EA3),A  ;
 $787C LD A,L        ;
 $787D AND $1F       ;
 $787F LD A,($5EA3)  ;
 $7882 JR NZ,$788A   ;
 $7884 INC A         ;
 $7885 AND $01       ;
 $7887 LD ($5EA3),A  ;
*$788A LD B,A        ;
 $788B LD A,L        ;
 $788C AND $1F       ;
 $788E JR NZ,$7894   ;
 $7890 LD A,B        ;
 $7891 AND A         ;
 $7892 JR Z,$78A2    ;
*$7894 CALL $7402    ;
 $7897 CALL $6DFC    ;
 $789A LD BC,$0BEC   ;
 $789D CALL $6E1F    ;
 $78A0 JR $786F      ;
*$78A2 LD HL,$5AA0   ;
 $78A5 LD DE,$5AA1   ;
 $78A8 LD (HL),$39   ;
 $78AA LD BC,$005F   ;
 $78AD LDIR          ;
 $78AF INC A         ;
 $78B0 LD ($5EB7),A  ;
 $78B3 RET           ;

; Skiing screen
;
; Used by the routine at #R$601C.
c$78B4 CALL $7904    ; Fill the screen with colours
 $78B7 CALL $792A    ;
 $78BA CALL $794E    ;
*$78BD LD HL,($5E99) ;
 $78C0 LD ($5E97),HL ;
 $78C3 LD HL,$5EA7   ;
 $78C6 DEC (HL)      ;
 $78C7 JR NZ,$78D6   ;
 $78C9 LD (HL),$02   ;
 $78CB CALL $79B0    ;
 $78CE CALL $7ABA    ;
 $78D1 CALL $7C54    ;
 $78D4 JR $78D9      ;
*$78D6 CALL $6E1B    ;
*$78D9 CALL $6E1B    ;
 $78DC LD A,($5EB8)  ;
 $78DF AND A         ;
 $78E0 JR NZ,$78E8   ;
 $78E2 CALL $6CDD    ;
 $78E5 CALL $6D6B    ;
*$78E8 LD A,($5EB9)  ;
 $78EB AND A         ;
 $78EC RET NZ        ;
 $78ED LD A,($5EB4)  ;
 $78F0 AND A         ;
 $78F1 CALL NZ,$7E8D ;
 $78F4 CALL $7F1F    ; Print a message (if any)
 $78F7 LD A,($5E9C)  ;
 $78FA AND A         ;
 $78FB JR NZ,$78BD   ;
 $78FD LD A,($5EB6)  ;
 $7900 AND A         ;
 $7901 JR NZ,$78D6   ;
 $7903 RET           ;

; Routine at 7904
;
; Used by the routine at #R$78B4.
c$7904 LD HL,$5EB8   ;
 $7907 CP (HL)       ;
 $7908 JR Z,$7911    ;
 $790A LD (HL),$05   ;
 $790C LD A,$FF      ;
 $790E LD ($5EC4),A  ;
*$7911 LD HL,$0FA0   ;
 $7914 LD ($5EB0),HL ;
 $7917 LD ($5E99),HL ;
 $791A LD A,$1F      ;
 $791C LD ($5E9B),A  ;
 $791F LD BC,$0701   ;
 $7922 LD A,C        ;
 $7923 LD ($5E9E),A  ;
 $7926 CALL $704B    ;
 $7929 RET           ;

; Initialize skiing screen
;
; Used by the routines at #R$78B4 and #R$7C74.
c$792A CALL $6BC0    ;
 $792D XOR A         ;
 $792E LD ($5EA9),A  ;
 $7931 LD ($5EAB),A  ;
 $7934 INC A         ;
 $7935 LD ($5EA8),A  ;
 $7938 LD ($5EA7),A  ;
 $793B LD A,$16      ;
 $793D LD ($5EAE),A  ;
 $7940 LD HL,$5820   ; { Fill all the lines below the top one
 $7943 LD DE,$5821   ; with white on white.
 $7946 LD (HL),$3F   ;
 $7948 LD BC,$02DF   ;
 $794B LDIR          ; }
 $794D RET           ; Return

; Routine at 794E
;
; Used by the routine at #R$78B4.
c$794E LD HL,$0900   ;
 $7951 LD ($5EAC),HL ;
 $7954 LD A,($5EBE)  ; { Has Horace run out of money? 
 $7957 AND A         ; }
 $7958 JR NZ,$7962   ; Jump forward if not
 $795A LD ($5E9C),A  ;
 $795D LD A,$06      ; { Set message ID to 6
 $795F LD ($5EB5),A  ; SORRY - NO MONEY NO SKI! }
*$7962 XOR A         ;
 $7963 LD ($5EB4),A  ;
 $7966 LD ($5EAF),A  ;
 $7969 LD A,($5EBA)  ;
 $796C CP $03        ;
 $796E LD E,A        ;
 $796F JR NC,$7979   ;
 $7971 LD A,($5EC2)  ;
 $7974 ADD A,$14     ;
 $7976 LD ($5EC2),A  ;
*$7979 LD A,($5EC1)  ;
 $797C CP $04        ;
 $797E JR Z,$7984    ;
 $7980 DEC A         ;
 $7981 LD ($5EC1),A  ;
*$7984 LD A,E        ;
 $7985 CP $04        ;
 $7987 JR C,$798E    ;
 $7989 LD HL,$5EBB   ;
 $798C LD (HL),$01   ;
*$798E INC A         ;
 $798F CP $06        ;
 $7991 JR NC,$7997   ;
 $7993 LD ($5EBA),A  ;
 $7996 RET           ;
*$7997 LD HL,($5EB0) ;
 $799A LD DE,$01F4   ;
 $799D AND A         ;
 $799E SBC HL,DE     ;
 $79A0 EX DE,HL      ;
 $79A1 LD HL,$07D0   ;
 $79A4 AND A         ;
 $79A5 SBC HL,DE     ;
 $79A7 RET NC        ;
 $79A8 EX DE,HL      ;
 $79A9 LD ($5EB0),HL ;
 $79AC LD ($5E99),HL ;
 $79AF RET           ;

; Routine at 79B0
;
; Used by the routine at #R$78B4.
c$79B0 LD A,($5EB4)  ;
 $79B3 AND A         ;
 $79B4 RET NZ        ;
 $79B5 LD HL,$5EA8   ;
 $79B8 XOR A         ;
 $79B9 CP (HL)       ;
 $79BA JR Z,$79BE    ;
 $79BC DEC (HL)      ;
 $79BD RET           ;
*$79BE LD HL,$5F08   ;
 $79C1 LD DE,$0012   ;
 $79C4 LD B,$0B      ;
*$79C6 CP (HL)       ;
 $79C7 JR NZ,$79DB   ;
 $79C9 CALL $79DF    ;
 $79CC LD HL,($5EAC) ;
 $79CF LD DE,$09DC   ;
 $79D2 XOR A         ;
 $79D3 SBC HL,DE     ;
 $79D5 RET C         ;
 $79D6 INC A         ;
 $79D7 LD ($5EB4),A  ;
 $79DA RET           ;
*$79DB ADD HL,DE     ;
 $79DC DJNZ $79C6    ;
 $79DE RET           ;

; Routine at 79DF
;
; Used by the routine at #R$79B0.
c$79DF PUSH HL       ;
 $79E0 LD HL,($5EAC) ;
 $79E3 INC HL        ;
 $79E4 LD ($5EAC),HL ;
 $79E7 LD B,$00      ;
 $79E9 LD A,$28      ;
 $79EB CP (HL)       ;
 $79EC JR NC,$7A07   ;
 $79EE INC B         ;
 $79EF LD A,$A0      ;
 $79F1 CP (HL)       ;
 $79F2 JR NC,$7A07   ;
 $79F4 INC B         ;
 $79F5 LD A,($5EC2)  ;
 $79F8 CP (HL)       ;
 $79F9 JR NC,$7A07   ;
 $79FB LD A,($69BC)  ;
 $79FE LD ($5EA8),A  ;
 $7A01 INC HL        ;
 $7A02 LD ($5EAC),HL ;
 $7A05 POP HL        ;
 $7A06 RET           ;

; Routine at 7A07
;
; Used by the routine at #R$79DF.
c$7A07 LD A,B        ;
 $7A08 ADD A,A       ;
 $7A09 ADD A,A       ;
 $7A0A LD E,A        ;
 $7A0B LD D,$00      ;
 $7A0D LD HL,$6932   ;
 $7A10 ADD HL,DE     ;
 $7A11 LD E,(HL)     ;
 $7A12 INC HL        ;
 $7A13 LD D,(HL)     ;
 $7A14 EX DE,HL      ;
 $7A15 POP DE        ;
 $7A16 PUSH DE       ;
 $7A17 LD BC,$0012   ;
 $7A1A LDIR          ;
 $7A1C LD HL,($5EAC) ;
 $7A1F INC HL        ;
 $7A20 LD ($5EAC),HL ;
 $7A23 LD A,(HL)     ;
 $7A24 AND $1F       ;
 $7A26 CP $17        ;
 $7A28 JR C,$7A2C    ;
 $7A2A LD A,$16      ;
*$7A2C LD C,A        ;
 $7A2D LD B,$00      ;
 $7A2F POP HL        ;
 $7A30 PUSH HL       ;
 $7A31 LD DE,$0007   ;
 $7A34 ADD HL,DE     ;
 $7A35 LD A,($5EAB)  ;
 $7A38 ADD A,(HL)    ;
 $7A39 CP $16        ;
 $7A3B JR C,$7A3F    ;
 $7A3D LD A,$15      ;
*$7A3F LD ($5EAB),A  ;
 $7A42 LD A,(HL)     ;
 $7A43 LD B,A        ;
 $7A44 LD ($5EA8),A  ;
 $7A47 LD HL,$57E0   ;
 $7A4A LD DE,$0020   ;
*$7A4D ADD HL,DE     ;
 $7A4E DJNZ $7A4D    ;
 $7A50 ADD HL,BC     ;
 $7A51 POP DE        ;
 $7A52 LD A,(DE)     ;
 $7A53 INC DE        ;
 $7A54 EX DE,HL      ;
 $7A55 LD (HL),E     ;
 $7A56 INC HL        ;
 $7A57 LD (HL),D     ;
 $7A58 BIT 0,A       ;
 $7A5A RET Z         ;
 $7A5B LD B,A        ;
 $7A5C LD A,($5EBB)  ;
 $7A5F AND A         ;
 $7A60 JR NZ,$7A65   ;
 $7A62 BIT 1,B       ;
 $7A64 RET NZ        ;
*$7A65 BIT 1,B       ;
 $7A67 JR NZ,$7A6E   ;
 $7A69 LD A,$02      ;
 $7A6B LD ($5E73),A  ;
*$7A6E LD A,($5EAB)  ;
 $7A71 LD B,A        ;
 $7A72 XOR A         ;
 $7A73 SUB B         ;
 $7A74 LD B,A        ;
 $7A75 LD A,($5EAE)  ;
 $7A78 SUB C         ;
 $7A79 LD C,A        ;
 $7A7A JR NC,$7A82   ;
 $7A7C NEG           ;
 $7A7E LD C,A        ;
 $7A7F XOR A         ;
 $7A80 SUB B         ;
 $7A81 LD B,A        ;
*$7A82 LD A,($5EAB)  ;
 $7A85 CP C          ;
 $7A86 DEC HL        ;
 $7A87 JR NC,$7AA1   ;
 $7A89 LD A,($5EAE)  ;
 $7A8C ADD A,B       ;
 $7A8D BIT 7,A       ;
 $7A8F JR Z,$7A94    ;
 $7A91 XOR A         ;
 $7A92 JR $7A9A      ;
*$7A94 CP $17        ;
 $7A96 JR C,$7A9A    ;
 $7A98 LD A,$16      ;
*$7A9A LD C,A        ;
 $7A9B LD A,E        ;
 $7A9C AND $E0       ;
 $7A9E ADD A,C       ;
 $7A9F LD (HL),A     ;
 $7AA0 LD E,A        ;
*$7AA1 LD A,(HL)     ;
 $7AA2 AND $1F       ;
 $7AA4 LD ($5EAE),A  ;
 $7AA7 XOR A         ;
 $7AA8 LD ($5EAB),A  ;
 $7AAB LD BC,$0009   ;
 $7AAE ADD HL,BC     ;
 $7AAF EX DE,HL      ;
 $7AB0 LD A,($5EC1)  ;
 $7AB3 LD C,A        ;
 $7AB4 ADD HL,BC     ;
 $7AB5 EX DE,HL      ;
 $7AB6 LD (HL),E     ;
 $7AB7 INC HL        ;
 $7AB8 LD (HL),D     ;
 $7AB9 RET           ;

; Routine at 7ABA
;
; Used by the routine at #R$78B4.
c$7ABA EXX           ;
 $7ABB LD HL,$5F08   ;
 $7ABE LD DE,$0009   ;
 $7AC1 LD B,$16      ;
*$7AC3 PUSH HL       ;
 $7AC4 EXX           ;
 $7AC5 POP HL        ;
 $7AC6 LD A,(HL)     ;
 $7AC7 AND A         ;
 $7AC8 JP Z,$7BAE    ;
 $7ACB INC HL        ;
 $7ACC LD E,(HL)     ;
 $7ACD INC HL        ;
 $7ACE LD D,(HL)     ;
 $7ACF LD BC,$0020   ;
 $7AD2 EX DE,HL      ;
 $7AD3 SBC HL,BC     ;
 $7AD5 BIT 0,H       ;
 $7AD7 JR Z,$7ADD    ;
 $7AD9 LD A,H        ;
 $7ADA SUB $07       ;
 $7ADC LD H,A        ;
*$7ADD LD ($5E81),HL ;
 $7AE0 LD BC,$4020   ;
 $7AE3 SBC HL,BC     ;
 $7AE5 DEC DE        ;
 $7AE6 JR NC,$7AF4   ;
 $7AE8 DEC DE        ;
 $7AE9 XOR A         ;
 $7AEA LD (DE),A     ;
 $7AEB LD HL,$5800   ;
 $7AEE CALL $7C43    ;
 $7AF1 JP $7BAE      ;
*$7AF4 LD HL,($5E81) ;
 $7AF7 EX DE,HL      ;
 $7AF8 LD (HL),E     ;
 $7AF9 INC HL        ;
 $7AFA LD (HL),D     ;
 $7AFB INC HL        ;
 $7AFC LD E,(HL)     ;
 $7AFD INC HL        ;
 $7AFE LD D,(HL)     ;
 $7AFF INC HL        ;
 $7B00 LD C,(HL)     ;
 $7B01 INC HL        ;
 $7B02 LD B,(HL)     ;
 $7B03 INC HL        ;
 $7B04 LD A,(HL)     ;
 $7B05 LD ($5E75),A  ;
 $7B08 INC HL        ;
 $7B09 LD A,(HL)     ;
 $7B0A LD HL,($5E81) ;
 $7B0D LD ($5E74),A  ;
 $7B10 LD ($5E7F),BC ;
 $7B14 LD A,($5E75)  ;
 $7B17 EX AF,AF'     ;
*$7B18 PUSH DE       ;
 $7B19 PUSH HL       ;
 $7B1A EX DE,HL      ;
 $7B1B LD HL,$50FF   ;
 $7B1E AND A         ;
 $7B1F SBC HL,DE     ;
 $7B21 JR C,$7B40    ;
 $7B23 LD HL,$401F   ;
 $7B26 SBC HL,DE     ;
 $7B28 POP HL        ;
 $7B29 POP DE        ;
 $7B2A JR NC,$7B61   ;
 $7B2C PUSH DE       ;
 $7B2D PUSH HL       ;
 $7B2E LD A,($5E74)  ;
 $7B31 LD C,A        ;
*$7B32 PUSH HL       ;
 $7B33 LD B,$08      ;
*$7B35 LD A,(DE)     ;
 $7B36 LD (HL),A     ;
 $7B37 INC DE        ;
 $7B38 INC H         ;
 $7B39 DJNZ $7B35    ;
 $7B3B POP HL        ;
 $7B3C INC HL        ;
 $7B3D DEC C         ;
 $7B3E JR NZ,$7B32   ;
*$7B40 EX AF,AF'     ;
 $7B41 DEC A         ;
 $7B42 POP HL        ;
 $7B43 POP DE        ;
 $7B44 JR Z,$7B61    ;
 $7B46 EX AF,AF'     ;
 $7B47 LD BC,$0020   ;
 $7B4A AND A         ;
 $7B4B SBC HL,BC     ;
 $7B4D BIT 0,H       ;
 $7B4F JR Z,$7B55    ;
 $7B51 LD A,H        ;
 $7B52 SUB $07       ;
 $7B54 LD H,A        ;
*$7B55 EX DE,HL      ;
 $7B56 LD A,($5E74)  ;
 $7B59 ADD A,A       ;
 $7B5A ADD A,A       ;
 $7B5B ADD A,A       ;
 $7B5C LD C,A        ;
 $7B5D ADD HL,BC     ;
 $7B5E EX DE,HL      ;
 $7B5F JR $7B18      ;
*$7B61 LD HL,($5E81) ;
 $7B64 LD A,H        ;
 $7B65 AND $18       ;
 $7B67 SRA A         ;
 $7B69 SRA A         ;
 $7B6B SRA A         ;
 $7B6D ADD A,$58     ;
 $7B6F LD H,A        ;
 $7B70 LD DE,($5E7F) ;
 $7B74 LD A,($5E75)  ;
 $7B77 EX AF,AF'     ;
*$7B78 PUSH DE       ;
 $7B79 PUSH HL       ;
 $7B7A EX DE,HL      ;
 $7B7B LD HL,$5AFF   ;
 $7B7E AND A         ;
 $7B7F SBC HL,DE     ;
 $7B81 JR C,$7B98    ;
 $7B83 LD HL,$581F   ;
 $7B86 SBC HL,DE     ;
 $7B88 POP DE        ;
 $7B89 POP HL        ;
 $7B8A JR NC,$7BAE   ;
 $7B8C PUSH HL       ;
 $7B8D PUSH DE       ;
 $7B8E LD A,($5E74)  ;
 $7B91 LD B,A        ;
*$7B92 LD A,(HL)     ;
 $7B93 LD (DE),A     ;
 $7B94 INC HL        ;
 $7B95 INC DE        ;
 $7B96 DJNZ $7B92    ;
*$7B98 POP HL        ;
 $7B99 POP DE        ;
 $7B9A EX AF,AF'     ;
 $7B9B DEC A         ;
 $7B9C JR Z,$7BAE    ;
 $7B9E EX AF,AF'     ;
 $7B9F LD BC,$0020   ;
 $7BA2 AND A         ;
 $7BA3 SBC HL,BC     ;
 $7BA5 EX DE,HL      ;
 $7BA6 LD A,($5E74)  ;
 $7BA9 LD C,A        ;
 $7BAA ADD HL,BC     ;
 $7BAB EX DE,HL      ;
 $7BAC JR $7B78      ;
*$7BAE CALL $7BB9    ;
 $7BB1 EXX           ;
 $7BB2 ADD HL,DE     ;
 $7BB3 DEC B         ;
 $7BB4 JP NZ,$7AC3   ;
 $7BB7 EXX           ;
 $7BB8 RET           ;

; Routine at 7BB9
;
; Used by the routine at #R$7ABA.
c$7BB9 EXX           ;
 $7BBA LD A,(HL)     ;
 $7BBB AND A         ;
 $7BBC EXX           ;
 $7BBD JR NZ,$7BC3   ;
 $7BBF LD ($5EA9),A  ;
 $7BC2 RET           ;
*$7BC3 CP $01        ;
 $7BC5 RET NZ        ;
 $7BC6 EXX           ;
 $7BC7 PUSH HL       ;
 $7BC8 EXX           ;
 $7BC9 POP HL        ;
 $7BCA INC HL        ;
 $7BCB LD E,(HL)     ;
 $7BCC INC HL        ;
 $7BCD LD D,(HL)     ;
 $7BCE LD HL,$50DF   ;
 $7BD1 AND A         ;
 $7BD2 SBC HL,DE     ;
 $7BD4 RET C         ;
 $7BD5 LD H,D        ;
 $7BD6 LD L,E        ;
 $7BD7 LD A,E        ;
 $7BD8 AND $E0       ;
 $7BDA LD E,A        ;
 $7BDB LD A,($5EA9)  ;
 $7BDE INC A         ;
 $7BDF AND $01       ;
 $7BE1 LD ($5EA9),A  ;
 $7BE4 LD B,A        ;
 $7BE5 JR NZ,$7BED   ;
 $7BE7 LD A,E        ;
 $7BE8 ADD A,$1F     ;
 $7BEA SUB L         ;
 $7BEB JR $7BEF      ;
*$7BED LD A,L        ;
 $7BEE SUB E         ;
*$7BEF LD ($5EAA),A  ;
 $7BF2 PUSH DE       ;
 $7BF3 EX DE,HL      ;
 $7BF4 LD A,B        ;
 $7BF5 LD DE,$0001   ;
 $7BF8 AND A         ;
 $7BF9 JR NZ,$7C02   ;
 $7BFB LD DE,$001F   ;
 $7BFE ADD HL,DE     ;
 $7BFF LD DE,$FFFF   ;
*$7C02 LD A,($5EAA)  ;
 $7C05 AND A         ;
 $7C06 JR Z,$7C17    ;
 $7C08 LD B,A        ;
 $7C09 XOR A         ;
*$7C0A PUSH BC       ;
 $7C0B PUSH HL       ;
 $7C0C LD B,$08      ;
*$7C0E LD (HL),A     ;
 $7C0F INC H         ;
 $7C10 DJNZ $7C0E    ;
 $7C12 POP HL        ;
 $7C13 ADD HL,DE     ;
 $7C14 POP BC        ;
 $7C15 DJNZ $7C0A    ;
*$7C17 POP HL        ;
 $7C18 LD A,H        ;
 $7C19 AND $18       ;
 $7C1B SRA A         ;
 $7C1D SRA A         ;
 $7C1F SRA A         ;
 $7C21 ADD A,$58     ;
 $7C23 LD H,A        ;
 $7C24 PUSH HL       ;
 $7C25 LD A,($5EA9)  ;
 $7C28 LD DE,$0001   ;
 $7C2B AND A         ;
 $7C2C JR NZ,$7C35   ;
 $7C2E LD DE,$001F   ;
 $7C31 ADD HL,DE     ;
 $7C32 LD DE,$FFFF   ;
*$7C35 LD A,($5EAA)  ;
 $7C38 AND A         ;
 $7C39 JR Z,$7C42    ;
 $7C3B LD B,A        ;
 $7C3C LD C,$3E      ;
*$7C3E LD (HL),C     ;
 $7C3F ADD HL,DE     ;
 $7C40 DJNZ $7C3E    ;
*$7C42 POP HL        ;

; Routine at 7C43
;
; Used by the routine at #R$7ABA.
c$7C43 LD BC,$0020   ;
 $7C46 ADD HL,BC     ;
 $7C47 LD B,C        ;
 $7C48 LD D,$3E      ;
 $7C4A LD C,$01      ;
*$7C4C LD A,(HL)     ;
 $7C4D AND D         ;
 $7C4E OR C          ;
 $7C4F LD (HL),A     ;
 $7C50 INC HL        ;
 $7C51 DJNZ $7C4C    ;
 $7C53 RET           ;

; Routine at 7C54
;
; Used by the routine at #R$78B4.
c$7C54 LD HL,$5EFD   ;
 $7C57 CP (HL)       ;
 $7C58 CALL Z,$7CE5  ;
 $7C5B LD HL,($5E89) ;
 $7C5E CALL $7CFA    ;
 $7C61 LD A,($5E8D)  ; Get Horace's state
 $7C64 CP $03        ; Is it 3 (ie: hit a tree)
 $7C66 JR Z,$7C70    ; Jump forward if it is
 $7C68 CALL $7D5F    ;
 $7C6B LD A,($5E8D)  ;
 $7C6E AND A         ;
 $7C6F RET Z         ;
*$7C70 CALL $7C74    ; { Handling hitting a tree
 $7C73 RET           ; }

; Horace hit a tree
;
; Used by the routine at #R$7C54.
;
; A Horace's state
c$7C74 CP $02        ; { This return never happens, #REGa is always set to 3
 $7C76 RET Z         ; }
 $7C77 CP $01        ; This resets the zero flag
 $7C79 LD A,$00      ; { Set the status to 0
 $7C7B LD ($5E8D),A  ; }
 $7C7E JR Z,$7CDE    ;
 $7C80 LD A,($5EBD)  ; 
 $7C83 INC A         ;
 $7C84 CP $04        ; 
 $7C86 LD B,$03      ; Set #REGb to message ID 3 (LUCKY! SKIS STILL OK)
 $7C88 JR C,$7C91    ;
 $7C8A XOR A         ;
 $7C8B LD ($5EBC),A  ;
 $7C8E INC A         ;
 $7C8F LD B,$05      ; Set #REGb to message ID 5 (BAD LUCK! SKIS BROKEN)
*$7C91 LD ($5EBD),A  ;
 $7C94 LD A,B        ; { Set message ID to #REGb
 $7C95 LD ($5EB5),A  ; }
 $7C98 CALL $7F1F    ;
 $7C9B LD BC,$2314   ;
*$7C9E PUSH BC       ;
*$7C9F LD A,$1F      ;
 $7CA1 LD HL,$5E9B   ;
 $7CA4 AND (HL)      ;
 $7CA5 OUT ($FE),A   ;
 $7CA7 CALL $6DAD    ;
 $7CAA OR $40        ;
 $7CAC LD B,A        ;
*$7CAD DJNZ $7CAD    ;
 $7CAF LD A,$07      ;
 $7CB1 OUT ($FE),A   ;
 $7CB3 CALL $6DAD    ;
 $7CB6 OR $40        ;
 $7CB8 LD B,A        ;
*$7CB9 DJNZ $7CB9    ;
 $7CBB DEC C         ;
 $7CBC JR NZ,$7C9F   ;
 $7CBE LD A,($5F04)  ;
 $7CC1 INC A         ;
 $7CC2 AND $07       ;
 $7CC4 OR $38        ;
 $7CC6 LD ($5F04),A  ;
 $7CC9 LD HL,($5F00) ; Set to current position
 $7CCC LD DE,$6974   ;
 $7CCF CALL $6C20    ; Draw the sprite
 $7CD2 POP BC        ;
 $7CD3 DJNZ $7C9E    ;
 $7CD5 LD A,($5EBD)  ;
 $7CD8 CP $01        ;
 $7CDA CALL NZ,$792A ;
 $7CDD RET           ;
*$7CDE LD HL,$69BD   ;
 $7CE1 CALL $6E0D    ;
 $7CE4 RET           ;

; Routine at 7CE5
;
; Used by the routine at #R$7C54.
c$7CE5 LD HL,$6874   ;
 $7CE8 LD DE,$5EFD   ;
 $7CEB LD BC,$000A   ;
 $7CEE LDIR          ;
 $7CF0 LD HL,($5F00) ;
 $7CF3 LD ($5E89),HL ;
 $7CF6 LD ($5E8B),HL ;
 $7CF9 RET           ;

; Routine at 7CFA
;
; Used by the routines at #R$7C54 and #R$7D5F.
c$7CFA LD A,($5E8D)  ;
 $7CFD AND A         ;
 $7CFE RET NZ        ;
 $7CFF LD ($5E90),HL ;
 $7D02 LD A,H        ;
 $7D03 AND $18       ;
 $7D05 SRA A         ;
 $7D07 SRA A         ;
 $7D09 SRA A         ;
 $7D0B ADD A,$58     ;
 $7D0D LD H,A        ;
 $7D0E LD ($5EB2),HL ;
 $7D11 LD BC,$033E   ;
 $7D14 LD E,$00      ;
*$7D16 LD A,(HL)     ;
 $7D17 CP C          ;
 $7D18 JR NZ,$7D1C   ;
 $7D1A LD E,$01      ;
*$7D1C INC HL        ;
 $7D1D DJNZ $7D16    ;
 $7D1F BIT 0,E       ;
 $7D21 JR Z,$7D30    ;
 $7D23 LD HL,$5E8D   ;
 $7D26 LD (HL),E     ;
 $7D27 LD A,($5E73)  ;
 $7D2A SUB $06       ;
 $7D2C LD ($5E73),A  ;
 $7D2F RET           ;
*$7D30 LD HL,($5EB2) ;
 $7D33 LD D,$3C      ;
 $7D35 LD A,$03      ;
 $7D37 EX AF,AF'     ;
*$7D38 LD BC,$0338   ;
 $7D3B PUSH HL       ;
*$7D3C LD A,(HL)     ;
 $7D3D CP C          ;
 $7D3E JR Z,$7D47    ;
 $7D40 CP D          ;
 $7D41 JR NZ,$7D4E   ;
 $7D43 LD A,$03      ;
 $7D45 JR Z,$7D49    ;
*$7D47 LD A,$02      ;
*$7D49 LD ($5E8D),A  ;
 $7D4C POP DE        ;
 $7D4D RET           ;
*$7D4E INC HL        ;
 $7D4F DJNZ $7D3C    ;
 $7D51 POP HL        ;
 $7D52 EX AF,AF'     ;
 $7D53 DEC A         ;
 $7D54 RET Z         ;
 $7D55 EX AF,AF'     ;
 $7D56 LD D,C        ;
 $7D57 AND A         ;
 $7D58 LD C,$20      ;
 $7D5A SBC HL,BC     ;
 $7D5C JR $7D38      ;
 $7D5E RET           ;

; Routine at 7D5F
;
; Used by the routine at #R$7C54.
c$7D5F CALL $7E25    ;
 $7D62 LD A,($5E8D)  ;
 $7D65 CP $02        ;
 $7D67 JR NZ,$7D88   ;
 $7D69 XOR A         ;
 $7D6A LD ($5E8D),A  ;
 $7D6D CALL $6E25    ;
 $7D70 LD A,($5EFF)  ;
 $7D73 CP $02        ;
 $7D75 JR C,$7D84    ;
 $7D77 JR NZ,$7D80   ;
 $7D79 CALL $6DAD    ;
 $7D7C AND $01       ;
 $7D7E JR Z,$7D85    ;
*$7D80 LD A,$04      ;
 $7D82 JR $7D85      ;
*$7D84 XOR A         ;
*$7D85 CALL $7E4E    ;
*$7D88 LD DE,$F907   ;
 $7D8B LD BC,$FFE1   ;
 $7D8E LD A,($5EFF)  ;
 $7D91 AND A         ;
 $7D92 JR Z,$7DB1    ;
 $7D94 DEC A         ;
 $7D95 JR NZ,$7D9D   ;
 $7D97 LD BC,$0001   ;
 $7D9A LD D,E        ;
 $7D9B JR $7DB1      ;
*$7D9D DEC A         ;
 $7D9E JR NZ,$7DA6   ;
 $7DA0 LD BC,$0020   ;
 $7DA3 LD D,E        ;
 $7DA4 JR $7DB1      ;
*$7DA6 DEC A         ;
 $7DA7 JR NZ,$7DAE   ;
 $7DA9 LD BC,$FFFF   ;
 $7DAC JR $7DB1      ;
*$7DAE LD BC,$FFDF   ;
*$7DB1 LD HL,($5E89) ;
 $7DB4 ADD HL,BC     ;
 $7DB5 BIT 0,H       ;
 $7DB7 JR Z,$7DBC    ;
 $7DB9 LD A,H        ;
 $7DBA ADD A,D       ;
 $7DBB LD H,A        ;
*$7DBC LD ($5E90),HL ;
 $7DBF EX DE,HL      ;
 $7DC0 LD A,E        ;
 $7DC1 AND $1E       ;
 $7DC3 CP $1E        ;
 $7DC5 JR Z,$7DDD    ;
 $7DC7 LD HL,$405F   ;
 $7DCA AND A         ;
 $7DCB SBC HL,DE     ;
 $7DCD JR NC,$7DDD   ;
 $7DCF LD HL,$48BF   ;
 $7DD2 AND A         ;
 $7DD3 SBC HL,DE     ;
 $7DD5 JR C,$7DDD    ;
 $7DD7 LD ($5E8B),DE ;
 $7DDB JR $7DF3      ;
*$7DDD LD A,($5EFF)  ;
 $7DE0 CP $02        ;
 $7DE2 JR C,$7DF0    ;
 $7DE4 JR NZ,$7DED   ;
 $7DE6 LD A,$01      ;
 $7DE8 LD ($5EA7),A  ;
 $7DEB JR $7DF3      ;
*$7DED DEC A         ;
 $7DEE JR $7D85      ;
*$7DF0 INC A         ;
 $7DF1 JR $7D85      ;
*$7DF3 LD HL,($5E89) ;
 $7DF6 LD DE,($5E8B) ;
 $7DFA AND A         ;
 $7DFB SBC HL,DE     ;
 $7DFD JR Z,$7E14    ;
 $7DFF EX DE,HL      ;
 $7E00 CALL $7CFA    ;
 $7E03 LD A,$3F      ;
 $7E05 LD ($5E7A),A  ;
 $7E08 CALL $7E64    ;
 $7E0B LD HL,($5E8B) ;
 $7E0E LD ($5E89),HL ;
 $7E11 LD ($5F00),HL ;
*$7E14 LD HL,($5F00) ;
 $7E17 LD DE,($5F02) ;
 $7E1B LD A,($5F04)  ;
 $7E1E LD ($5E7A),A  ;
 $7E21 CALL $6C20    ; Draw the sprite
 $7E24 RET           ;

; Routine at 7E25
;
; Used by the routine at #R$7D5F.
c$7E25 CALL $6E4A    ;
 $7E28 LD HL,$5EFF   ;
 $7E2B LD A,(HL)     ;
 $7E2C BIT 0,B       ;
 $7E2E JR Z,$7E37    ;
 $7E30 DEC A         ;
 $7E31 BIT 1,B       ;
 $7E33 JR Z,$7E37    ;
 $7E35 INC A         ;
 $7E36 INC A         ;
*$7E37 CP (HL)       ;
 $7E38 JR NZ,$7E44   ;
 $7E3A AND $03       ;
 $7E3C RET NZ        ;
 $7E3D LD A,(HL)     ;
 $7E3E AND A         ;
 $7E3F JR NZ,$7E43   ;
 $7E41 INC A         ;
 $7E42 INC A         ;
*$7E43 DEC A         ;
*$7E44 CP $05        ;
 $7E46 JR C,$7E49    ;
 $7E48 DEC A         ;
*$7E49 BIT 7,A       ;
 $7E4B JR Z,$7E4E    ;
 $7E4D XOR A         ;
; This entry point is used by the routine at #R$7D5F.
*$7E4E LD ($5EFF),A  ;
 $7E51 LD A,($5EFF)  ;
 $7E54 ADD A,A       ;
 $7E55 LD E,A        ;
 $7E56 LD D,$00      ;
 $7E58 LD HL,$6702   ;
 $7E5B ADD HL,DE     ;
 $7E5C LD E,(HL)     ;
 $7E5D INC HL        ;
 $7E5E LD D,(HL)     ;
 $7E5F LD ($5F02),DE ;
 $7E63 RET           ;

; Routine at 7E64
;
; Used by the routine at #R$7D5F.
c$7E64 LD HL,($5E89) ;
 $7E67 LD A,H        ;
 $7E68 AND $18       ;
 $7E6A SRA A         ;
 $7E6C SRA A         ;
 $7E6E SRA A         ;
 $7E70 ADD A,$58     ;
 $7E72 LD H,A        ;
 $7E73 LD A,($5E7A)  ;
 $7E76 LD E,A        ;
 $7E77 LD C,$20      ;
 $7E79 LD A,$03      ;
*$7E7B EX AF,AF'     ;
 $7E7C PUSH HL       ;
 $7E7D LD B,$03      ;
*$7E7F LD (HL),E     ;
 $7E80 INC HL        ;
 $7E81 DJNZ $7E7F    ;
 $7E83 POP HL        ;
 $7E84 AND A         ;
 $7E85 SBC HL,BC     ;
 $7E87 EX AF,AF'     ;
 $7E88 DEC A         ;
 $7E89 JR NZ,$7E7B   ;
 $7E8B EX AF,AF'     ;
 $7E8C RET           ;

; Routine at 7E8D
;
; Used by the routine at #R$78B4.
c$7E8D LD HL,$5F08   ;
 $7E90 LD DE,$0009   ;
 $7E93 LD B,$16      ;
 $7E95 XOR A         ;
*$7E96 OR (HL)       ;
 $7E97 ADD HL,DE     ;
 $7E98 DJNZ $7E96    ;
 $7E9A AND A         ;
 $7E9B RET NZ        ;
 $7E9C LD DE,$0011   ;
 $7E9F LD A,($5EB4)  ;
 $7EA2 CP $02        ;
 $7EA4 JR NC,$7EB6   ;
 $7EA6 INC A         ;
 $7EA7 LD ($5EB4),A  ;
 $7EAA LD B,$06      ;
 $7EAC LD A,$17      ;
 $7EAE LD HL,$69C8   ;
*$7EB1 LD (HL),A     ;
 $7EB2 INC A         ;
 $7EB3 ADD HL,DE     ;
 $7EB4 DJNZ $7EB1    ;
*$7EB6 LD HL,$69C8   ;
 $7EB9 LD B,$06      ;
*$7EBB PUSH HL       ;
 $7EBC PUSH DE       ;
 $7EBD PUSH BC       ;
 $7EBE LD A,(HL)     ;
 $7EBF AND A         ;
 $7EC0 JR Z,$7ED5    ;
 $7EC2 DEC A         ;
 $7EC3 LD (HL),A     ;
 $7EC4 JR Z,$7ED5    ;
 $7EC6 CP $17        ;
 $7EC8 JR NC,$7ED5   ;
 $7ECA LD DE,$FFFB   ;
 $7ECD ADD HL,DE     ;
 $7ECE EX DE,HL      ;
 $7ECF LD BC,$0011   ;
 $7ED2 CALL $203C    ; Print the string
*$7ED5 POP BC        ;
 $7ED6 POP DE        ;
 $7ED7 POP HL        ;
 $7ED8 ADD HL,DE     ;
 $7ED9 DJNZ $7EBB    ;
 $7EDB LD A,($6A1D)  ;
 $7EDE CP $07        ;
 $7EE0 JR NZ,$7EF6   ;
 $7EE2 LD B,A        ;
 $7EE3 XOR A         ;
 $7EE4 LD ($5EB4),A  ;
 $7EE7 LD ($5E9C),A  ;
 $7EEA LD A,($5EAF)  ;
 $7EED AND A         ;
 $7EEE LD A,B        ;
 $7EEF JR Z,$7EF2    ;
 $7EF1 XOR A         ; { Set current message ID to 0 (none )
*$7EF2 LD ($5EB5),A  ; }
 $7EF5 RET           ;

; Routine at 7EF6
;
; Used by the routine at #R$7E8D.
c$7EF6 LD HL,($5EB2) ;
 $7EF9 LD B,$03      ;
*$7EFB LD A,(HL)     ;
 $7EFC CP $19        ;
 $7EFE JR Z,$7F04    ;
 $7F00 INC HL        ;
 $7F01 DJNZ $7EFB    ;
 $7F03 RET           ;

; Routine at 7F04
;
; Used by the routine at #R$7EF6.
c$7F04 LD A,($5EAF)  ;
 $7F07 AND A         ;
 $7F08 RET NZ        ;
 $7F09 LD A,$07      ;
 $7F0B LD ($5EA7),A  ;
 $7F0E LD ($5EAF),A  ;
 $7F11 LD A,$04      ; { Set message ID to 4 
 $7F13 LD ($5EB5),A  ; BONUS 100 POINTS }
 $7F16 LD HL,$5E73   ;
 $7F19 LD (HL),$14   ;
 $7F1B CALL $6E25    ;
 $7F1E RET           ;

; Print a message
;
; Used by the routines at #R$6053, #R$781B, #R$78B4 and #R$7C74.
;
; On entry, #R$5EB5 contains the ID of the message to display
c$7F1F LD A,($5EB5)  ; Put the string ID in #REGa.
 $7F22 AND A         ; Is the ID 0?
 $7F23 JR Z,$7F5B    ; Jump forward if it is
 $7F25 LD E,A        ; Store the string ID in #REGe.
 $7F26 LD D,$00      ; Set #REGd to 0.
 $7F28 CP $06        ; Is the ID 6? (#R$6ada)
 $7F2A JR NZ,$7F32   ; Jump forward if it isn't
 $7F2C LD HL,$5EBE   ;
 $7F2F LD (HL),D     ;
 $7F30 JR $7F3A      ;
*$7F32 CP $05        ; Is the ID less than 5?
 $7F34 JR C,$7F3A    ; Jump forward if it is 
 $7F36 XOR A         ;
 $7F37 LD ($5E9C),A  ;
*$7F3A LD HL,$6A27   ; Point #REGhl at the string table
 $7F3D LD A,E        ; Put the string ID in #REGa.
 $7F3E DEC A         ; Convert it to 0 offset.
 $7F3F ADD A,A       ; Double it to get a word offset.
 $7F40 LD E,A        ; { Add the base address of the string table.
 $7F41 ADD HL,DE     ; }
 $7F42 LD E,(HL)     ; { Point #REGde to the string.
 $7F43 INC HL        ;
 $7F44 LD D,(HL)     ; }
 $7F45 LD BC,$0021   ; Set the length to #N$21
 $7F48 CALL $203C    ; Print the string
 $7F4B LD HL,$5EB7   ;
 $7F4E XOR A         ; { Set message ID to 0 (none)
 $7F4F LD ($5EB5),A  ; }
 $7F52 CP (HL)       ;
 $7F53 JR NZ,$7F5B   ;
 $7F55 INC A         ;
 $7F56 LD ($5EB6),A  ;
 $7F59 LD (HL),$32   ;
*$7F5B LD A,($5EB7)  ;
 $7F5E AND A         ;
 $7F5F RET Z         ;
 $7F60 DEC A         ;
 $7F61 LD ($5EB7),A  ;
 $7F64 RET NZ        ;
 $7F65 LD ($5EB6),A  ;
 $7F68 LD DE,$6B4E   ; Print a string starting at #R$6B4E (empty space)
 $7F6B LD BC,$0021   ; Set the length to #N$21
 $7F6E CALL $203C    ; Print the string
 $7F71 RET           ;

; Unused
u$7F72 DEFS $8D
